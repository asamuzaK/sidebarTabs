{"version":3,"file":"css-color.min.js","sources":["../../node_modules/.pnpm/lru-cache@10.4.3/node_modules/lru-cache/dist/esm/index.js","../../src/js/common.ts","../../node_modules/.pnpm/@csstools+css-tokenizer@3.0.3/node_modules/@csstools/css-tokenizer/dist/index.mjs","../../node_modules/.pnpm/@csstools+css-parser-algorithms@3.0.4_@csstools+css-tokenizer@3.0.3/node_modules/@csstools/css-parser-algorithms/dist/index.mjs","../../node_modules/.pnpm/@csstools+css-calc@2.1.1_@csstools+css-parser-algorithms@3.0.4_@csstools+css-tokenizer@3.0.3__vlj2ym64kb6jtc2hg2j3v45yym/node_modules/@csstools/css-calc/dist/index.mjs","../../src/js/constant.ts","../../src/js/css-calc.ts","../../src/js/css-var.ts","../../node_modules/.pnpm/@csstools+color-helpers@5.0.1/node_modules/@csstools/color-helpers/dist/index.mjs","../../node_modules/.pnpm/@csstools+css-color-parser@3.0.7_@csstools+css-parser-algorithms@3.0.4_@csstools+css-tokenize_ibxja5du4eckqjiltqinzz6xve/node_modules/@csstools/css-color-parser/dist/index.mjs","../../src/js/relative-color.ts","../../src/js/resolve.ts","../../src/js/util.ts","../../src/js/color.ts","../../src/js/convert.ts"],"sourcesContent":["/**\n * @module LRUCache\n */\nconst perf = typeof performance === 'object' &&\n    performance &&\n    typeof performance.now === 'function'\n    ? performance\n    : Date;\nconst warned = new Set();\n/* c8 ignore start */\nconst PROCESS = (typeof process === 'object' && !!process ? process : {});\n/* c8 ignore start */\nconst emitWarning = (msg, type, code, fn) => {\n    typeof PROCESS.emitWarning === 'function'\n        ? PROCESS.emitWarning(msg, type, code, fn)\n        : console.error(`[${code}] ${type}: ${msg}`);\n};\nlet AC = globalThis.AbortController;\nlet AS = globalThis.AbortSignal;\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n    //@ts-ignore\n    AS = class AbortSignal {\n        onabort;\n        _onabort = [];\n        reason;\n        aborted = false;\n        addEventListener(_, fn) {\n            this._onabort.push(fn);\n        }\n    };\n    //@ts-ignore\n    AC = class AbortController {\n        constructor() {\n            warnACPolyfill();\n        }\n        signal = new AS();\n        abort(reason) {\n            if (this.signal.aborted)\n                return;\n            //@ts-ignore\n            this.signal.reason = reason;\n            //@ts-ignore\n            this.signal.aborted = true;\n            //@ts-ignore\n            for (const fn of this.signal._onabort) {\n                fn(reason);\n            }\n            this.signal.onabort?.(reason);\n        }\n    };\n    let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1';\n    const warnACPolyfill = () => {\n        if (!printACPolyfillWarning)\n            return;\n        printACPolyfillWarning = false;\n        emitWarning('AbortController is not defined. If using lru-cache in ' +\n            'node 14, load an AbortController polyfill from the ' +\n            '`node-abort-controller` package. A minimal polyfill is ' +\n            'provided for use by LRUCache.fetch(), but it should not be ' +\n            'relied upon in other contexts (eg, passing it to other APIs that ' +\n            'use AbortController/AbortSignal might have undesirable effects). ' +\n            'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.', 'NO_ABORT_CONTROLLER', 'ENOTSUP', warnACPolyfill);\n    };\n}\n/* c8 ignore stop */\nconst shouldWarn = (code) => !warned.has(code);\nconst TYPE = Symbol('type');\nconst isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max) => !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n        ? Uint8Array\n        : max <= Math.pow(2, 16)\n            ? Uint16Array\n            : max <= Math.pow(2, 32)\n                ? Uint32Array\n                : max <= Number.MAX_SAFE_INTEGER\n                    ? ZeroArray\n                    : null;\n/* c8 ignore stop */\nclass ZeroArray extends Array {\n    constructor(size) {\n        super(size);\n        this.fill(0);\n    }\n}\nclass Stack {\n    heap;\n    length;\n    // private constructor\n    static #constructing = false;\n    static create(max) {\n        const HeapCls = getUintArray(max);\n        if (!HeapCls)\n            return [];\n        Stack.#constructing = true;\n        const s = new Stack(max, HeapCls);\n        Stack.#constructing = false;\n        return s;\n    }\n    constructor(max, HeapCls) {\n        /* c8 ignore start */\n        if (!Stack.#constructing) {\n            throw new TypeError('instantiate Stack using Stack.create(n)');\n        }\n        /* c8 ignore stop */\n        this.heap = new HeapCls(max);\n        this.length = 0;\n    }\n    push(n) {\n        this.heap[this.length++] = n;\n    }\n    pop() {\n        return this.heap[--this.length];\n    }\n}\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nexport class LRUCache {\n    // options that cannot be changed without disaster\n    #max;\n    #maxSize;\n    #dispose;\n    #disposeAfter;\n    #fetchMethod;\n    #memoMethod;\n    /**\n     * {@link LRUCache.OptionsBase.ttl}\n     */\n    ttl;\n    /**\n     * {@link LRUCache.OptionsBase.ttlResolution}\n     */\n    ttlResolution;\n    /**\n     * {@link LRUCache.OptionsBase.ttlAutopurge}\n     */\n    ttlAutopurge;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnGet}\n     */\n    updateAgeOnGet;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnHas}\n     */\n    updateAgeOnHas;\n    /**\n     * {@link LRUCache.OptionsBase.allowStale}\n     */\n    allowStale;\n    /**\n     * {@link LRUCache.OptionsBase.noDisposeOnSet}\n     */\n    noDisposeOnSet;\n    /**\n     * {@link LRUCache.OptionsBase.noUpdateTTL}\n     */\n    noUpdateTTL;\n    /**\n     * {@link LRUCache.OptionsBase.maxEntrySize}\n     */\n    maxEntrySize;\n    /**\n     * {@link LRUCache.OptionsBase.sizeCalculation}\n     */\n    sizeCalculation;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n     */\n    noDeleteOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n     */\n    noDeleteOnStaleGet;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n     */\n    allowStaleOnFetchAbort;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n     */\n    allowStaleOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n     */\n    ignoreFetchAbort;\n    // computed properties\n    #size;\n    #calculatedSize;\n    #keyMap;\n    #keyList;\n    #valList;\n    #next;\n    #prev;\n    #head;\n    #tail;\n    #free;\n    #disposed;\n    #sizes;\n    #starts;\n    #ttls;\n    #hasDispose;\n    #hasFetchMethod;\n    #hasDisposeAfter;\n    /**\n     * Do not call this method unless you need to inspect the\n     * inner workings of the cache.  If anything returned by this\n     * object is modified in any way, strange breakage may occur.\n     *\n     * These fields are private for a reason!\n     *\n     * @internal\n     */\n    static unsafeExposeInternals(c) {\n        return {\n            // properties\n            starts: c.#starts,\n            ttls: c.#ttls,\n            sizes: c.#sizes,\n            keyMap: c.#keyMap,\n            keyList: c.#keyList,\n            valList: c.#valList,\n            next: c.#next,\n            prev: c.#prev,\n            get head() {\n                return c.#head;\n            },\n            get tail() {\n                return c.#tail;\n            },\n            free: c.#free,\n            // methods\n            isBackgroundFetch: (p) => c.#isBackgroundFetch(p),\n            backgroundFetch: (k, index, options, context) => c.#backgroundFetch(k, index, options, context),\n            moveToTail: (index) => c.#moveToTail(index),\n            indexes: (options) => c.#indexes(options),\n            rindexes: (options) => c.#rindexes(options),\n            isStale: (index) => c.#isStale(index),\n        };\n    }\n    // Protected read-only members\n    /**\n     * {@link LRUCache.OptionsBase.max} (read-only)\n     */\n    get max() {\n        return this.#max;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.maxSize} (read-only)\n     */\n    get maxSize() {\n        return this.#maxSize;\n    }\n    /**\n     * The total computed size of items in the cache (read-only)\n     */\n    get calculatedSize() {\n        return this.#calculatedSize;\n    }\n    /**\n     * The number of items stored in the cache (read-only)\n     */\n    get size() {\n        return this.#size;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n     */\n    get fetchMethod() {\n        return this.#fetchMethod;\n    }\n    get memoMethod() {\n        return this.#memoMethod;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.dispose} (read-only)\n     */\n    get dispose() {\n        return this.#dispose;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n     */\n    get disposeAfter() {\n        return this.#disposeAfter;\n    }\n    constructor(options) {\n        const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, memoMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort, } = options;\n        if (max !== 0 && !isPosInt(max)) {\n            throw new TypeError('max option must be a nonnegative integer');\n        }\n        const UintArray = max ? getUintArray(max) : Array;\n        if (!UintArray) {\n            throw new Error('invalid max value: ' + max);\n        }\n        this.#max = max;\n        this.#maxSize = maxSize;\n        this.maxEntrySize = maxEntrySize || this.#maxSize;\n        this.sizeCalculation = sizeCalculation;\n        if (this.sizeCalculation) {\n            if (!this.#maxSize && !this.maxEntrySize) {\n                throw new TypeError('cannot set sizeCalculation without setting maxSize or maxEntrySize');\n            }\n            if (typeof this.sizeCalculation !== 'function') {\n                throw new TypeError('sizeCalculation set to non-function');\n            }\n        }\n        if (memoMethod !== undefined &&\n            typeof memoMethod !== 'function') {\n            throw new TypeError('memoMethod must be a function if defined');\n        }\n        this.#memoMethod = memoMethod;\n        if (fetchMethod !== undefined &&\n            typeof fetchMethod !== 'function') {\n            throw new TypeError('fetchMethod must be a function if specified');\n        }\n        this.#fetchMethod = fetchMethod;\n        this.#hasFetchMethod = !!fetchMethod;\n        this.#keyMap = new Map();\n        this.#keyList = new Array(max).fill(undefined);\n        this.#valList = new Array(max).fill(undefined);\n        this.#next = new UintArray(max);\n        this.#prev = new UintArray(max);\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free = Stack.create(max);\n        this.#size = 0;\n        this.#calculatedSize = 0;\n        if (typeof dispose === 'function') {\n            this.#dispose = dispose;\n        }\n        if (typeof disposeAfter === 'function') {\n            this.#disposeAfter = disposeAfter;\n            this.#disposed = [];\n        }\n        else {\n            this.#disposeAfter = undefined;\n            this.#disposed = undefined;\n        }\n        this.#hasDispose = !!this.#dispose;\n        this.#hasDisposeAfter = !!this.#disposeAfter;\n        this.noDisposeOnSet = !!noDisposeOnSet;\n        this.noUpdateTTL = !!noUpdateTTL;\n        this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n        this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n        this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n        this.ignoreFetchAbort = !!ignoreFetchAbort;\n        // NB: maxEntrySize is set to maxSize if it's set\n        if (this.maxEntrySize !== 0) {\n            if (this.#maxSize !== 0) {\n                if (!isPosInt(this.#maxSize)) {\n                    throw new TypeError('maxSize must be a positive integer if specified');\n                }\n            }\n            if (!isPosInt(this.maxEntrySize)) {\n                throw new TypeError('maxEntrySize must be a positive integer if specified');\n            }\n            this.#initializeSizeTracking();\n        }\n        this.allowStale = !!allowStale;\n        this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n        this.updateAgeOnGet = !!updateAgeOnGet;\n        this.updateAgeOnHas = !!updateAgeOnHas;\n        this.ttlResolution =\n            isPosInt(ttlResolution) || ttlResolution === 0\n                ? ttlResolution\n                : 1;\n        this.ttlAutopurge = !!ttlAutopurge;\n        this.ttl = ttl || 0;\n        if (this.ttl) {\n            if (!isPosInt(this.ttl)) {\n                throw new TypeError('ttl must be a positive integer if specified');\n            }\n            this.#initializeTTLTracking();\n        }\n        // do not allow completely unbounded caches\n        if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n            throw new TypeError('At least one of max, maxSize, or ttl is required');\n        }\n        if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n            const code = 'LRU_CACHE_UNBOUNDED';\n            if (shouldWarn(code)) {\n                warned.add(code);\n                const msg = 'TTL caching without ttlAutopurge, max, or maxSize can ' +\n                    'result in unbounded memory consumption.';\n                emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache);\n            }\n        }\n    }\n    /**\n     * Return the number of ms left in the item's TTL. If item is not in cache,\n     * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n     */\n    getRemainingTTL(key) {\n        return this.#keyMap.has(key) ? Infinity : 0;\n    }\n    #initializeTTLTracking() {\n        const ttls = new ZeroArray(this.#max);\n        const starts = new ZeroArray(this.#max);\n        this.#ttls = ttls;\n        this.#starts = starts;\n        this.#setItemTTL = (index, ttl, start = perf.now()) => {\n            starts[index] = ttl !== 0 ? start : 0;\n            ttls[index] = ttl;\n            if (ttl !== 0 && this.ttlAutopurge) {\n                const t = setTimeout(() => {\n                    if (this.#isStale(index)) {\n                        this.#delete(this.#keyList[index], 'expire');\n                    }\n                }, ttl + 1);\n                // unref() not supported on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n        };\n        this.#updateItemAge = index => {\n            starts[index] = ttls[index] !== 0 ? perf.now() : 0;\n        };\n        this.#statusTTL = (status, index) => {\n            if (ttls[index]) {\n                const ttl = ttls[index];\n                const start = starts[index];\n                /* c8 ignore next */\n                if (!ttl || !start)\n                    return;\n                status.ttl = ttl;\n                status.start = start;\n                status.now = cachedNow || getNow();\n                const age = status.now - start;\n                status.remainingTTL = ttl - age;\n            }\n        };\n        // debounce calls to perf.now() to 1s so we're not hitting\n        // that costly call repeatedly.\n        let cachedNow = 0;\n        const getNow = () => {\n            const n = perf.now();\n            if (this.ttlResolution > 0) {\n                cachedNow = n;\n                const t = setTimeout(() => (cachedNow = 0), this.ttlResolution);\n                // not available on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n            return n;\n        };\n        this.getRemainingTTL = key => {\n            const index = this.#keyMap.get(key);\n            if (index === undefined) {\n                return 0;\n            }\n            const ttl = ttls[index];\n            const start = starts[index];\n            if (!ttl || !start) {\n                return Infinity;\n            }\n            const age = (cachedNow || getNow()) - start;\n            return ttl - age;\n        };\n        this.#isStale = index => {\n            const s = starts[index];\n            const t = ttls[index];\n            return !!t && !!s && (cachedNow || getNow()) - s > t;\n        };\n    }\n    // conditionally set private methods related to TTL\n    #updateItemAge = () => { };\n    #statusTTL = () => { };\n    #setItemTTL = () => { };\n    /* c8 ignore stop */\n    #isStale = () => false;\n    #initializeSizeTracking() {\n        const sizes = new ZeroArray(this.#max);\n        this.#calculatedSize = 0;\n        this.#sizes = sizes;\n        this.#removeItemSize = index => {\n            this.#calculatedSize -= sizes[index];\n            sizes[index] = 0;\n        };\n        this.#requireSize = (k, v, size, sizeCalculation) => {\n            // provisionally accept background fetches.\n            // actual value size will be checked when they return.\n            if (this.#isBackgroundFetch(v)) {\n                return 0;\n            }\n            if (!isPosInt(size)) {\n                if (sizeCalculation) {\n                    if (typeof sizeCalculation !== 'function') {\n                        throw new TypeError('sizeCalculation must be a function');\n                    }\n                    size = sizeCalculation(v, k);\n                    if (!isPosInt(size)) {\n                        throw new TypeError('sizeCalculation return invalid (expect positive integer)');\n                    }\n                }\n                else {\n                    throw new TypeError('invalid size value (must be positive integer). ' +\n                        'When maxSize or maxEntrySize is used, sizeCalculation ' +\n                        'or size must be set.');\n                }\n            }\n            return size;\n        };\n        this.#addItemSize = (index, size, status) => {\n            sizes[index] = size;\n            if (this.#maxSize) {\n                const maxSize = this.#maxSize - sizes[index];\n                while (this.#calculatedSize > maxSize) {\n                    this.#evict(true);\n                }\n            }\n            this.#calculatedSize += sizes[index];\n            if (status) {\n                status.entrySize = size;\n                status.totalCalculatedSize = this.#calculatedSize;\n            }\n        };\n    }\n    #removeItemSize = _i => { };\n    #addItemSize = (_i, _s, _st) => { };\n    #requireSize = (_k, _v, size, sizeCalculation) => {\n        if (size || sizeCalculation) {\n            throw new TypeError('cannot set size without setting maxSize or maxEntrySize on cache');\n        }\n        return 0;\n    };\n    *#indexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#tail; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#head) {\n                    break;\n                }\n                else {\n                    i = this.#prev[i];\n                }\n            }\n        }\n    }\n    *#rindexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#head; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#tail) {\n                    break;\n                }\n                else {\n                    i = this.#next[i];\n                }\n            }\n        }\n    }\n    #isValidIndex(index) {\n        return (index !== undefined &&\n            this.#keyMap.get(this.#keyList[index]) === index);\n    }\n    /**\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from most recently used to least recently used.\n     */\n    *entries() {\n        for (const i of this.#indexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.entries}\n     *\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from least recently used to most recently used.\n     */\n    *rentries() {\n        for (const i of this.#rindexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the keys in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *keys() {\n        for (const i of this.#indexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.keys}\n     *\n     * Return a generator yielding the keys in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rkeys() {\n        for (const i of this.#rindexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the values in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *values() {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.values}\n     *\n     * Return a generator yielding the values in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rvalues() {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Iterating over the cache itself yields the same results as\n     * {@link LRUCache.entries}\n     */\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n     * A String value that is used in the creation of the default string\n     * description of an object. Called by the built-in method\n     * `Object.prototype.toString`.\n     */\n    [Symbol.toStringTag] = 'LRUCache';\n    /**\n     * Find a value for which the supplied fn method returns a truthy value,\n     * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n     */\n    find(fn, getOptions = {}) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            if (fn(value, this.#keyList[i], this)) {\n                return this.get(this.#keyList[i], getOptions);\n            }\n        }\n    }\n    /**\n     * Call the supplied function on each item in the cache, in order from most\n     * recently used to least recently used.\n     *\n     * `fn` is called as `fn(value, key, cache)`.\n     *\n     * If `thisp` is provided, function will be called in the `this`-context of\n     * the provided object, or the cache if no `thisp` object is provided.\n     *\n     * Does not update age or recenty of use, or iterate over stale values.\n     */\n    forEach(fn, thisp = this) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * The same as {@link LRUCache.forEach} but items are iterated over in\n     * reverse order.  (ie, less recently used items are iterated over first.)\n     */\n    rforEach(fn, thisp = this) {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * Delete any stale entries. Returns true if anything was removed,\n     * false otherwise.\n     */\n    purgeStale() {\n        let deleted = false;\n        for (const i of this.#rindexes({ allowStale: true })) {\n            if (this.#isStale(i)) {\n                this.#delete(this.#keyList[i], 'expire');\n                deleted = true;\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Get the extended info about a given entry, to get its value, size, and\n     * TTL info simultaneously. Returns `undefined` if the key is not present.\n     *\n     * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n     * serialization, the `start` value is always the current timestamp, and the\n     * `ttl` is a calculated remaining time to live (negative if expired).\n     *\n     * Always returns stale values, if their info is found in the cache, so be\n     * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n     * if relevant.\n     */\n    info(key) {\n        const i = this.#keyMap.get(key);\n        if (i === undefined)\n            return undefined;\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v)\n            ? v.__staleWhileFetching\n            : v;\n        if (value === undefined)\n            return undefined;\n        const entry = { value };\n        if (this.#ttls && this.#starts) {\n            const ttl = this.#ttls[i];\n            const start = this.#starts[i];\n            if (ttl && start) {\n                const remain = ttl - (perf.now() - start);\n                entry.ttl = remain;\n                entry.start = Date.now();\n            }\n        }\n        if (this.#sizes) {\n            entry.size = this.#sizes[i];\n        }\n        return entry;\n    }\n    /**\n     * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n     * passed to {@link LRLUCache#load}.\n     *\n     * The `start` fields are calculated relative to a portable `Date.now()`\n     * timestamp, even if `performance.now()` is available.\n     *\n     * Stale entries are always included in the `dump`, even if\n     * {@link LRUCache.OptionsBase.allowStale} is false.\n     *\n     * Note: this returns an actual array, not a generator, so it can be more\n     * easily passed around.\n     */\n    dump() {\n        const arr = [];\n        for (const i of this.#indexes({ allowStale: true })) {\n            const key = this.#keyList[i];\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined || key === undefined)\n                continue;\n            const entry = { value };\n            if (this.#ttls && this.#starts) {\n                entry.ttl = this.#ttls[i];\n                // always dump the start relative to a portable timestamp\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = perf.now() - this.#starts[i];\n                entry.start = Math.floor(Date.now() - age);\n            }\n            if (this.#sizes) {\n                entry.size = this.#sizes[i];\n            }\n            arr.unshift([key, entry]);\n        }\n        return arr;\n    }\n    /**\n     * Reset the cache and load in the items in entries in the order listed.\n     *\n     * The shape of the resulting cache may be different if the same options are\n     * not used in both caches.\n     *\n     * The `start` fields are assumed to be calculated relative to a portable\n     * `Date.now()` timestamp, even if `performance.now()` is available.\n     */\n    load(arr) {\n        this.clear();\n        for (const [key, entry] of arr) {\n            if (entry.start) {\n                // entry.start is a portable timestamp, but we may be using\n                // node's performance.now(), so calculate the offset, so that\n                // we get the intended remaining TTL, no matter how long it's\n                // been on ice.\n                //\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = Date.now() - entry.start;\n                entry.start = perf.now() - age;\n            }\n            this.set(key, entry.value, entry);\n        }\n    }\n    /**\n     * Add a value to the cache.\n     *\n     * Note: if `undefined` is specified as a value, this is an alias for\n     * {@link LRUCache#delete}\n     *\n     * Fields on the {@link LRUCache.SetOptions} options param will override\n     * their corresponding values in the constructor options for the scope\n     * of this single `set()` operation.\n     *\n     * If `start` is provided, then that will set the effective start\n     * time for the TTL calculation. Note that this must be a previous\n     * value of `performance.now()` if supported, or a previous value of\n     * `Date.now()` if not.\n     *\n     * Options object may also include `size`, which will prevent\n     * calling the `sizeCalculation` function and just use the specified\n     * number if it is a positive integer, and `noDisposeOnSet` which\n     * will prevent calling a `dispose` function in the case of\n     * overwrites.\n     *\n     * If the `size` (or return value of `sizeCalculation`) for a given\n     * entry is greater than `maxEntrySize`, then the item will not be\n     * added to the cache.\n     *\n     * Will update the recency of the entry.\n     *\n     * If the value is `undefined`, then this is an alias for\n     * `cache.delete(key)`. `undefined` is never stored in the cache.\n     */\n    set(k, v, setOptions = {}) {\n        if (v === undefined) {\n            this.delete(k);\n            return this;\n        }\n        const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status, } = setOptions;\n        let { noUpdateTTL = this.noUpdateTTL } = setOptions;\n        const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);\n        // if the item doesn't fit, don't do anything\n        // NB: maxEntrySize set to maxSize by default\n        if (this.maxEntrySize && size > this.maxEntrySize) {\n            if (status) {\n                status.set = 'miss';\n                status.maxEntrySizeExceeded = true;\n            }\n            // have to delete, in case something is there already.\n            this.#delete(k, 'set');\n            return this;\n        }\n        let index = this.#size === 0 ? undefined : this.#keyMap.get(k);\n        if (index === undefined) {\n            // addition\n            index = (this.#size === 0\n                ? this.#tail\n                : this.#free.length !== 0\n                    ? this.#free.pop()\n                    : this.#size === this.#max\n                        ? this.#evict(false)\n                        : this.#size);\n            this.#keyList[index] = k;\n            this.#valList[index] = v;\n            this.#keyMap.set(k, index);\n            this.#next[this.#tail] = index;\n            this.#prev[index] = this.#tail;\n            this.#tail = index;\n            this.#size++;\n            this.#addItemSize(index, size, status);\n            if (status)\n                status.set = 'add';\n            noUpdateTTL = false;\n        }\n        else {\n            // update\n            this.#moveToTail(index);\n            const oldVal = this.#valList[index];\n            if (v !== oldVal) {\n                if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n                    oldVal.__abortController.abort(new Error('replaced'));\n                    const { __staleWhileFetching: s } = oldVal;\n                    if (s !== undefined && !noDisposeOnSet) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(s, k, 'set');\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([s, k, 'set']);\n                        }\n                    }\n                }\n                else if (!noDisposeOnSet) {\n                    if (this.#hasDispose) {\n                        this.#dispose?.(oldVal, k, 'set');\n                    }\n                    if (this.#hasDisposeAfter) {\n                        this.#disposed?.push([oldVal, k, 'set']);\n                    }\n                }\n                this.#removeItemSize(index);\n                this.#addItemSize(index, size, status);\n                this.#valList[index] = v;\n                if (status) {\n                    status.set = 'replace';\n                    const oldValue = oldVal && this.#isBackgroundFetch(oldVal)\n                        ? oldVal.__staleWhileFetching\n                        : oldVal;\n                    if (oldValue !== undefined)\n                        status.oldValue = oldValue;\n                }\n            }\n            else if (status) {\n                status.set = 'update';\n            }\n        }\n        if (ttl !== 0 && !this.#ttls) {\n            this.#initializeTTLTracking();\n        }\n        if (this.#ttls) {\n            if (!noUpdateTTL) {\n                this.#setItemTTL(index, ttl, start);\n            }\n            if (status)\n                this.#statusTTL(status, index);\n        }\n        if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return this;\n    }\n    /**\n     * Evict the least recently used item, returning its value or\n     * `undefined` if cache is empty.\n     */\n    pop() {\n        try {\n            while (this.#size) {\n                const val = this.#valList[this.#head];\n                this.#evict(true);\n                if (this.#isBackgroundFetch(val)) {\n                    if (val.__staleWhileFetching) {\n                        return val.__staleWhileFetching;\n                    }\n                }\n                else if (val !== undefined) {\n                    return val;\n                }\n            }\n        }\n        finally {\n            if (this.#hasDisposeAfter && this.#disposed) {\n                const dt = this.#disposed;\n                let task;\n                while ((task = dt?.shift())) {\n                    this.#disposeAfter?.(...task);\n                }\n            }\n        }\n    }\n    #evict(free) {\n        const head = this.#head;\n        const k = this.#keyList[head];\n        const v = this.#valList[head];\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('evicted'));\n        }\n        else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n                this.#dispose?.(v, k, 'evict');\n            }\n            if (this.#hasDisposeAfter) {\n                this.#disposed?.push([v, k, 'evict']);\n            }\n        }\n        this.#removeItemSize(head);\n        // if we aren't about to use the index, then null these out\n        if (free) {\n            this.#keyList[head] = undefined;\n            this.#valList[head] = undefined;\n            this.#free.push(head);\n        }\n        if (this.#size === 1) {\n            this.#head = this.#tail = 0;\n            this.#free.length = 0;\n        }\n        else {\n            this.#head = this.#next[head];\n        }\n        this.#keyMap.delete(k);\n        this.#size--;\n        return head;\n    }\n    /**\n     * Check if a key is in the cache, without updating the recency of use.\n     * Will return false if the item is stale, even though it is technically\n     * in the cache.\n     *\n     * Check if a key is in the cache, without updating the recency of\n     * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n     * to `true` in either the options or the constructor.\n     *\n     * Will return `false` if the item is stale, even though it is technically in\n     * the cache. The difference can be determined (if it matters) by using a\n     * `status` argument, and inspecting the `has` field.\n     *\n     * Will not update item age unless\n     * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n     */\n    has(k, hasOptions = {}) {\n        const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v) &&\n                v.__staleWhileFetching === undefined) {\n                return false;\n            }\n            if (!this.#isStale(index)) {\n                if (updateAgeOnHas) {\n                    this.#updateItemAge(index);\n                }\n                if (status) {\n                    status.has = 'hit';\n                    this.#statusTTL(status, index);\n                }\n                return true;\n            }\n            else if (status) {\n                status.has = 'stale';\n                this.#statusTTL(status, index);\n            }\n        }\n        else if (status) {\n            status.has = 'miss';\n        }\n        return false;\n    }\n    /**\n     * Like {@link LRUCache#get} but doesn't update recency or delete stale\n     * items.\n     *\n     * Returns `undefined` if the item is stale, unless\n     * {@link LRUCache.OptionsBase.allowStale} is set.\n     */\n    peek(k, peekOptions = {}) {\n        const { allowStale = this.allowStale } = peekOptions;\n        const index = this.#keyMap.get(k);\n        if (index === undefined ||\n            (!allowStale && this.#isStale(index))) {\n            return;\n        }\n        const v = this.#valList[index];\n        // either stale and allowed, or forcing a refresh of non-stale value\n        return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n    }\n    #backgroundFetch(k, index, options, context) {\n        const v = index === undefined ? undefined : this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n            return v;\n        }\n        const ac = new AC();\n        const { signal } = options;\n        // when/if our AC signals, then stop listening to theirs.\n        signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n            signal: ac.signal,\n        });\n        const fetchOpts = {\n            signal: ac.signal,\n            options,\n            context,\n        };\n        const cb = (v, updateCache = false) => {\n            const { aborted } = ac.signal;\n            const ignoreAbort = options.ignoreFetchAbort && v !== undefined;\n            if (options.status) {\n                if (aborted && !updateCache) {\n                    options.status.fetchAborted = true;\n                    options.status.fetchError = ac.signal.reason;\n                    if (ignoreAbort)\n                        options.status.fetchAbortIgnored = true;\n                }\n                else {\n                    options.status.fetchResolved = true;\n                }\n            }\n            if (aborted && !ignoreAbort && !updateCache) {\n                return fetchFail(ac.signal.reason);\n            }\n            // either we didn't abort, and are still here, or we did, and ignored\n            const bf = p;\n            if (this.#valList[index] === p) {\n                if (v === undefined) {\n                    if (bf.__staleWhileFetching) {\n                        this.#valList[index] = bf.__staleWhileFetching;\n                    }\n                    else {\n                        this.#delete(k, 'fetch');\n                    }\n                }\n                else {\n                    if (options.status)\n                        options.status.fetchUpdated = true;\n                    this.set(k, v, fetchOpts.options);\n                }\n            }\n            return v;\n        };\n        const eb = (er) => {\n            if (options.status) {\n                options.status.fetchRejected = true;\n                options.status.fetchError = er;\n            }\n            return fetchFail(er);\n        };\n        const fetchFail = (er) => {\n            const { aborted } = ac.signal;\n            const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n            const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n            const noDelete = allowStale || options.noDeleteOnFetchRejection;\n            const bf = p;\n            if (this.#valList[index] === p) {\n                // if we allow stale on fetch rejections, then we need to ensure that\n                // the stale value is not removed from the cache when the fetch fails.\n                const del = !noDelete || bf.__staleWhileFetching === undefined;\n                if (del) {\n                    this.#delete(k, 'fetch');\n                }\n                else if (!allowStaleAborted) {\n                    // still replace the *promise* with the stale value,\n                    // since we are done with the promise at this point.\n                    // leave it untouched if we're still waiting for an\n                    // aborted background fetch that hasn't yet returned.\n                    this.#valList[index] = bf.__staleWhileFetching;\n                }\n            }\n            if (allowStale) {\n                if (options.status && bf.__staleWhileFetching !== undefined) {\n                    options.status.returnedStale = true;\n                }\n                return bf.__staleWhileFetching;\n            }\n            else if (bf.__returned === bf) {\n                throw er;\n            }\n        };\n        const pcall = (res, rej) => {\n            const fmp = this.#fetchMethod?.(k, v, fetchOpts);\n            if (fmp && fmp instanceof Promise) {\n                fmp.then(v => res(v === undefined ? undefined : v), rej);\n            }\n            // ignored, we go until we finish, regardless.\n            // defer check until we are actually aborting,\n            // so fetchMethod can override.\n            ac.signal.addEventListener('abort', () => {\n                if (!options.ignoreFetchAbort ||\n                    options.allowStaleOnFetchAbort) {\n                    res(undefined);\n                    // when it eventually resolves, update the cache.\n                    if (options.allowStaleOnFetchAbort) {\n                        res = v => cb(v, true);\n                    }\n                }\n            });\n        };\n        if (options.status)\n            options.status.fetchDispatched = true;\n        const p = new Promise(pcall).then(cb, eb);\n        const bf = Object.assign(p, {\n            __abortController: ac,\n            __staleWhileFetching: v,\n            __returned: undefined,\n        });\n        if (index === undefined) {\n            // internal, don't expose status.\n            this.set(k, bf, { ...fetchOpts.options, status: undefined });\n            index = this.#keyMap.get(k);\n        }\n        else {\n            this.#valList[index] = bf;\n        }\n        return bf;\n    }\n    #isBackgroundFetch(p) {\n        if (!this.#hasFetchMethod)\n            return false;\n        const b = p;\n        return (!!b &&\n            b instanceof Promise &&\n            b.hasOwnProperty('__staleWhileFetching') &&\n            b.__abortController instanceof AC);\n    }\n    async fetch(k, fetchOptions = {}) {\n        const { \n        // get options\n        allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, \n        // set options\n        ttl = this.ttl, noDisposeOnSet = this.noDisposeOnSet, size = 0, sizeCalculation = this.sizeCalculation, noUpdateTTL = this.noUpdateTTL, \n        // fetch exclusive options\n        noDeleteOnFetchRejection = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection = this.allowStaleOnFetchRejection, ignoreFetchAbort = this.ignoreFetchAbort, allowStaleOnFetchAbort = this.allowStaleOnFetchAbort, context, forceRefresh = false, status, signal, } = fetchOptions;\n        if (!this.#hasFetchMethod) {\n            if (status)\n                status.fetch = 'get';\n            return this.get(k, {\n                allowStale,\n                updateAgeOnGet,\n                noDeleteOnStaleGet,\n                status,\n            });\n        }\n        const options = {\n            allowStale,\n            updateAgeOnGet,\n            noDeleteOnStaleGet,\n            ttl,\n            noDisposeOnSet,\n            size,\n            sizeCalculation,\n            noUpdateTTL,\n            noDeleteOnFetchRejection,\n            allowStaleOnFetchRejection,\n            allowStaleOnFetchAbort,\n            ignoreFetchAbort,\n            status,\n            signal,\n        };\n        let index = this.#keyMap.get(k);\n        if (index === undefined) {\n            if (status)\n                status.fetch = 'miss';\n            const p = this.#backgroundFetch(k, index, options, context);\n            return (p.__returned = p);\n        }\n        else {\n            // in cache, maybe already fetching\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                const stale = allowStale && v.__staleWhileFetching !== undefined;\n                if (status) {\n                    status.fetch = 'inflight';\n                    if (stale)\n                        status.returnedStale = true;\n                }\n                return stale ? v.__staleWhileFetching : (v.__returned = v);\n            }\n            // if we force a refresh, that means do NOT serve the cached value,\n            // unless we are already in the process of refreshing the cache.\n            const isStale = this.#isStale(index);\n            if (!forceRefresh && !isStale) {\n                if (status)\n                    status.fetch = 'hit';\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                if (status)\n                    this.#statusTTL(status, index);\n                return v;\n            }\n            // ok, it is stale or a forced refresh, and not already fetching.\n            // refresh the cache.\n            const p = this.#backgroundFetch(k, index, options, context);\n            const hasStale = p.__staleWhileFetching !== undefined;\n            const staleVal = hasStale && allowStale;\n            if (status) {\n                status.fetch = isStale ? 'stale' : 'refresh';\n                if (staleVal && isStale)\n                    status.returnedStale = true;\n            }\n            return staleVal ? p.__staleWhileFetching : (p.__returned = p);\n        }\n    }\n    async forceFetch(k, fetchOptions = {}) {\n        const v = await this.fetch(k, fetchOptions);\n        if (v === undefined)\n            throw new Error('fetch() returned undefined');\n        return v;\n    }\n    memo(k, memoOptions = {}) {\n        const memoMethod = this.#memoMethod;\n        if (!memoMethod) {\n            throw new Error('no memoMethod provided to constructor');\n        }\n        const { context, forceRefresh, ...options } = memoOptions;\n        const v = this.get(k, options);\n        if (!forceRefresh && v !== undefined)\n            return v;\n        const vv = memoMethod(k, v, {\n            options,\n            context,\n        });\n        this.set(k, vv, options);\n        return vv;\n    }\n    /**\n     * Return a value from the cache. Will update the recency of the cache\n     * entry found.\n     *\n     * If the key is not found, get() will return `undefined`.\n     */\n    get(k, getOptions = {}) {\n        const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status, } = getOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const value = this.#valList[index];\n            const fetching = this.#isBackgroundFetch(value);\n            if (status)\n                this.#statusTTL(status, index);\n            if (this.#isStale(index)) {\n                if (status)\n                    status.get = 'stale';\n                // delete only if not an in-flight background fetch\n                if (!fetching) {\n                    if (!noDeleteOnStaleGet) {\n                        this.#delete(k, 'expire');\n                    }\n                    if (status && allowStale)\n                        status.returnedStale = true;\n                    return allowStale ? value : undefined;\n                }\n                else {\n                    if (status &&\n                        allowStale &&\n                        value.__staleWhileFetching !== undefined) {\n                        status.returnedStale = true;\n                    }\n                    return allowStale ? value.__staleWhileFetching : undefined;\n                }\n            }\n            else {\n                if (status)\n                    status.get = 'hit';\n                // if we're currently fetching it, we don't actually have it yet\n                // it's not stale, which means this isn't a staleWhileRefetching.\n                // If it's not stale, and fetching, AND has a __staleWhileFetching\n                // value, then that means the user fetched with {forceRefresh:true},\n                // so it's safe to return that value.\n                if (fetching) {\n                    return value.__staleWhileFetching;\n                }\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                return value;\n            }\n        }\n        else if (status) {\n            status.get = 'miss';\n        }\n    }\n    #connect(p, n) {\n        this.#prev[n] = p;\n        this.#next[p] = n;\n    }\n    #moveToTail(index) {\n        // if tail already, nothing to do\n        // if head, move head to next[index]\n        // else\n        //   move next[prev[index]] to next[index] (head has no prev)\n        //   move prev[next[index]] to prev[index]\n        // prev[index] = tail\n        // next[tail] = index\n        // tail = index\n        if (index !== this.#tail) {\n            if (index === this.#head) {\n                this.#head = this.#next[index];\n            }\n            else {\n                this.#connect(this.#prev[index], this.#next[index]);\n            }\n            this.#connect(this.#tail, index);\n            this.#tail = index;\n        }\n    }\n    /**\n     * Deletes a key out of the cache.\n     *\n     * Returns true if the key was deleted, false otherwise.\n     */\n    delete(k) {\n        return this.#delete(k, 'delete');\n    }\n    #delete(k, reason) {\n        let deleted = false;\n        if (this.#size !== 0) {\n            const index = this.#keyMap.get(k);\n            if (index !== undefined) {\n                deleted = true;\n                if (this.#size === 1) {\n                    this.#clear(reason);\n                }\n                else {\n                    this.#removeItemSize(index);\n                    const v = this.#valList[index];\n                    if (this.#isBackgroundFetch(v)) {\n                        v.__abortController.abort(new Error('deleted'));\n                    }\n                    else if (this.#hasDispose || this.#hasDisposeAfter) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(v, k, reason);\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([v, k, reason]);\n                        }\n                    }\n                    this.#keyMap.delete(k);\n                    this.#keyList[index] = undefined;\n                    this.#valList[index] = undefined;\n                    if (index === this.#tail) {\n                        this.#tail = this.#prev[index];\n                    }\n                    else if (index === this.#head) {\n                        this.#head = this.#next[index];\n                    }\n                    else {\n                        const pi = this.#prev[index];\n                        this.#next[pi] = this.#next[index];\n                        const ni = this.#next[index];\n                        this.#prev[ni] = this.#prev[index];\n                    }\n                    this.#size--;\n                    this.#free.push(index);\n                }\n            }\n        }\n        if (this.#hasDisposeAfter && this.#disposed?.length) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Clear the cache entirely, throwing away all values.\n     */\n    clear() {\n        return this.#clear('delete');\n    }\n    #clear(reason) {\n        for (const index of this.#rindexes({ allowStale: true })) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                v.__abortController.abort(new Error('deleted'));\n            }\n            else {\n                const k = this.#keyList[index];\n                if (this.#hasDispose) {\n                    this.#dispose?.(v, k, reason);\n                }\n                if (this.#hasDisposeAfter) {\n                    this.#disposed?.push([v, k, reason]);\n                }\n            }\n        }\n        this.#keyMap.clear();\n        this.#valList.fill(undefined);\n        this.#keyList.fill(undefined);\n        if (this.#ttls && this.#starts) {\n            this.#ttls.fill(0);\n            this.#starts.fill(0);\n        }\n        if (this.#sizes) {\n            this.#sizes.fill(0);\n        }\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free.length = 0;\n        this.#calculatedSize = 0;\n        this.#size = 0;\n        if (this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * common\n */\n\n/* constants */\nconst TYPE_FROM = 8;\nconst TYPE_TO = -1;\n\n/**\n * get type\n * @param o - object to check\n * @returns type of object\n */\nexport const getType = (o: unknown): string =>\n  Object.prototype.toString.call(o).slice(TYPE_FROM, TYPE_TO);\n\n/**\n * is string\n * @param o - object to check\n * @returns result\n */\nexport const isString = (o: unknown): o is string =>\n  typeof o === 'string' || o instanceof String;\n\n/**\n * is string or number\n * @param o - object to check\n * @returns result\n */\nexport const isStringOrNumber = (o: unknown): boolean =>\n  isString(o) || typeof o === 'number';\n","class ParseError extends Error{sourceStart;sourceEnd;parserState;constructor(e,n,t,o){super(e),this.name=\"ParseError\",this.sourceStart=n,this.sourceEnd=t,this.parserState=o}}class ParseErrorWithToken extends ParseError{token;constructor(e,n,t,o,r){super(e,n,t,o),this.token=r}}const e={UnexpectedNewLineInString:\"Unexpected newline while consuming a string token.\",UnexpectedEOFInString:\"Unexpected EOF while consuming a string token.\",UnexpectedEOFInComment:\"Unexpected EOF while consuming a comment.\",UnexpectedEOFInURL:\"Unexpected EOF while consuming a url token.\",UnexpectedEOFInEscapedCodePoint:\"Unexpected EOF while consuming an escaped code point.\",UnexpectedCharacterInURL:\"Unexpected character while consuming a url token.\",InvalidEscapeSequenceInURL:\"Invalid escape sequence while consuming a url token.\",InvalidEscapeSequenceAfterBackslash:'Invalid escape sequence after \"\\\\\"'},n=\"undefined\"!=typeof globalThis&&\"structuredClone\"in globalThis;function cloneTokens(e){return n?structuredClone(e):JSON.parse(JSON.stringify(e))}function stringify(...e){let n=\"\";for(let t=0;t<e.length;t++)n+=e[t][1];return n}const t=13,o=45,r=10,i=43,s=65533;function checkIfFourCodePointsWouldStartCDO(e){return 60===e.source.codePointAt(e.cursor)&&33===e.source.codePointAt(e.cursor+1)&&e.source.codePointAt(e.cursor+2)===o&&e.source.codePointAt(e.cursor+3)===o}function isDigitCodePoint(e){return e>=48&&e<=57}function isUppercaseLetterCodePoint(e){return e>=65&&e<=90}function isLowercaseLetterCodePoint(e){return e>=97&&e<=122}function isHexDigitCodePoint(e){return e>=48&&e<=57||e>=97&&e<=102||e>=65&&e<=70}function isLetterCodePoint(e){return isLowercaseLetterCodePoint(e)||isUppercaseLetterCodePoint(e)}function isIdentStartCodePoint(e){return isLetterCodePoint(e)||isNonASCII_IdentCodePoint(e)||95===e}function isIdentCodePoint(e){return isIdentStartCodePoint(e)||isDigitCodePoint(e)||e===o}function isNonASCII_IdentCodePoint(e){return 183===e||8204===e||8205===e||8255===e||8256===e||8204===e||(192<=e&&e<=214||216<=e&&e<=246||248<=e&&e<=893||895<=e&&e<=8191||8304<=e&&e<=8591||11264<=e&&e<=12271||12289<=e&&e<=55295||63744<=e&&e<=64975||65008<=e&&e<=65533||(0===e||(!!isSurrogate(e)||e>=65536)))}function isNewLine(e){return e===r||e===t||12===e}function isWhitespace(e){return 32===e||e===r||9===e||e===t||12===e}function isSurrogate(e){return e>=55296&&e<=57343}function checkIfTwoCodePointsAreAValidEscape(e){return 92===e.source.codePointAt(e.cursor)&&!isNewLine(e.source.codePointAt(e.cursor+1)??-1)}function checkIfThreeCodePointsWouldStartAnIdentSequence(e,n){return n.source.codePointAt(n.cursor)===o?n.source.codePointAt(n.cursor+1)===o||(!!isIdentStartCodePoint(n.source.codePointAt(n.cursor+1)??-1)||92===n.source.codePointAt(n.cursor+1)&&!isNewLine(n.source.codePointAt(n.cursor+2)??-1)):!!isIdentStartCodePoint(n.source.codePointAt(n.cursor)??-1)||checkIfTwoCodePointsAreAValidEscape(n)}function checkIfThreeCodePointsWouldStartANumber(e){return e.source.codePointAt(e.cursor)===i||e.source.codePointAt(e.cursor)===o?!!isDigitCodePoint(e.source.codePointAt(e.cursor+1)??-1)||46===e.source.codePointAt(e.cursor+1)&&isDigitCodePoint(e.source.codePointAt(e.cursor+2)??-1):46===e.source.codePointAt(e.cursor)?isDigitCodePoint(e.source.codePointAt(e.cursor+1)??-1):isDigitCodePoint(e.source.codePointAt(e.cursor)??-1)}function checkIfTwoCodePointsStartAComment(e){return 47===e.source.codePointAt(e.cursor)&&42===e.source.codePointAt(e.cursor+1)}function checkIfThreeCodePointsWouldStartCDC(e){return e.source.codePointAt(e.cursor)===o&&e.source.codePointAt(e.cursor+1)===o&&62===e.source.codePointAt(e.cursor+2)}var c,a,u;function mirrorVariantType(e){switch(e){case c.OpenParen:return c.CloseParen;case c.CloseParen:return c.OpenParen;case c.OpenCurly:return c.CloseCurly;case c.CloseCurly:return c.OpenCurly;case c.OpenSquare:return c.CloseSquare;case c.CloseSquare:return c.OpenSquare;default:return null}}function mirrorVariant(e){switch(e[0]){case c.OpenParen:return[c.CloseParen,\")\",-1,-1,void 0];case c.CloseParen:return[c.OpenParen,\"(\",-1,-1,void 0];case c.OpenCurly:return[c.CloseCurly,\"}\",-1,-1,void 0];case c.CloseCurly:return[c.OpenCurly,\"{\",-1,-1,void 0];case c.OpenSquare:return[c.CloseSquare,\"]\",-1,-1,void 0];case c.CloseSquare:return[c.OpenSquare,\"[\",-1,-1,void 0];default:return null}}function consumeComment(n,t){for(t.advanceCodePoint(2);;){const o=t.readCodePoint();if(void 0===o){const o=[c.Comment,t.source.slice(t.representationStart,t.representationEnd+1),t.representationStart,t.representationEnd,void 0];return n.onParseError(new ParseErrorWithToken(e.UnexpectedEOFInComment,t.representationStart,t.representationEnd,[\"4.3.2. Consume comments\",\"Unexpected EOF\"],o)),o}if(42===o&&(void 0!==t.source.codePointAt(t.cursor)&&47===t.source.codePointAt(t.cursor))){t.advanceCodePoint();break}}return[c.Comment,t.source.slice(t.representationStart,t.representationEnd+1),t.representationStart,t.representationEnd,void 0]}function consumeEscapedCodePoint(n,o){const i=o.readCodePoint();if(void 0===i)return n.onParseError(new ParseError(e.UnexpectedEOFInEscapedCodePoint,o.representationStart,o.representationEnd,[\"4.3.7. Consume an escaped code point\",\"Unexpected EOF\"])),s;if(isHexDigitCodePoint(i)){const e=[i];let n;for(;void 0!==(n=o.source.codePointAt(o.cursor))&&isHexDigitCodePoint(n)&&e.length<6;)e.push(n),o.advanceCodePoint();isWhitespace(o.source.codePointAt(o.cursor)??-1)&&(o.source.codePointAt(o.cursor)===t&&o.source.codePointAt(o.cursor+1)===r&&o.advanceCodePoint(),o.advanceCodePoint());const c=parseInt(String.fromCodePoint(...e),16);return 0===c||isSurrogate(c)||c>1114111?s:c}return 0===i||isSurrogate(i)?s:i}function consumeIdentSequence(e,n){const t=[];for(;;){const o=n.source.codePointAt(n.cursor)??-1;if(0===o||isSurrogate(o))t.push(s),n.advanceCodePoint(+(o>65535)+1);else if(isIdentCodePoint(o))t.push(o),n.advanceCodePoint(+(o>65535)+1);else{if(!checkIfTwoCodePointsAreAValidEscape(n))return t;n.advanceCodePoint(),t.push(consumeEscapedCodePoint(e,n))}}}function consumeHashToken(e,n){n.advanceCodePoint();const t=n.source.codePointAt(n.cursor);if(void 0!==t&&(isIdentCodePoint(t)||checkIfTwoCodePointsAreAValidEscape(n))){let t=u.Unrestricted;checkIfThreeCodePointsWouldStartAnIdentSequence(0,n)&&(t=u.ID);const o=consumeIdentSequence(e,n);return[c.Hash,n.source.slice(n.representationStart,n.representationEnd+1),n.representationStart,n.representationEnd,{value:String.fromCodePoint(...o),type:t}]}return[c.Delim,\"#\",n.representationStart,n.representationEnd,{value:\"#\"}]}function consumeNumber(e,n){let t=a.Integer;for(n.source.codePointAt(n.cursor)!==i&&n.source.codePointAt(n.cursor)!==o||n.advanceCodePoint();isDigitCodePoint(n.source.codePointAt(n.cursor)??-1);)n.advanceCodePoint();if(46===n.source.codePointAt(n.cursor)&&isDigitCodePoint(n.source.codePointAt(n.cursor+1)??-1))for(n.advanceCodePoint(2),t=a.Number;isDigitCodePoint(n.source.codePointAt(n.cursor)??-1);)n.advanceCodePoint();if(101===n.source.codePointAt(n.cursor)||69===n.source.codePointAt(n.cursor)){if(isDigitCodePoint(n.source.codePointAt(n.cursor+1)??-1))n.advanceCodePoint(2);else{if(n.source.codePointAt(n.cursor+1)!==o&&n.source.codePointAt(n.cursor+1)!==i||!isDigitCodePoint(n.source.codePointAt(n.cursor+2)??-1))return t;n.advanceCodePoint(3)}for(t=a.Number;isDigitCodePoint(n.source.codePointAt(n.cursor)??-1);)n.advanceCodePoint()}return t}function consumeNumericToken(e,n){let t;{const e=n.source.codePointAt(n.cursor);e===o?t=\"-\":e===i&&(t=\"+\")}const r=consumeNumber(0,n),s=parseFloat(n.source.slice(n.representationStart,n.representationEnd+1));if(checkIfThreeCodePointsWouldStartAnIdentSequence(0,n)){const o=consumeIdentSequence(e,n);return[c.Dimension,n.source.slice(n.representationStart,n.representationEnd+1),n.representationStart,n.representationEnd,{value:s,signCharacter:t,type:r,unit:String.fromCodePoint(...o)}]}return 37===n.source.codePointAt(n.cursor)?(n.advanceCodePoint(),[c.Percentage,n.source.slice(n.representationStart,n.representationEnd+1),n.representationStart,n.representationEnd,{value:s,signCharacter:t}]):[c.Number,n.source.slice(n.representationStart,n.representationEnd+1),n.representationStart,n.representationEnd,{value:s,signCharacter:t,type:r}]}function consumeWhiteSpace(e){for(;isWhitespace(e.source.codePointAt(e.cursor)??-1);)e.advanceCodePoint();return[c.Whitespace,e.source.slice(e.representationStart,e.representationEnd+1),e.representationStart,e.representationEnd,void 0]}!function(e){e.Comment=\"comment\",e.AtKeyword=\"at-keyword-token\",e.BadString=\"bad-string-token\",e.BadURL=\"bad-url-token\",e.CDC=\"CDC-token\",e.CDO=\"CDO-token\",e.Colon=\"colon-token\",e.Comma=\"comma-token\",e.Delim=\"delim-token\",e.Dimension=\"dimension-token\",e.EOF=\"EOF-token\",e.Function=\"function-token\",e.Hash=\"hash-token\",e.Ident=\"ident-token\",e.Number=\"number-token\",e.Percentage=\"percentage-token\",e.Semicolon=\"semicolon-token\",e.String=\"string-token\",e.URL=\"url-token\",e.Whitespace=\"whitespace-token\",e.OpenParen=\"(-token\",e.CloseParen=\")-token\",e.OpenSquare=\"[-token\",e.CloseSquare=\"]-token\",e.OpenCurly=\"{-token\",e.CloseCurly=\"}-token\",e.UnicodeRange=\"unicode-range-token\"}(c||(c={})),function(e){e.Integer=\"integer\",e.Number=\"number\"}(a||(a={})),function(e){e.Unrestricted=\"unrestricted\",e.ID=\"id\"}(u||(u={}));class Reader{cursor=0;source=\"\";representationStart=0;representationEnd=-1;constructor(e){this.source=e}advanceCodePoint(e=1){this.cursor=this.cursor+e,this.representationEnd=this.cursor-1}readCodePoint(){const e=this.source.codePointAt(this.cursor);if(void 0!==e)return this.cursor=this.cursor+1,this.representationEnd=this.cursor-1,e}unreadCodePoint(e=1){this.cursor=this.cursor-e,this.representationEnd=this.cursor-1}resetRepresentation(){this.representationStart=this.cursor,this.representationEnd=-1}}function consumeStringToken(n,o){let i=\"\";const a=o.readCodePoint();for(;;){const u=o.readCodePoint();if(void 0===u){const t=[c.String,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:i}];return n.onParseError(new ParseErrorWithToken(e.UnexpectedEOFInString,o.representationStart,o.representationEnd,[\"4.3.5. Consume a string token\",\"Unexpected EOF\"],t)),t}if(isNewLine(u)){o.unreadCodePoint();const i=[c.BadString,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,void 0];return n.onParseError(new ParseErrorWithToken(e.UnexpectedNewLineInString,o.representationStart,o.source.codePointAt(o.cursor)===t&&o.source.codePointAt(o.cursor+1)===r?o.representationEnd+2:o.representationEnd+1,[\"4.3.5. Consume a string token\",\"Unexpected newline\"],i)),i}if(u===a)return[c.String,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:i}];if(92!==u)0===u||isSurrogate(u)?i+=String.fromCodePoint(s):i+=String.fromCodePoint(u);else{if(void 0===o.source.codePointAt(o.cursor))continue;if(isNewLine(o.source.codePointAt(o.cursor)??-1)){o.source.codePointAt(o.cursor)===t&&o.source.codePointAt(o.cursor+1)===r&&o.advanceCodePoint(),o.advanceCodePoint();continue}i+=String.fromCodePoint(consumeEscapedCodePoint(n,o))}}}function checkIfCodePointsMatchURLIdent(e){return!(3!==e.length||117!==e[0]&&85!==e[0]||114!==e[1]&&82!==e[1]||108!==e[2]&&76!==e[2])}function consumeBadURL(e,n){for(;;){const t=n.source.codePointAt(n.cursor);if(void 0===t)return;if(41===t)return void n.advanceCodePoint();checkIfTwoCodePointsAreAValidEscape(n)?(n.advanceCodePoint(),consumeEscapedCodePoint(e,n)):n.advanceCodePoint()}}function consumeUrlToken(n,t){for(;isWhitespace(t.source.codePointAt(t.cursor)??-1);)t.advanceCodePoint();let o=\"\";for(;;){if(void 0===t.source.codePointAt(t.cursor)){const r=[c.URL,t.source.slice(t.representationStart,t.representationEnd+1),t.representationStart,t.representationEnd,{value:o}];return n.onParseError(new ParseErrorWithToken(e.UnexpectedEOFInURL,t.representationStart,t.representationEnd,[\"4.3.6. Consume a url token\",\"Unexpected EOF\"],r)),r}if(41===t.source.codePointAt(t.cursor))return t.advanceCodePoint(),[c.URL,t.source.slice(t.representationStart,t.representationEnd+1),t.representationStart,t.representationEnd,{value:o}];if(isWhitespace(t.source.codePointAt(t.cursor)??-1)){for(t.advanceCodePoint();isWhitespace(t.source.codePointAt(t.cursor)??-1);)t.advanceCodePoint();if(void 0===t.source.codePointAt(t.cursor)){const r=[c.URL,t.source.slice(t.representationStart,t.representationEnd+1),t.representationStart,t.representationEnd,{value:o}];return n.onParseError(new ParseErrorWithToken(e.UnexpectedEOFInURL,t.representationStart,t.representationEnd,[\"4.3.6. Consume a url token\",\"Consume as much whitespace as possible\",\"Unexpected EOF\"],r)),r}return 41===t.source.codePointAt(t.cursor)?(t.advanceCodePoint(),[c.URL,t.source.slice(t.representationStart,t.representationEnd+1),t.representationStart,t.representationEnd,{value:o}]):(consumeBadURL(n,t),[c.BadURL,t.source.slice(t.representationStart,t.representationEnd+1),t.representationStart,t.representationEnd,void 0])}const i=t.source.codePointAt(t.cursor);if(34===i||39===i||40===i||(11===(r=i??-1)||127===r||0<=r&&r<=8||14<=r&&r<=31)){consumeBadURL(n,t);const o=[c.BadURL,t.source.slice(t.representationStart,t.representationEnd+1),t.representationStart,t.representationEnd,void 0];return n.onParseError(new ParseErrorWithToken(e.UnexpectedCharacterInURL,t.representationStart,t.representationEnd,[\"4.3.6. Consume a url token\",\"Unexpected U+0022 QUOTATION MARK (\\\"), U+0027 APOSTROPHE ('), U+0028 LEFT PARENTHESIS (() or non-printable code point\"],o)),o}if(92===i){if(checkIfTwoCodePointsAreAValidEscape(t)){t.advanceCodePoint(),o+=String.fromCodePoint(consumeEscapedCodePoint(n,t));continue}consumeBadURL(n,t);const r=[c.BadURL,t.source.slice(t.representationStart,t.representationEnd+1),t.representationStart,t.representationEnd,void 0];return n.onParseError(new ParseErrorWithToken(e.InvalidEscapeSequenceInURL,t.representationStart,t.representationEnd,[\"4.3.6. Consume a url token\",\"U+005C REVERSE SOLIDUS (\\\\)\",\"The input stream does not start with a valid escape sequence\"],r)),r}0===t.source.codePointAt(t.cursor)||isSurrogate(t.source.codePointAt(t.cursor)??-1)?(o+=String.fromCodePoint(s),t.advanceCodePoint()):(o+=t.source[t.cursor],t.advanceCodePoint())}var r}function consumeIdentLikeToken(e,n){const t=consumeIdentSequence(e,n);if(40!==n.source.codePointAt(n.cursor))return[c.Ident,n.source.slice(n.representationStart,n.representationEnd+1),n.representationStart,n.representationEnd,{value:String.fromCodePoint(...t)}];if(checkIfCodePointsMatchURLIdent(t)){n.advanceCodePoint();let o=0;for(;;){const e=isWhitespace(n.source.codePointAt(n.cursor)??-1),r=isWhitespace(n.source.codePointAt(n.cursor+1)??-1);if(e&&r){o+=1,n.advanceCodePoint(1);continue}const i=e?n.source.codePointAt(n.cursor+1):n.source.codePointAt(n.cursor);if(34===i||39===i)return o>0&&n.unreadCodePoint(o),[c.Function,n.source.slice(n.representationStart,n.representationEnd+1),n.representationStart,n.representationEnd,{value:String.fromCodePoint(...t)}];break}return consumeUrlToken(e,n)}return n.advanceCodePoint(),[c.Function,n.source.slice(n.representationStart,n.representationEnd+1),n.representationStart,n.representationEnd,{value:String.fromCodePoint(...t)}]}function checkIfThreeCodePointsWouldStartAUnicodeRange(e){return!(117!==e.source.codePointAt(e.cursor)&&85!==e.source.codePointAt(e.cursor)||e.source.codePointAt(e.cursor+1)!==i||63!==e.source.codePointAt(e.cursor+2)&&!isHexDigitCodePoint(e.source.codePointAt(e.cursor+2)??-1))}function consumeUnicodeRangeToken(e,n){n.advanceCodePoint(2);const t=[],r=[];let i;for(;void 0!==(i=n.source.codePointAt(n.cursor))&&t.length<6&&isHexDigitCodePoint(i);)t.push(i),n.advanceCodePoint();for(;void 0!==(i=n.source.codePointAt(n.cursor))&&t.length<6&&63===i;)0===r.length&&r.push(...t),t.push(48),r.push(70),n.advanceCodePoint();if(!r.length&&n.source.codePointAt(n.cursor)===o&&isHexDigitCodePoint(n.source.codePointAt(n.cursor+1)??-1))for(n.advanceCodePoint();void 0!==(i=n.source.codePointAt(n.cursor))&&r.length<6&&isHexDigitCodePoint(i);)r.push(i),n.advanceCodePoint();if(!r.length){const e=parseInt(String.fromCodePoint(...t),16);return[c.UnicodeRange,n.source.slice(n.representationStart,n.representationEnd+1),n.representationStart,n.representationEnd,{startOfRange:e,endOfRange:e}]}const s=parseInt(String.fromCodePoint(...t),16),a=parseInt(String.fromCodePoint(...r),16);return[c.UnicodeRange,n.source.slice(n.representationStart,n.representationEnd+1),n.representationStart,n.representationEnd,{startOfRange:s,endOfRange:a}]}function tokenize(e,n){const t=tokenizer(e,n),o=[];for(;!t.endOfFile();)o.push(t.nextToken());return o.push(t.nextToken()),o}function tokenizer(n,s){const a=n.css.valueOf(),u=n.unicodeRangesAllowed??!1,d=new Reader(a),p={onParseError:s?.onParseError??noop};return{nextToken:function nextToken(){d.resetRepresentation();const n=d.source.codePointAt(d.cursor);if(void 0===n)return[c.EOF,\"\",-1,-1,void 0];if(47===n&&checkIfTwoCodePointsStartAComment(d))return consumeComment(p,d);if(u&&(117===n||85===n)&&checkIfThreeCodePointsWouldStartAUnicodeRange(d))return consumeUnicodeRangeToken(0,d);if(isIdentStartCodePoint(n))return consumeIdentLikeToken(p,d);if(isDigitCodePoint(n))return consumeNumericToken(p,d);switch(n){case 44:return d.advanceCodePoint(),[c.Comma,\",\",d.representationStart,d.representationEnd,void 0];case 58:return d.advanceCodePoint(),[c.Colon,\":\",d.representationStart,d.representationEnd,void 0];case 59:return d.advanceCodePoint(),[c.Semicolon,\";\",d.representationStart,d.representationEnd,void 0];case 40:return d.advanceCodePoint(),[c.OpenParen,\"(\",d.representationStart,d.representationEnd,void 0];case 41:return d.advanceCodePoint(),[c.CloseParen,\")\",d.representationStart,d.representationEnd,void 0];case 91:return d.advanceCodePoint(),[c.OpenSquare,\"[\",d.representationStart,d.representationEnd,void 0];case 93:return d.advanceCodePoint(),[c.CloseSquare,\"]\",d.representationStart,d.representationEnd,void 0];case 123:return d.advanceCodePoint(),[c.OpenCurly,\"{\",d.representationStart,d.representationEnd,void 0];case 125:return d.advanceCodePoint(),[c.CloseCurly,\"}\",d.representationStart,d.representationEnd,void 0];case 39:case 34:return consumeStringToken(p,d);case 35:return consumeHashToken(p,d);case i:case 46:return checkIfThreeCodePointsWouldStartANumber(d)?consumeNumericToken(p,d):(d.advanceCodePoint(),[c.Delim,d.source[d.representationStart],d.representationStart,d.representationEnd,{value:d.source[d.representationStart]}]);case r:case t:case 12:case 9:case 32:return consumeWhiteSpace(d);case o:return checkIfThreeCodePointsWouldStartANumber(d)?consumeNumericToken(p,d):checkIfThreeCodePointsWouldStartCDC(d)?(d.advanceCodePoint(3),[c.CDC,\"--\\x3e\",d.representationStart,d.representationEnd,void 0]):checkIfThreeCodePointsWouldStartAnIdentSequence(0,d)?consumeIdentLikeToken(p,d):(d.advanceCodePoint(),[c.Delim,\"-\",d.representationStart,d.representationEnd,{value:\"-\"}]);case 60:return checkIfFourCodePointsWouldStartCDO(d)?(d.advanceCodePoint(4),[c.CDO,\"\\x3c!--\",d.representationStart,d.representationEnd,void 0]):(d.advanceCodePoint(),[c.Delim,\"<\",d.representationStart,d.representationEnd,{value:\"<\"}]);case 64:if(d.advanceCodePoint(),checkIfThreeCodePointsWouldStartAnIdentSequence(0,d)){const e=consumeIdentSequence(p,d);return[c.AtKeyword,d.source.slice(d.representationStart,d.representationEnd+1),d.representationStart,d.representationEnd,{value:String.fromCodePoint(...e)}]}return[c.Delim,\"@\",d.representationStart,d.representationEnd,{value:\"@\"}];case 92:{if(checkIfTwoCodePointsAreAValidEscape(d))return consumeIdentLikeToken(p,d);d.advanceCodePoint();const n=[c.Delim,\"\\\\\",d.representationStart,d.representationEnd,{value:\"\\\\\"}];return p.onParseError(new ParseErrorWithToken(e.InvalidEscapeSequenceAfterBackslash,d.representationStart,d.representationEnd,[\"4.3.1. Consume a token\",\"U+005C REVERSE SOLIDUS (\\\\)\",\"The input stream does not start with a valid escape sequence\"],n)),n}}return d.advanceCodePoint(),[c.Delim,d.source[d.representationStart],d.representationStart,d.representationEnd,{value:d.source[d.representationStart]}]},endOfFile:function endOfFile(){return void 0===d.source.codePointAt(d.cursor)}}}function noop(){}function mutateIdent(e,n){const t=[];for(const e of n)t.push(e.codePointAt(0));const o=String.fromCodePoint(...ensureThatValueRoundTripsAsIdent(t));e[1]=o,e[4].value=n}function mutateUnit(e,n){const t=[];for(const e of n)t.push(e.codePointAt(0));const o=ensureThatValueRoundTripsAsIdent(t);101===o[0]&&insertEscapedCodePoint(o,0,o[0]);const r=String.fromCodePoint(...o),i=\"+\"===e[4].signCharacter?e[4].signCharacter:\"\",s=e[4].value.toString();e[1]=`${i}${s}${r}`,e[4].unit=n}function ensureThatValueRoundTripsAsIdent(e){let n=0;e[0]===o&&e[1]===o?n=2:e[0]===o&&e[1]?(n=2,isIdentStartCodePoint(e[1])||(n+=insertEscapedCodePoint(e,1,e[1]))):isIdentStartCodePoint(e[0])?n=1:(n=1,n+=insertEscapedCodePoint(e,0,e[0]));for(let t=n;t<e.length;t++)isIdentCodePoint(e[t])||(t+=insertEscapedCodePoint(e,t,e[t]));return e}function insertEscapedCodePoint(e,n,t){const o=t.toString(16),r=[];for(const e of o)r.push(e.codePointAt(0));const i=e[n+1];return n===e.length-1||i&&isHexDigitCodePoint(i)?(e.splice(n,1,92,...r,32),1+r.length):(e.splice(n,1,92,...r),r.length)}const d=Object.values(c);function isToken(e){return!!Array.isArray(e)&&(!(e.length<4)&&(!!d.includes(e[0])&&(\"string\"==typeof e[1]&&(\"number\"==typeof e[2]&&\"number\"==typeof e[3]))))}function isTokenNumeric(e){if(!e)return!1;switch(e[0]){case c.Dimension:case c.Number:case c.Percentage:return!0;default:return!1}}function isTokenWhiteSpaceOrComment(e){if(!e)return!1;switch(e[0]){case c.Whitespace:case c.Comment:return!0;default:return!1}}function isTokenAtKeyword(e){return!!e&&e[0]===c.AtKeyword}function isTokenBadString(e){return!!e&&e[0]===c.BadString}function isTokenBadURL(e){return!!e&&e[0]===c.BadURL}function isTokenCDC(e){return!!e&&e[0]===c.CDC}function isTokenCDO(e){return!!e&&e[0]===c.CDO}function isTokenColon(e){return!!e&&e[0]===c.Colon}function isTokenComma(e){return!!e&&e[0]===c.Comma}function isTokenComment(e){return!!e&&e[0]===c.Comment}function isTokenDelim(e){return!!e&&e[0]===c.Delim}function isTokenDimension(e){return!!e&&e[0]===c.Dimension}function isTokenEOF(e){return!!e&&e[0]===c.EOF}function isTokenFunction(e){return!!e&&e[0]===c.Function}function isTokenHash(e){return!!e&&e[0]===c.Hash}function isTokenIdent(e){return!!e&&e[0]===c.Ident}function isTokenNumber(e){return!!e&&e[0]===c.Number}function isTokenPercentage(e){return!!e&&e[0]===c.Percentage}function isTokenSemicolon(e){return!!e&&e[0]===c.Semicolon}function isTokenString(e){return!!e&&e[0]===c.String}function isTokenURL(e){return!!e&&e[0]===c.URL}function isTokenWhitespace(e){return!!e&&e[0]===c.Whitespace}function isTokenOpenParen(e){return!!e&&e[0]===c.OpenParen}function isTokenCloseParen(e){return!!e&&e[0]===c.CloseParen}function isTokenOpenSquare(e){return!!e&&e[0]===c.OpenSquare}function isTokenCloseSquare(e){return!!e&&e[0]===c.CloseSquare}function isTokenOpenCurly(e){return!!e&&e[0]===c.OpenCurly}function isTokenCloseCurly(e){return!!e&&e[0]===c.CloseCurly}function isTokenUnicodeRange(e){return!!e&&e[0]===c.UnicodeRange}export{u as HashType,a as NumberType,ParseError,e as ParseErrorMessage,ParseErrorWithToken,c as TokenType,cloneTokens,isToken,isTokenAtKeyword,isTokenBadString,isTokenBadURL,isTokenCDC,isTokenCDO,isTokenCloseCurly,isTokenCloseParen,isTokenCloseSquare,isTokenColon,isTokenComma,isTokenComment,isTokenDelim,isTokenDimension,isTokenEOF,isTokenFunction,isTokenHash,isTokenIdent,isTokenNumber,isTokenNumeric,isTokenOpenCurly,isTokenOpenParen,isTokenOpenSquare,isTokenPercentage,isTokenSemicolon,isTokenString,isTokenURL,isTokenUnicodeRange,isTokenWhiteSpaceOrComment,isTokenWhitespace,mirrorVariant,mirrorVariantType,mutateIdent,mutateUnit,stringify,tokenize,tokenizer};\n","import{isTokenEOF as e,TokenType as n,isToken as t,stringify as o,mirrorVariant as s,isTokenOpenParen as i,isTokenOpenCurly as r,isTokenOpenSquare as a,isTokenFunction as c,isTokenWhitespace as u,isTokenComment as l,ParseError as d,isTokenCloseParen as h,isTokenWhiteSpaceOrComment as p,mirrorVariantType as m,isTokenComma as k}from\"@csstools/css-tokenizer\";var f;function walkerIndexGenerator(e){let n=e.slice();return(e,t,o)=>{let s=-1;for(let i=n.indexOf(t);i<n.length&&(s=e.indexOf(n[i]),-1===s||s<o);i++);return-1===s||s===o&&t===e[o]&&(s++,s>=e.length)?-1:(n=e.slice(),s)}}function consumeComponentValue(e,n){const t=n[0];if(i(t)||r(t)||a(t)){const t=consumeSimpleBlock(e,n);return{advance:t.advance,node:t.node}}if(c(t)){const t=consumeFunction(e,n);return{advance:t.advance,node:t.node}}if(u(t)){const t=consumeWhitespace(e,n);return{advance:t.advance,node:t.node}}if(l(t)){const t=consumeComment(e,n);return{advance:t.advance,node:t.node}}return{advance:1,node:new TokenNode(t)}}!function(e){e.Function=\"function\",e.SimpleBlock=\"simple-block\",e.Whitespace=\"whitespace\",e.Comment=\"comment\",e.Token=\"token\"}(f||(f={}));class ContainerNodeBaseClass{value=[];indexOf(e){return this.value.indexOf(e)}at(e){if(\"number\"==typeof e)return e<0&&(e=this.value.length+e),this.value[e]}forEach(e,n){if(0===this.value.length)return;const t=walkerIndexGenerator(this.value);let o=0;for(;o<this.value.length;){const s=this.value[o];let i;if(n&&(i={...n}),!1===e({node:s,parent:this,state:i},o))return!1;if(o=t(this.value,s,o),-1===o)break}}walk(e,n){0!==this.value.length&&this.forEach(((n,t)=>!1!==e(n,t)&&((!(\"walk\"in n.node)||!this.value.includes(n.node)||!1!==n.node.walk(e,n.state))&&void 0)),n)}}class FunctionNode extends ContainerNodeBaseClass{type=f.Function;name;endToken;constructor(e,n,t){super(),this.name=e,this.endToken=n,this.value=t}getName(){return this.name[4].value}normalize(){e(this.endToken)&&(this.endToken=[n.CloseParen,\")\",-1,-1,void 0])}tokens(){return e(this.endToken)?[this.name,...this.value.flatMap((e=>e.tokens()))]:[this.name,...this.value.flatMap((e=>e.tokens())),this.endToken]}toString(){const e=this.value.map((e=>t(e)?o(e):e.toString())).join(\"\");return o(this.name)+e+o(this.endToken)}toJSON(){return{type:this.type,name:this.getName(),tokens:this.tokens(),value:this.value.map((e=>e.toJSON()))}}isFunctionNode(){return FunctionNode.isFunctionNode(this)}static isFunctionNode(e){return!!e&&(e instanceof FunctionNode&&e.type===f.Function)}}function consumeFunction(n,t){const o=[];let s=1;for(;;){const i=t[s];if(!i||e(i))return n.onParseError(new d(\"Unexpected EOF while consuming a function.\",t[0][2],t[t.length-1][3],[\"5.4.9. Consume a function\",\"Unexpected EOF\"])),{advance:t.length,node:new FunctionNode(t[0],i,o)};if(h(i))return{advance:s+1,node:new FunctionNode(t[0],i,o)};if(p(i)){const e=consumeAllCommentsAndWhitespace(n,t.slice(s));s+=e.advance,o.push(...e.nodes);continue}const r=consumeComponentValue(n,t.slice(s));s+=r.advance,o.push(r.node)}}class SimpleBlockNode extends ContainerNodeBaseClass{type=f.SimpleBlock;startToken;endToken;constructor(e,n,t){super(),this.startToken=e,this.endToken=n,this.value=t}normalize(){if(e(this.endToken)){const e=s(this.startToken);e&&(this.endToken=e)}}tokens(){return e(this.endToken)?[this.startToken,...this.value.flatMap((e=>e.tokens()))]:[this.startToken,...this.value.flatMap((e=>e.tokens())),this.endToken]}toString(){const e=this.value.map((e=>t(e)?o(e):e.toString())).join(\"\");return o(this.startToken)+e+o(this.endToken)}toJSON(){return{type:this.type,startToken:this.startToken,tokens:this.tokens(),value:this.value.map((e=>e.toJSON()))}}isSimpleBlockNode(){return SimpleBlockNode.isSimpleBlockNode(this)}static isSimpleBlockNode(e){return!!e&&(e instanceof SimpleBlockNode&&e.type===f.SimpleBlock)}}function consumeSimpleBlock(n,t){const o=m(t[0][0]);if(!o)throw new Error(\"Failed to parse, a mirror variant must exist for all block open tokens.\");const s=[];let i=1;for(;;){const r=t[i];if(!r||e(r))return n.onParseError(new d(\"Unexpected EOF while consuming a simple block.\",t[0][2],t[t.length-1][3],[\"5.4.8. Consume a simple block\",\"Unexpected EOF\"])),{advance:t.length,node:new SimpleBlockNode(t[0],r,s)};if(r[0]===o)return{advance:i+1,node:new SimpleBlockNode(t[0],r,s)};if(p(r)){const e=consumeAllCommentsAndWhitespace(n,t.slice(i));i+=e.advance,s.push(...e.nodes);continue}const a=consumeComponentValue(n,t.slice(i));i+=a.advance,s.push(a.node)}}class WhitespaceNode{type=f.Whitespace;value;constructor(e){this.value=e}tokens(){return this.value}toString(){return o(...this.value)}toJSON(){return{type:this.type,tokens:this.tokens()}}isWhitespaceNode(){return WhitespaceNode.isWhitespaceNode(this)}static isWhitespaceNode(e){return!!e&&(e instanceof WhitespaceNode&&e.type===f.Whitespace)}}function consumeWhitespace(e,n){let t=0;for(;;){const e=n[t];if(!u(e))return{advance:t,node:new WhitespaceNode(n.slice(0,t))};t++}}class CommentNode{type=f.Comment;value;constructor(e){this.value=e}tokens(){return[this.value]}toString(){return o(this.value)}toJSON(){return{type:this.type,tokens:this.tokens()}}isCommentNode(){return CommentNode.isCommentNode(this)}static isCommentNode(e){return!!e&&(e instanceof CommentNode&&e.type===f.Comment)}}function consumeComment(e,n){return{advance:1,node:new CommentNode(n[0])}}function consumeAllCommentsAndWhitespace(e,n){const t=[];let o=0;for(;;)if(u(n[o])){const e=consumeWhitespace(0,n.slice(o));o+=e.advance,t.push(e.node)}else{if(!l(n[o]))return{advance:o,nodes:t};t.push(new CommentNode(n[o])),o++}}class TokenNode{type=f.Token;value;constructor(e){this.value=e}tokens(){return[this.value]}toString(){return this.value[1]}toJSON(){return{type:this.type,tokens:this.tokens()}}isTokenNode(){return TokenNode.isTokenNode(this)}static isTokenNode(e){return!!e&&(e instanceof TokenNode&&e.type===f.Token)}}function parseComponentValue(t,o){const s={onParseError:o?.onParseError??(()=>{})},i=[...t];e(i[i.length-1])&&i.push([n.EOF,\"\",i[i.length-1][2],i[i.length-1][3],void 0]);const r=consumeComponentValue(s,i);if(e(i[Math.min(r.advance,i.length-1)]))return r.node;s.onParseError(new d(\"Expected EOF after parsing a component value.\",t[0][2],t[t.length-1][3],[\"5.3.9. Parse a component value\",\"Expected EOF\"]))}function parseListOfComponentValues(t,o){const s={onParseError:o?.onParseError??(()=>{})},i=[...t];e(i[i.length-1])&&i.push([n.EOF,\"\",i[i.length-1][2],i[i.length-1][3],void 0]);const r=[];let a=0;for(;;){if(!i[a]||e(i[a]))return r;const n=consumeComponentValue(s,i.slice(a));r.push(n.node),a+=n.advance}}function parseCommaSeparatedListOfComponentValues(t,o){const s={onParseError:o?.onParseError??(()=>{})},i=[...t];if(0===t.length)return[];e(i[i.length-1])&&i.push([n.EOF,\"\",i[i.length-1][2],i[i.length-1][3],void 0]);const r=[];let a=[],c=0;for(;;){if(!i[c]||e(i[c]))return a.length&&r.push(a),r;if(k(i[c])){r.push(a),a=[],c++;continue}const n=consumeComponentValue(s,t.slice(c));a.push(n.node),c+=n.advance}}function gatherNodeAncestry(e){const n=new Map;return e.walk((e=>{Array.isArray(e.node)?e.node.forEach((t=>{n.set(t,e.parent)})):n.set(e.node,e.parent)})),n}function forEach(e,n,t){if(0===e.length)return;const o=walkerIndexGenerator(e);let s=0;for(;s<e.length;){const i=e[s];let r;if(t&&(r={...t}),!1===n({node:i,parent:{value:e},state:r},s))return!1;if(s=o(e,i,s),-1===s)break}}function walk(e,n,t){0!==e.length&&forEach(e,((t,o)=>!1!==n(t,o)&&((!(\"walk\"in t.node)||!e.includes(t.node)||!1!==t.node.walk(n,t.state))&&void 0)),t)}function replaceComponentValues(e,n){for(let t=0;t<e.length;t++){walk(e[t],((e,t)=>{if(\"number\"!=typeof t)return;const o=n(e.node);o&&(Array.isArray(o)?e.parent.value.splice(t,1,...o):e.parent.value.splice(t,1,o))}))}return e}function stringify(e){return e.map((e=>e.map((e=>o(...e.tokens()))).join(\"\"))).join(\",\")}function isSimpleBlockNode(e){return SimpleBlockNode.isSimpleBlockNode(e)}function isFunctionNode(e){return FunctionNode.isFunctionNode(e)}function isWhitespaceNode(e){return WhitespaceNode.isWhitespaceNode(e)}function isCommentNode(e){return CommentNode.isCommentNode(e)}function isWhiteSpaceOrCommentNode(e){return isWhitespaceNode(e)||isCommentNode(e)}function isTokenNode(e){return TokenNode.isTokenNode(e)}function sourceIndices(e){if(Array.isArray(e)){const n=e[0];if(!n)return[0,0];const t=e[e.length-1]||n;return[sourceIndices(n)[0],sourceIndices(t)[1]]}const n=e.tokens(),t=n[0],o=n[n.length-1];return t&&o?[t[2],o[3]]:[0,0]}export{CommentNode,f as ComponentValueType,ContainerNodeBaseClass,FunctionNode,SimpleBlockNode,TokenNode,WhitespaceNode,forEach,gatherNodeAncestry,isCommentNode,isFunctionNode,isSimpleBlockNode,isTokenNode,isWhiteSpaceOrCommentNode,isWhitespaceNode,parseCommaSeparatedListOfComponentValues,parseComponentValue,parseListOfComponentValues,replaceComponentValues,sourceIndices,stringify,walk,walkerIndexGenerator};\n","import{TokenNode as e,isTokenNode as n,isWhitespaceNode as t,isCommentNode as r,isWhiteSpaceOrCommentNode as u,isSimpleBlockNode as a,isFunctionNode as i,FunctionNode as o,WhitespaceNode as l,parseCommaSeparatedListOfComponentValues as c,replaceComponentValues as s}from\"@csstools/css-parser-algorithms\";import{isTokenDimension as v,TokenType as f,NumberType as m,mutateUnit as p,isTokenNumber as C,isTokenPercentage as g,isTokenIdent as D,isTokenNumeric as B,stringify as N,isTokenOpenParen as A,isTokenDelim as d,isTokenComma as F,isToken as b,tokenizer as h,tokenize as w}from\"@csstools/css-tokenizer\";const E=/[A-Z]/g;function toLowerCaseAZ(e){return e.replace(E,(e=>String.fromCharCode(e.charCodeAt(0)+32)))}const S={cm:\"px\",in:\"px\",mm:\"px\",pc:\"px\",pt:\"px\",px:\"px\",q:\"px\",deg:\"deg\",grad:\"deg\",rad:\"deg\",turn:\"deg\",ms:\"s\",s:\"s\",hz:\"hz\",khz:\"hz\"},I=new Map([[\"cm\",e=>e],[\"mm\",e=>10*e],[\"q\",e=>40*e],[\"in\",e=>e/2.54],[\"pc\",e=>e/2.54*6],[\"pt\",e=>e/2.54*72],[\"px\",e=>e/2.54*96]]),y=new Map([[\"deg\",e=>e],[\"grad\",e=>e/.9],[\"rad\",e=>e/180*Math.PI],[\"turn\",e=>e/360]]),M=new Map([[\"deg\",e=>.9*e],[\"grad\",e=>e],[\"rad\",e=>.9*e/180*Math.PI],[\"turn\",e=>.9*e/360]]),T=new Map([[\"hz\",e=>e],[\"khz\",e=>e/1e3]]),k=new Map([[\"cm\",e=>2.54*e],[\"mm\",e=>25.4*e],[\"q\",e=>25.4*e*4],[\"in\",e=>e],[\"pc\",e=>6*e],[\"pt\",e=>72*e],[\"px\",e=>96*e]]),x=new Map([[\"hz\",e=>1e3*e],[\"khz\",e=>e]]),P=new Map([[\"cm\",e=>e/10],[\"mm\",e=>e],[\"q\",e=>4*e],[\"in\",e=>e/25.4],[\"pc\",e=>e/25.4*6],[\"pt\",e=>e/25.4*72],[\"px\",e=>e/25.4*96]]),O=new Map([[\"ms\",e=>e],[\"s\",e=>e/1e3]]),W=new Map([[\"cm\",e=>e/6*2.54],[\"mm\",e=>e/6*25.4],[\"q\",e=>e/6*25.4*4],[\"in\",e=>e/6],[\"pc\",e=>e],[\"pt\",e=>e/6*72],[\"px\",e=>e/6*96]]),L=new Map([[\"cm\",e=>e/72*2.54],[\"mm\",e=>e/72*25.4],[\"q\",e=>e/72*25.4*4],[\"in\",e=>e/72],[\"pc\",e=>e/72*6],[\"pt\",e=>e],[\"px\",e=>e/72*96]]),U=new Map([[\"cm\",e=>e/96*2.54],[\"mm\",e=>e/96*25.4],[\"q\",e=>e/96*25.4*4],[\"in\",e=>e/96],[\"pc\",e=>e/96*6],[\"pt\",e=>e/96*72],[\"px\",e=>e]]),Z=new Map([[\"cm\",e=>e/4/10],[\"mm\",e=>e/4],[\"q\",e=>e],[\"in\",e=>e/4/25.4],[\"pc\",e=>e/4/25.4*6],[\"pt\",e=>e/4/25.4*72],[\"px\",e=>e/4/25.4*96]]),$=new Map([[\"deg\",e=>180*e/Math.PI],[\"grad\",e=>180*e/Math.PI/.9],[\"rad\",e=>e],[\"turn\",e=>180*e/Math.PI/360]]),z=new Map([[\"ms\",e=>1e3*e],[\"s\",e=>e]]),q=new Map([[\"deg\",e=>360*e],[\"grad\",e=>360*e/.9],[\"rad\",e=>360*e/180*Math.PI],[\"turn\",e=>e]]),G=new Map([[\"cm\",I],[\"mm\",P],[\"q\",Z],[\"in\",k],[\"pc\",W],[\"pt\",L],[\"px\",U],[\"ms\",O],[\"s\",z],[\"deg\",y],[\"grad\",M],[\"rad\",$],[\"turn\",q],[\"hz\",T],[\"khz\",x]]);function convertUnit(e,n){if(!v(e))return n;if(!v(n))return n;const t=toLowerCaseAZ(e[4].unit),r=toLowerCaseAZ(n[4].unit);if(t===r)return n;const u=G.get(r);if(!u)return n;const a=u.get(t);if(!a)return n;const i=a(n[4].value),o=[f.Dimension,\"\",n[2],n[3],{...n[4],signCharacter:i<0?\"-\":void 0,type:Number.isInteger(i)?m.Integer:m.Number,value:i}];return p(o,e[4].unit),o}function toCanonicalUnit(e){if(!v(e))return e;const n=toLowerCaseAZ(e[4].unit),t=S[n];if(n===t)return e;const r=G.get(n);if(!r)return e;const u=r.get(t);if(!u)return e;const a=u(e[4].value),i=[f.Dimension,\"\",e[2],e[3],{...e[4],signCharacter:a<0?\"-\":void 0,type:Number.isInteger(a)?m.Integer:m.Number,value:a}];return p(i,t),i}function addition(n){if(2!==n.length)return-1;const t=n[0].value;let r=n[1].value;if(C(t)&&C(r)){const n=t[4].value+r[4].value;return new e([f.Number,n.toString(),t[2],r[3],{value:n,type:t[4].type===m.Integer&&r[4].type===m.Integer?m.Integer:m.Number}])}if(g(t)&&g(r)){const n=t[4].value+r[4].value;return new e([f.Percentage,n.toString()+\"%\",t[2],r[3],{value:n}])}if(v(t)&&v(r)&&(r=convertUnit(t,r),toLowerCaseAZ(t[4].unit)===toLowerCaseAZ(r[4].unit))){const n=t[4].value+r[4].value;return new e([f.Dimension,n.toString()+t[4].unit,t[2],r[3],{value:n,type:t[4].type===m.Integer&&r[4].type===m.Integer?m.Integer:m.Number,unit:t[4].unit}])}return-1}function division(n){if(2!==n.length)return-1;const t=n[0].value,r=n[1].value;if(C(t)&&C(r)){const n=t[4].value/r[4].value;return new e([f.Number,n.toString(),t[2],r[3],{value:n,type:Number.isInteger(n)?m.Integer:m.Number}])}if(g(t)&&C(r)){const n=t[4].value/r[4].value;return new e([f.Percentage,n.toString()+\"%\",t[2],r[3],{value:n}])}if(v(t)&&C(r)){const n=t[4].value/r[4].value;return new e([f.Dimension,n.toString()+t[4].unit,t[2],r[3],{value:n,type:Number.isInteger(n)?m.Integer:m.Number,unit:t[4].unit}])}return-1}function isCalculation(e){return!!e&&\"object\"==typeof e&&\"inputs\"in e&&Array.isArray(e.inputs)&&\"operation\"in e}function solve(e){if(-1===e)return-1;const t=[];for(let r=0;r<e.inputs.length;r++){const u=e.inputs[r];if(n(u)){t.push(u);continue}const a=solve(u);if(-1===a)return-1;t.push(a)}return e.operation(t)}function multiplication(n){if(2!==n.length)return-1;const t=n[0].value,r=n[1].value;if(C(t)&&C(r)){const n=t[4].value*r[4].value;return new e([f.Number,n.toString(),t[2],r[3],{value:n,type:t[4].type===m.Integer&&r[4].type===m.Integer?m.Integer:m.Number}])}if(g(t)&&C(r)){const n=t[4].value*r[4].value;return new e([f.Percentage,n.toString()+\"%\",t[2],r[3],{value:n}])}if(C(t)&&g(r)){const n=t[4].value*r[4].value;return new e([f.Percentage,n.toString()+\"%\",t[2],r[3],{value:n}])}if(v(t)&&C(r)){const n=t[4].value*r[4].value;return new e([f.Dimension,n.toString()+t[4].unit,t[2],r[3],{value:n,type:t[4].type===m.Integer&&r[4].type===m.Integer?m.Integer:m.Number,unit:t[4].unit}])}if(C(t)&&v(r)){const n=t[4].value*r[4].value;return new e([f.Dimension,n.toString()+r[4].unit,t[2],r[3],{value:n,type:t[4].type===m.Integer&&r[4].type===m.Integer?m.Integer:m.Number,unit:r[4].unit}])}return-1}function resolveGlobalsAndConstants(t,r){for(let u=0;u<t.length;u++){const a=t[u];if(!n(a))continue;const i=a.value;if(!D(i))continue;const o=toLowerCaseAZ(i[4].value);switch(o){case\"e\":t.splice(u,1,new e([f.Number,Math.E.toString(),i[2],i[3],{value:Math.E,type:m.Number}]));break;case\"pi\":t.splice(u,1,new e([f.Number,Math.PI.toString(),i[2],i[3],{value:Math.PI,type:m.Number}]));break;case\"infinity\":t.splice(u,1,new e([f.Number,\"infinity\",i[2],i[3],{value:1/0,type:m.Number}]));break;case\"-infinity\":t.splice(u,1,new e([f.Number,\"-infinity\",i[2],i[3],{value:-1/0,type:m.Number}]));break;case\"nan\":t.splice(u,1,new e([f.Number,\"NaN\",i[2],i[3],{value:Number.NaN,type:m.Number}]));break;default:if(r.has(o)){const n=r.get(o);t.splice(u,1,new e(n))}}}return t}function unary(e){if(1!==e.length)return-1;const n=e[0].value;return B(n)?e[0]:-1}function resultToCalculation(e,n,t){return v(n)?dimensionToCalculation(e,n[4].unit,t):g(n)?percentageToCalculation(e,t):C(n)?numberToCalculation(e,t):-1}function dimensionToCalculation(n,t,r){const u=n.tokens();return{inputs:[new e([f.Dimension,r.toString()+t,u[0][2],u[u.length-1][3],{value:r,type:Number.isInteger(r)?m.Integer:m.Number,unit:t}])],operation:unary}}function percentageToCalculation(n,t){const r=n.tokens();return{inputs:[new e([f.Percentage,t.toString()+\"%\",r[0][2],r[r.length-1][3],{value:t}])],operation:unary}}function numberToCalculation(n,t){const r=n.tokens();return{inputs:[new e([f.Number,t.toString(),r[0][2],r[r.length-1][3],{value:t,type:Number.isInteger(t)?m.Integer:m.Number}])],operation:unary}}function solveACos(e,n){const t=n.value;if(!C(t))return-1;return dimensionToCalculation(e,\"rad\",Math.acos(t[4].value))}function solveASin(e,n){const t=n.value;if(!C(t))return-1;return dimensionToCalculation(e,\"rad\",Math.asin(t[4].value))}function solveATan(e,n){const t=n.value;if(!C(t))return-1;return dimensionToCalculation(e,\"rad\",Math.atan(t[4].value))}function isDimensionOrNumber(e){return v(e)||C(e)}function arrayOfSameNumeric(e){if(0===e.length)return!0;const n=e[0];if(!B(n))return!1;if(1===e.length)return!0;if(v(n)){const t=toLowerCaseAZ(n[4].unit);for(let r=1;r<e.length;r++){const u=e[r];if(n[0]!==u[0])return!1;if(t!==toLowerCaseAZ(u[4].unit))return!1}return!0}for(let t=1;t<e.length;t++){const r=e[t];if(n[0]!==r[0])return!1}return!0}function twoOfSameNumeric(e,n){return!!B(e)&&(v(e)?e[0]===n[0]&&toLowerCaseAZ(e[4].unit)===toLowerCaseAZ(n[4].unit):e[0]===n[0])}function solveATan2(e,n,t){const r=n.value;if(!isDimensionOrNumber(r))return-1;const u=convertUnit(r,t.value);if(!twoOfSameNumeric(r,u))return-1;return dimensionToCalculation(e,\"rad\",Math.atan2(r[4].value,u[4].value))}function solveAbs(e,n,t){const r=n.value;if(!B(r))return-1;if(!t.rawPercentages&&g(r))return-1;return resultToCalculation(e,r,Math.abs(r[4].value))}function solveClamp(e,t,r,u,a){if(!n(t)||!n(r)||!n(u))return-1;const i=t.value;if(!B(i))return-1;if(!a.rawPercentages&&g(i))return-1;const o=convertUnit(i,r.value);if(!twoOfSameNumeric(i,o))return-1;const l=convertUnit(i,u.value);if(!twoOfSameNumeric(i,l))return-1;return resultToCalculation(e,i,Math.max(i[4].value,Math.min(o[4].value,l[4].value)))}function solveCos(e,n){const t=n.value;if(!isDimensionOrNumber(t))return-1;let r=t[4].value;if(v(t))switch(t[4].unit.toLowerCase()){case\"rad\":break;case\"deg\":r=y.get(\"rad\")(t[4].value);break;case\"grad\":r=M.get(\"rad\")(t[4].value);break;case\"turn\":r=q.get(\"rad\")(t[4].value);break;default:return-1}return r=Math.cos(r),numberToCalculation(e,r)}function solveExp(e,n){const t=n.value;if(!C(t))return-1;return numberToCalculation(e,Math.exp(t[4].value))}function solveHypot(e,t,r){if(!t.every(n))return-1;const u=t[0].value;if(!B(u))return-1;if(!r.rawPercentages&&g(u))return-1;const a=t.map((e=>convertUnit(u,e.value)));if(!arrayOfSameNumeric(a))return-1;const i=a.map((e=>e[4].value)),o=Math.hypot(...i);return resultToCalculation(e,u,o)}function solveMax(e,t,r){if(!t.every(n))return-1;const u=t[0].value;if(!B(u))return-1;if(!r.rawPercentages&&g(u))return-1;const a=t.map((e=>convertUnit(u,e.value)));if(!arrayOfSameNumeric(a))return-1;const i=a.map((e=>e[4].value)),o=Math.max(...i);return resultToCalculation(e,u,o)}function solveMin(e,t,r){if(!t.every(n))return-1;const u=t[0].value;if(!B(u))return-1;if(!r.rawPercentages&&g(u))return-1;const a=t.map((e=>convertUnit(u,e.value)));if(!arrayOfSameNumeric(a))return-1;const i=a.map((e=>e[4].value)),o=Math.min(...i);return resultToCalculation(e,u,o)}function solveMod(e,n,t){const r=n.value;if(!B(r))return-1;const u=convertUnit(r,t.value);if(!twoOfSameNumeric(r,u))return-1;let a;return a=0===u[4].value?Number.NaN:Number.isFinite(r[4].value)&&(Number.isFinite(u[4].value)||(u[4].value!==Number.POSITIVE_INFINITY||r[4].value!==Number.NEGATIVE_INFINITY&&!Object.is(0*r[4].value,-0))&&(u[4].value!==Number.NEGATIVE_INFINITY||r[4].value!==Number.POSITIVE_INFINITY&&!Object.is(0*r[4].value,0)))?Number.isFinite(u[4].value)?(r[4].value%u[4].value+u[4].value)%u[4].value:r[4].value:Number.NaN,resultToCalculation(e,r,a)}function solvePow(e,n,t){const r=n.value,u=t.value;if(!C(r))return-1;if(!twoOfSameNumeric(r,u))return-1;return numberToCalculation(e,Math.pow(r[4].value,u[4].value))}function solveRem(e,n,t){const r=n.value;if(!B(r))return-1;const u=convertUnit(r,t.value);if(!twoOfSameNumeric(r,u))return-1;let a;return a=0===u[4].value?Number.NaN:Number.isFinite(r[4].value)?Number.isFinite(u[4].value)?r[4].value%u[4].value:r[4].value:Number.NaN,resultToCalculation(e,r,a)}function solveRound(e,n,t,r,u){const a=t.value;if(!B(a))return-1;if(!u.rawPercentages&&g(a))return-1;const i=convertUnit(a,r.value);if(!twoOfSameNumeric(a,i))return-1;let o;if(0===i[4].value)o=Number.NaN;else if(Number.isFinite(a[4].value)||Number.isFinite(i[4].value))if(!Number.isFinite(a[4].value)&&Number.isFinite(i[4].value))o=a[4].value;else if(Number.isFinite(a[4].value)&&!Number.isFinite(i[4].value))switch(n){case\"down\":o=a[4].value<0?-1/0:Object.is(-0,0*a[4].value)?-0:0;break;case\"up\":o=a[4].value>0?1/0:Object.is(0,0*a[4].value)?0:-0;break;default:o=Object.is(0,0*a[4].value)?0:-0}else if(Number.isFinite(i[4].value))switch(n){case\"down\":o=Math.floor(a[4].value/i[4].value)*i[4].value;break;case\"up\":o=Math.ceil(a[4].value/i[4].value)*i[4].value;break;case\"to-zero\":o=Math.trunc(a[4].value/i[4].value)*i[4].value;break;default:{let e=Math.floor(a[4].value/i[4].value)*i[4].value,n=Math.ceil(a[4].value/i[4].value)*i[4].value;if(e>n){const t=e;e=n,n=t}const t=Math.abs(a[4].value-e),r=Math.abs(a[4].value-n);o=t===r?n:t<r?e:n;break}}else o=a[4].value;else o=Number.NaN;return resultToCalculation(e,a,o)}function solveSign(e,n,t){const r=n.value;if(!B(r))return-1;if(!t.rawPercentages&&g(r))return-1;return numberToCalculation(e,Math.sign(r[4].value))}function solveSin(e,n){const t=n.value;if(!isDimensionOrNumber(t))return-1;let r=t[4].value;if(v(t))switch(toLowerCaseAZ(t[4].unit)){case\"rad\":break;case\"deg\":r=y.get(\"rad\")(t[4].value);break;case\"grad\":r=M.get(\"rad\")(t[4].value);break;case\"turn\":r=q.get(\"rad\")(t[4].value);break;default:return-1}return r=Math.sin(r),numberToCalculation(e,r)}function solveSqrt(e,n){const t=n.value;if(!C(t))return-1;return numberToCalculation(e,Math.sqrt(t[4].value))}function solveTan(e,n){const t=n.value;if(!isDimensionOrNumber(t))return-1;const r=t[4].value;let u=0,a=t[4].value;if(v(t))switch(toLowerCaseAZ(t[4].unit)){case\"rad\":u=$.get(\"deg\")(r);break;case\"deg\":u=r,a=y.get(\"rad\")(r);break;case\"grad\":u=M.get(\"deg\")(r),a=M.get(\"rad\")(r);break;case\"turn\":u=q.get(\"deg\")(r),a=q.get(\"rad\")(r);break;default:return-1}const i=u/90;return a=u%90==0&&i%2!=0?i>0?1/0:-1/0:Math.tan(a),numberToCalculation(e,a)}function subtraction(n){if(2!==n.length)return-1;const t=n[0].value;let r=n[1].value;if(C(t)&&C(r)){const n=t[4].value-r[4].value;return new e([f.Number,n.toString(),t[2],r[3],{value:n,type:t[4].type===m.Integer&&r[4].type===m.Integer?m.Integer:m.Number}])}if(g(t)&&g(r)){const n=t[4].value-r[4].value;return new e([f.Percentage,n.toString()+\"%\",t[2],r[3],{value:n}])}if(v(t)&&v(r)&&(r=convertUnit(t,r),toLowerCaseAZ(t[4].unit)===toLowerCaseAZ(r[4].unit))){const n=t[4].value-r[4].value;return new e([f.Dimension,n.toString()+t[4].unit,t[2],r[3],{value:n,type:t[4].type===m.Integer&&r[4].type===m.Integer?m.Integer:m.Number,unit:t[4].unit}])}return-1}function solveLog(e,t){if(1===t.length){const r=t[0];if(!r||!n(r))return-1;const u=r.value;if(!C(u))return-1;return numberToCalculation(e,Math.log(u[4].value))}if(2===t.length){const r=t[0];if(!r||!n(r))return-1;const u=r.value;if(!C(u))return-1;const a=t[1];if(!a||!n(a))return-1;const i=a.value;if(!C(i))return-1;return numberToCalculation(e,Math.log(u[4].value)/Math.log(i[4].value))}return-1}const j=/^none$/i;function isNone(e){if(Array.isArray(e)){const n=e.filter((e=>!(t(e)&&r(e))));return 1===n.length&&isNone(n[0])}if(!n(e))return!1;const u=e.value;return!!D(u)&&j.test(u[4].value)}function solveRandom(e,n,t,r,u,a){const i=t.value;if(!B(i))return-1;const o=convertUnit(i,r.value);if(!twoOfSameNumeric(i,o))return-1;let l,c=null;if(u&&(c=convertUnit(i,u.value),!twoOfSameNumeric(i,c)))return-1;if(Number.isFinite(i[4].value))if(Number.isFinite(o[4].value))if(c&&(!Number.isFinite(c[4].value)||c[4].value<=0))l=i[4].value;else{const e=sfc32(crc32([n,N(i),N(o),u?`by ${u.toString()}`:\"\"].join(\",\")),a.randomSeed);let t=i[4].value,r=o[4].value;if(t>r&&([t,r]=[r,t]),c){const n=Math.abs(t-r),u=e();l=t+Math.floor(n/c[4].value*u)*c[4].value}else{const n=e();l=Number((n*(r-t)+t).toFixed(5))}}else l=Number.NaN;else l=Number.NaN;return resultToCalculation(e,i,l)}function sfc32(e=.34944106645296036,n=.19228640875738723,t=.8784393832007205,r=.04850964319275053){return()=>{const u=((e|=0)+(n|=0)|0)+(r|=0)|0;return r=r+1|0,e=n^n>>>9,n=(t|=0)+(t<<3)|0,t=(t=t<<21|t>>>11)+u|0,(u>>>0)/4294967296}}function crc32(e){let n=0,t=0,r=0;n=~n;for(let u=0,a=e.length;u<a;u++)r=255&(n^e.charCodeAt(u)),t=Number(\"0x\"+\"00000000 77073096 EE0E612C 990951BA 076DC419 706AF48F E963A535 9E6495A3 0EDB8832 79DCB8A4 E0D5E91E 97D2D988 09B64C2B 7EB17CBD E7B82D07 90BF1D91 1DB71064 6AB020F2 F3B97148 84BE41DE 1ADAD47D 6DDDE4EB F4D4B551 83D385C7 136C9856 646BA8C0 FD62F97A 8A65C9EC 14015C4F 63066CD9 FA0F3D63 8D080DF5 3B6E20C8 4C69105E D56041E4 A2677172 3C03E4D1 4B04D447 D20D85FD A50AB56B 35B5A8FA 42B2986C DBBBC9D6 ACBCF940 32D86CE3 45DF5C75 DCD60DCF ABD13D59 26D930AC 51DE003A C8D75180 BFD06116 21B4F4B5 56B3C423 CFBA9599 B8BDA50F 2802B89E 5F058808 C60CD9B2 B10BE924 2F6F7C87 58684C11 C1611DAB B6662D3D 76DC4190 01DB7106 98D220BC EFD5102A 71B18589 06B6B51F 9FBFE4A5 E8B8D433 7807C9A2 0F00F934 9609A88E E10E9818 7F6A0DBB 086D3D2D 91646C97 E6635C01 6B6B51F4 1C6C6162 856530D8 F262004E 6C0695ED 1B01A57B 8208F4C1 F50FC457 65B0D9C6 12B7E950 8BBEB8EA FCB9887C 62DD1DDF 15DA2D49 8CD37CF3 FBD44C65 4DB26158 3AB551CE A3BC0074 D4BB30E2 4ADFA541 3DD895D7 A4D1C46D D3D6F4FB 4369E96A 346ED9FC AD678846 DA60B8D0 44042D73 33031DE5 AA0A4C5F DD0D7CC9 5005713C 270241AA BE0B1010 C90C2086 5768B525 206F85B3 B966D409 CE61E49F 5EDEF90E 29D9C998 B0D09822 C7D7A8B4 59B33D17 2EB40D81 B7BD5C3B C0BA6CAD EDB88320 9ABFB3B6 03B6E20C 74B1D29A EAD54739 9DD277AF 04DB2615 73DC1683 E3630B12 94643B84 0D6D6A3E 7A6A5AA8 E40ECF0B 9309FF9D 0A00AE27 7D079EB1 F00F9344 8708A3D2 1E01F268 6906C2FE F762575D 806567CB 196C3671 6E6B06E7 FED41B76 89D32BE0 10DA7A5A 67DD4ACC F9B9DF6F 8EBEEFF9 17B7BE43 60B08ED5 D6D6A3E8 A1D1937E 38D8C2C4 4FDFF252 D1BB67F1 A6BC5767 3FB506DD 48B2364B D80D2BDA AF0A1B4C 36034AF6 41047A60 DF60EFC3 A867DF55 316E8EEF 4669BE79 CB61B38C BC66831A 256FD2A0 5268E236 CC0C7795 BB0B4703 220216B9 5505262F C5BA3BBE B2BD0B28 2BB45A92 5CB36A04 C2D7FFA7 B5D0CF31 2CD99E8B 5BDEAE1D 9B64C2B0 EC63F226 756AA39C 026D930A 9C0906A9 EB0E363F 72076785 05005713 95BF4A82 E2B87A14 7BB12BAE 0CB61B38 92D28E9B E5D5BE0D 7CDCEFB7 0BDBDF21 86D3D2D4 F1D4E242 68DDB3F8 1FDA836E 81BE16CD F6B9265B 6FB077E1 18B74777 88085AE6 FF0F6A70 66063BCA 11010B5C 8F659EFF F862AE69 616BFFD3 166CCF45 A00AE278 D70DD2EE 4E048354 3903B3C2 A7672661 D06016F7 4969474D 3E6E77DB AED16A4A D9D65ADC 40DF0B66 37D83BF0 A9BCAE53 DEBB9EC5 47B2CF7F 30B5FFE9 BDBDF21C CABAC28A 53B39330 24B4A3A6 BAD03605 CDD70693 54DE5729 23D967BF B3667A2E C4614AB8 5D681B02 2A6F2B94 B40BBE37 C30C8EA1 5A05DF1B 2D02EF8D\".substring(9*r,9*r+8)),n=n>>>8^t;return~n>>>0}const R=new Map([[\"abs\",function abs(e,n,t){return singleNodeSolver(e,n,t,solveAbs)}],[\"acos\",function acos(e,n,t){return singleNodeSolver(e,n,t,solveACos)}],[\"asin\",function asin(e,n,t){return singleNodeSolver(e,n,t,solveASin)}],[\"atan\",function atan(e,n,t){return singleNodeSolver(e,n,t,solveATan)}],[\"atan2\",function atan2(e,n,t){return twoCommaSeparatedNodesSolver(e,n,t,solveATan2)}],[\"calc\",calc$1],[\"clamp\",function clamp(t,r,a){const i=resolveGlobalsAndConstants([...t.value.filter((e=>!u(e)))],r),l=[],c=[],s=[];{let e=l;for(let t=0;t<i.length;t++){const r=i[t];if(n(r)&&F(r.value)){if(e===s)return-1;if(e===c){e=s;continue}if(e===l){e=c;continue}return-1}e.push(r)}}const v=isNone(l),m=isNone(s);if(v&&m)return calc$1(calcWrapper(c),r,a);const p=solve(calc$1(calcWrapper(c),r,a));if(-1===p)return-1;if(v){const n=solve(calc$1(calcWrapper(s),r,a));return-1===n?-1:solveMin((C=p,g=n,new o([f.Function,\"min(\",-1,-1,{value:\"min\"}],[f.CloseParen,\")\",-1,-1,void 0],[C,new e([f.Comma,\",\",-1,-1,void 0]),g])),[p,n],a)}if(m){const e=solve(calc$1(calcWrapper(l),r,a));return-1===e?-1:solveMax(maxWrapper(e,p),[e,p],a)}var C,g;const D=solve(calc$1(calcWrapper(l),r,a));if(-1===D)return-1;const B=solve(calc$1(calcWrapper(s),r,a));if(-1===B)return-1;return solveClamp(t,D,p,B,a)}],[\"cos\",function cos(e,n,t){return singleNodeSolver(e,n,t,solveCos)}],[\"exp\",function exp(e,n,t){return singleNodeSolver(e,n,t,solveExp)}],[\"hypot\",function hypot(e,n,t){return variadicNodesSolver(e,e.value,n,t,solveHypot)}],[\"log\",function log(e,n,t){return variadicNodesSolver(e,e.value,n,t,solveLog)}],[\"max\",function max(e,n,t){return variadicNodesSolver(e,e.value,n,t,solveMax)}],[\"min\",function min(e,n,t){return variadicNodesSolver(e,e.value,n,t,solveMin)}],[\"mod\",function mod(e,n,t){return twoCommaSeparatedNodesSolver(e,n,t,solveMod)}],[\"pow\",function pow(e,n,t){return twoCommaSeparatedNodesSolver(e,n,t,solvePow)}],[\"random\",function random(e,t,r){const a=e.value.filter((e=>!u(e)));let i=\"\";const o=[],l=[];for(let e=0;e<a.length;e++){const t=a[e];if(!i&&0===l.length&&n(t)&&D(t.value)){const r=t.value[4].value.toLowerCase();if(\"per-element\"===r||r.startsWith(\"--\")){i=r;const t=a[e+1];if(!n(t)||!F(t.value))return-1;e++;continue}}if(n(t)&&F(t.value)){const t=a[e+1];if(l.length>0&&n(t)&&D(t.value)){const n=t.value[4].value.toLowerCase();if(\"by\"===n||n.startsWith(\"--\")){o.push(...a.slice(e+2));break}}}l.push(t)}const c=twoCommaSeparatedArguments(l,t,r);if(-1===c)return-1;const[s,v]=c;let f=null;if(o.length&&(f=singleArgument(o,t,r),-1===f))return-1;return solveRandom(e,i,s,v,f,r)}],[\"rem\",function rem(e,n,t){return twoCommaSeparatedNodesSolver(e,n,t,solveRem)}],[\"round\",function round(t,r,a){const i=resolveGlobalsAndConstants([...t.value.filter((e=>!u(e)))],r);let o=\"\",l=!1;const c=[],s=[];{let e=c;for(let t=0;t<i.length;t++){const r=i[t];if(!o&&0===c.length&&0===s.length&&n(r)&&D(r.value)){const e=r.value[4].value.toLowerCase();if(V.has(e)){o=e;continue}}if(n(r)&&F(r.value)){if(e===s)return-1;if(e===c&&o&&0===c.length)continue;if(e===c){l=!0,e=s;continue}return-1}e.push(r)}}const v=solve(calc$1(calcWrapper(c),r,a));if(-1===v)return-1;l||0!==s.length||s.push(new e([f.Number,\"1\",-1,-1,{value:1,type:m.Integer}]));const p=solve(calc$1(calcWrapper(s),r,a));if(-1===p)return-1;o||(o=\"nearest\");return solveRound(t,o,v,p,a)}],[\"sign\",function sign(e,n,t){return singleNodeSolver(e,n,t,solveSign)}],[\"sin\",function sin(e,n,t){return singleNodeSolver(e,n,t,solveSin)}],[\"sqrt\",function sqrt(e,n,t){return singleNodeSolver(e,n,t,solveSqrt)}],[\"tan\",function tan(e,n,t){return singleNodeSolver(e,n,t,solveTan)}]]);function calc$1(e,t,r){const o=resolveGlobalsAndConstants([...e.value.filter((e=>!u(e)))],t);if(1===o.length&&n(o[0]))return{inputs:[o[0]],operation:unary};let l=0;for(;l<o.length;){const e=o[l];if(a(e)&&A(e.startToken)){const n=calc$1(e,t,r);if(-1===n)return-1;o.splice(l,1,n)}else if(i(e)){const n=R.get(e.getName().toLowerCase());if(!n)return-1;const u=n(e,t,r);if(-1===u)return-1;o.splice(l,1,u)}else l++}if(l=0,1===o.length&&isCalculation(o[0]))return o[0];for(;l<o.length;){const e=o[l];if(!e||!n(e)&&!isCalculation(e)){l++;continue}const t=o[l+1];if(!t||!n(t)){l++;continue}const r=t.value;if(!d(r)||\"*\"!==r[4].value&&\"/\"!==r[4].value){l++;continue}const u=o[l+2];if(!u||!n(u)&&!isCalculation(u))return-1;\"*\"!==r[4].value?\"/\"!==r[4].value?l++:o.splice(l,3,{inputs:[e,u],operation:division}):o.splice(l,3,{inputs:[e,u],operation:multiplication})}if(l=0,1===o.length&&isCalculation(o[0]))return o[0];for(;l<o.length;){const e=o[l];if(!e||!n(e)&&!isCalculation(e)){l++;continue}const t=o[l+1];if(!t||!n(t)){l++;continue}const r=t.value;if(!d(r)||\"+\"!==r[4].value&&\"-\"!==r[4].value){l++;continue}const u=o[l+2];if(!u||!n(u)&&!isCalculation(u))return-1;\"+\"!==r[4].value?\"-\"!==r[4].value?l++:o.splice(l,3,{inputs:[e,u],operation:subtraction}):o.splice(l,3,{inputs:[e,u],operation:addition})}return 1===o.length&&isCalculation(o[0])?o[0]:-1}function singleNodeSolver(e,n,t,r){const u=singleArgument(e.value,n,t);return-1===u?-1:r(e,u,t)}function singleArgument(e,n,t){const r=solve(calc$1(calcWrapper(resolveGlobalsAndConstants([...e.filter((e=>!u(e)))],n)),n,t));return-1===r?-1:r}function twoCommaSeparatedNodesSolver(e,n,t,r){const u=twoCommaSeparatedArguments(e.value,n,t);if(-1===u)return-1;const[a,i]=u;return r(e,a,i,t)}function twoCommaSeparatedArguments(e,t,r){const a=resolveGlobalsAndConstants([...e.filter((e=>!u(e)))],t),i=[],o=[];{let e=i;for(let t=0;t<a.length;t++){const r=a[t];if(n(r)&&F(r.value)){if(e===o)return-1;if(e===i){e=o;continue}return-1}e.push(r)}}const l=solve(calc$1(calcWrapper(i),t,r));if(-1===l)return-1;const c=solve(calc$1(calcWrapper(o),t,r));return-1===c?-1:[l,c]}function variadicNodesSolver(e,n,t,r,u){const a=variadicArguments(e.value,t,r);return-1===a?-1:u(e,a,r)}function variadicArguments(e,t,r){const a=resolveGlobalsAndConstants([...e.filter((e=>!u(e)))],t),i=[];{const e=[];let u=[];for(let t=0;t<a.length;t++){const r=a[t];n(r)&&F(r.value)?(e.push(u),u=[]):u.push(r)}e.push(u);for(let n=0;n<e.length;n++){if(0===e[n].length)return-1;const u=solve(calc$1(calcWrapper(e[n]),t,r));if(-1===u)return-1;i.push(u)}}return i}const V=new Set([\"nearest\",\"up\",\"down\",\"to-zero\"]);function calcWrapper(e){return new o([f.Function,\"calc(\",-1,-1,{value:\"calc\"}],[f.CloseParen,\")\",-1,-1,void 0],e)}function maxWrapper(n,t){return new o([f.Function,\"max(\",-1,-1,{value:\"max\"}],[f.CloseParen,\")\",-1,-1,void 0],[n,new e([f.Comma,\",\",-1,-1,void 0]),t])}function patchNaN(n){if(-1===n)return-1;if(i(n))return n;const t=n.value;return B(t)&&Number.isNaN(t[4].value)?C(t)?new o([f.Function,\"calc(\",t[2],t[3],{value:\"calc\"}],[f.CloseParen,\")\",t[2],t[3],void 0],[new e([f.Ident,\"NaN\",t[2],t[3],{value:\"NaN\"}])]):v(t)?new o([f.Function,\"calc(\",t[2],t[3],{value:\"calc\"}],[f.CloseParen,\")\",t[2],t[3],void 0],[new e([f.Ident,\"NaN\",t[2],t[3],{value:\"NaN\"}]),new l([[f.Whitespace,\" \",t[2],t[3],void 0]]),new e([f.Delim,\"*\",t[2],t[3],{value:\"*\"}]),new l([[f.Whitespace,\" \",t[2],t[3],void 0]]),new e([f.Dimension,\"1\"+t[4].unit,t[2],t[3],{value:1,type:m.Integer,unit:t[4].unit}])]):g(t)?new o([f.Function,\"calc(\",t[2],t[3],{value:\"calc\"}],[f.CloseParen,\")\",t[2],t[3],void 0],[new e([f.Ident,\"NaN\",t[2],t[3],{value:\"NaN\"}]),new l([[f.Whitespace,\" \",t[2],t[3],void 0]]),new e([f.Delim,\"*\",t[2],t[3],{value:\"*\"}]),new l([[f.Whitespace,\" \",t[2],t[3],void 0]]),new e([f.Percentage,\"1%\",t[2],t[3],{value:1}])]):-1:n}function patchInfinity(n){if(-1===n)return-1;if(i(n))return n;const t=n.value;if(!B(t))return n;if(Number.isFinite(t[4].value)||Number.isNaN(t[4].value))return n;let r=\"\";return Number.NEGATIVE_INFINITY===t[4].value&&(r=\"-\"),C(t)?new o([f.Function,\"calc(\",t[2],t[3],{value:\"calc\"}],[f.CloseParen,\")\",t[2],t[3],void 0],[new e([f.Ident,r+\"infinity\",t[2],t[3],{value:r+\"infinity\"}])]):v(t)?new o([f.Function,\"calc(\",t[2],t[3],{value:\"calc\"}],[f.CloseParen,\")\",t[2],t[3],void 0],[new e([f.Ident,r+\"infinity\",t[2],t[3],{value:r+\"infinity\"}]),new l([[f.Whitespace,\" \",t[2],t[3],void 0]]),new e([f.Delim,\"*\",t[2],t[3],{value:\"*\"}]),new l([[f.Whitespace,\" \",t[2],t[3],void 0]]),new e([f.Dimension,\"1\"+t[4].unit,t[2],t[3],{value:1,type:m.Integer,unit:t[4].unit}])]):new o([f.Function,\"calc(\",t[2],t[3],{value:\"calc\"}],[f.CloseParen,\")\",t[2],t[3],void 0],[new e([f.Ident,r+\"infinity\",t[2],t[3],{value:r+\"infinity\"}]),new l([[f.Whitespace,\" \",t[2],t[3],void 0]]),new e([f.Delim,\"*\",t[2],t[3],{value:\"*\"}]),new l([[f.Whitespace,\" \",t[2],t[3],void 0]]),new e([f.Percentage,\"1%\",t[2],t[3],{value:1}])])}function patchMinusZero(e){if(-1===e)return-1;if(i(e))return e;const n=e.value;return B(n)&&Object.is(-0,n[4].value)?(\"-0\"===n[1]||(g(n)?n[1]=\"-0%\":v(n)?n[1]=\"-0\"+n[4].unit:n[1]=\"-0\"),e):e}function patchPrecision(e,n=13){if(-1===e)return-1;if(n<=0)return e;if(i(e))return e;const t=e.value;if(!B(t))return e;if(Number.isInteger(t[4].value))return e;const r=Number(t[4].value.toFixed(n)).toString();return C(t)?t[1]=r:g(t)?t[1]=r+\"%\":v(t)&&(t[1]=r+t[4].unit),e}function patchCanonicalUnit(e){return-1===e?-1:i(e)?e:v(e.value)?(e.value=toCanonicalUnit(e.value),e):e}function patchCalcResult(e,n){let t=e;return n?.toCanonicalUnits&&(t=patchCanonicalUnit(t)),t=patchPrecision(t,n?.precision),t=patchMinusZero(t),n?.censorIntoStandardRepresentableValues||(t=patchNaN(t),t=patchInfinity(t)),t}function tokenizeGlobals(e){const n=new Map;if(!e)return n;for(const[t,r]of e)if(b(r))n.set(t,r);else if(\"string\"!=typeof r);else{const e=h({css:r}),u=e.nextToken();if(e.nextToken(),!e.endOfFile())continue;if(!B(u))continue;n.set(t,u)}return n}function calc(e,n){return calcFromComponentValues(c(w({css:e}),{}),n).map((e=>e.map((e=>N(...e.tokens()))).join(\"\"))).join(\",\")}function calcFromComponentValues(e,n){const t=tokenizeGlobals(n?.globals);return s(e,(e=>{if(!i(e))return;const r=R.get(e.getName().toLowerCase());if(!r)return;const u=patchCalcResult(solve(r(e,t,n??{})),n);return-1!==u?u:void 0}))}const Y=new Set(R.keys());export{calc,calcFromComponentValues,Y as mathFunctionNames};\n","/**\n * constant\n */\n\n/* values and units */\nconst _DIGIT = '(?:0|[1-9]\\\\d*)';\nconst _COMPARE = 'clamp|max|min';\nconst _EXPO = 'exp|hypot|log|pow|sqrt';\nconst _SIGN = 'abs|sign';\nconst _STEP = 'mod|rem|round';\nconst _TRIG = 'a?(?:cos|sin|tan)|atan2';\nconst _MATH = `${_COMPARE}|${_EXPO}|${_SIGN}|${_STEP}|${_TRIG}`;\nconst _CALC = `calc|${_MATH}`;\nconst _VAR = `var|${_CALC}`;\nexport const ANGLE = 'deg|g?rad|turn';\nexport const NUM = `[+-]?(?:${_DIGIT}(?:\\\\.\\\\d*)?|\\\\.\\\\d+)(?:e-?${_DIGIT})?`;\nexport const NONE = 'none';\nexport const PCT = `${NUM}%`;\nexport const SYN_FN_CALC = `^(?:${_CALC})\\\\(|(?<=[*\\\\/\\\\s\\\\(])(?:${_CALC})\\\\(`;\nexport const SYN_FN_MATH_START = `^(?:${_MATH})\\\\($`;\nexport const SYN_FN_VAR = '^var\\\\(|(?<=[*\\\\/\\\\s\\\\(])var\\\\(';\nexport const SYN_FN_VAR_START = `^(?:${_VAR})\\\\(`;\n\n/* colors */\nconst _ALPHA = `(?:\\\\s*\\\\/\\\\s*(?:${NUM}|${PCT}|${NONE}))?`;\nconst _ALPHA_LV3 = `(?:\\\\s*,\\\\s*(?:${NUM}|${PCT}))?`;\nconst _COLOR_FUNC = '(?:ok)?l(?:ab|ch)|color|hsla?|hwb|rgba?';\nconst _COLOR_KEY = '[a-z]+|#[\\\\da-f]{3}|#[\\\\da-f]{4}|#[\\\\da-f]{6}|#[\\\\da-f]{8}';\nconst _CS_HUE = '(?:ok)?lch|hsl|hwb';\nconst _CS_HUE_ARC = '(?:de|in)creasing|longer|shorter';\nconst _NUM_ANGLE = `${NUM}(?:${ANGLE})?`;\nconst _NUM_ANGLE_NONE = `(?:${NUM}(?:${ANGLE})?|${NONE})`;\nconst _NUM_PCT_NONE = `(?:${NUM}|${PCT}|${NONE})`;\nexport const CS_HUE = `(?:${_CS_HUE})(?:\\\\s(?:${_CS_HUE_ARC})\\\\shue)?`;\nexport const CS_HUE_CAPT = `(${_CS_HUE})(?:\\\\s(${_CS_HUE_ARC})\\\\shue)?`;\nexport const CS_LAB = '(?:ok)?lab';\nexport const CS_LCH = '(?:ok)?lch';\nexport const CS_SRGB = 'srgb(?:-linear)?';\nexport const CS_RGB = `(?:a98|prophoto)-rgb|display-p3|rec2020|${CS_SRGB}`;\nexport const CS_XYZ = 'xyz(?:-d(?:50|65))?';\nexport const CS_MIX = `${CS_HUE}|${CS_LAB}|${CS_SRGB}|${CS_XYZ}`;\nexport const FN_COLOR = 'color(';\nexport const FN_MIX = 'color-mix(';\nexport const FN_REL = `(?:${_COLOR_FUNC})\\\\(\\\\s*from\\\\s+`;\nexport const FN_REL_CAPT = `(${_COLOR_FUNC})\\\\(\\\\s*from\\\\s+`;\nexport const FN_VAR = 'var(';\nexport const SYN_FN_COLOR = `(?:${CS_RGB}|${CS_XYZ})(?:\\\\s+${_NUM_PCT_NONE}){3}${_ALPHA}`;\nexport const SYN_FN_REL = `^${FN_REL}|(?<=[\\\\s])${FN_REL}`;\nexport const SYN_HSL = `${_NUM_ANGLE_NONE}(?:\\\\s+${_NUM_PCT_NONE}){2}${_ALPHA}`;\nexport const SYN_HSL_LV3 = `${_NUM_ANGLE}(?:\\\\s*,\\\\s*${PCT}){2}${_ALPHA_LV3}`;\nexport const SYN_LCH = `(?:${_NUM_PCT_NONE}\\\\s+){2}${_NUM_ANGLE_NONE}${_ALPHA}`;\nexport const SYN_MOD = `${_NUM_PCT_NONE}(?:\\\\s+${_NUM_PCT_NONE}){2}${_ALPHA}`;\nexport const SYN_RGB_LV3 = `(?:${NUM}(?:\\\\s*,\\\\s*${NUM}){2}|${PCT}(?:\\\\s*,\\\\s*${PCT}){2})${_ALPHA_LV3}`;\nexport const SYN_COLOR_TYPE = `${_COLOR_KEY}|hsla?\\\\(\\\\s*${SYN_HSL_LV3}\\\\s*\\\\)|rgba?\\\\(\\\\s*${SYN_RGB_LV3}\\\\s*\\\\)|(?:hsla?|hwb)\\\\(\\\\s*${SYN_HSL}\\\\s*\\\\)|(?:(?:ok)?lab|rgba?)\\\\(\\\\s*${SYN_MOD}\\\\s*\\\\)|(?:ok)?lch\\\\(\\\\s*${SYN_LCH}\\\\s*\\\\)|color\\\\(\\\\s*${SYN_FN_COLOR}\\\\s*\\\\)`;\nexport const SYN_MIX_PART = `(?:${SYN_COLOR_TYPE})(?:\\\\s+${PCT})?`;\nexport const SYN_MIX = `color-mix\\\\(\\\\s*in\\\\s+(?:${CS_MIX})\\\\s*,\\\\s*${SYN_MIX_PART}\\\\s*,\\\\s*${SYN_MIX_PART}\\\\s*\\\\)`;\nexport const SYN_MIX_CAPT = `color-mix\\\\(\\\\s*in\\\\s+(${CS_MIX})\\\\s*,\\\\s*(${SYN_MIX_PART})\\\\s*,\\\\s*(${SYN_MIX_PART})\\\\s*\\\\)`;\n\n/* formats */\nexport const VAL_COMP = 'computedValue';\nexport const VAL_MIX = 'mixValue';\nexport const VAL_SPEC = 'specifiedValue';\n","/**\n * css-calc\n */\n\nimport { calc } from '@csstools/css-calc';\nimport { TokenType, tokenize } from '@csstools/css-tokenizer';\nimport type { CSSToken } from '@csstools/css-tokenizer';\nimport { LRUCache } from 'lru-cache';\nimport { isString, isStringOrNumber } from './common';\nimport { roundToPrecision, valueToJsonString } from './util';\nimport type { IOptions } from './typedef';\n\n/* constants */\nimport {\n  FN_VAR,\n  NUM,\n  SYN_FN_CALC,\n  SYN_FN_MATH_START,\n  SYN_FN_VAR,\n  SYN_FN_VAR_START,\n  VAL_SPEC\n} from './constant';\nconst {\n  CloseParen: PAREN_CLOSE,\n  Comment: COMMENT,\n  Dimension: DIM,\n  EOF,\n  Function: FUNC,\n  OpenParen: PAREN_OPEN,\n  Whitespace: W_SPACE\n} = TokenType;\nconst TRIA = 3;\nconst HEX = 16;\nconst MAX_PCT = 100;\n\n/* regexp */\nconst REG_FN_CALC = new RegExp(SYN_FN_CALC);\nconst REG_FN_MATH_START = new RegExp(SYN_FN_MATH_START);\nconst REG_FN_VAR = new RegExp(SYN_FN_VAR);\nconst REG_FN_VAR_START = new RegExp(SYN_FN_VAR_START);\nconst REG_OPERATOR = /\\s[*+/-]\\s/;\nconst REG_TYPE_DIM = new RegExp(`^(${NUM})([a-z]+)$`);\nconst REG_TYPE_DIM_PCT = new RegExp(`^(${NUM})([a-z]+|%)$`);\nconst REG_TYPE_PCT = new RegExp(`^(${NUM})%$`);\n\n/* cached results */\nexport const cachedResults = new LRUCache({\n  max: 4096\n});\n\n/**\n * calclator\n */\nexport class Calculator {\n  /* private */\n  // number\n  #hasNum: boolean;\n  #numSum: number[];\n  #numMul: number[];\n  // percentage\n  #hasPct: boolean;\n  #pctSum: number[];\n  #pctMul: number[];\n  // dimension\n  #hasDim: boolean;\n  #dimSum: string[];\n  #dimSub: string[];\n  #dimMul: string[];\n  #dimDiv: string[];\n  // et cetra\n  #hasEtc: boolean;\n  #etcSum: string[];\n  #etcSub: string[];\n  #etcMul: string[];\n  #etcDiv: string[];\n\n  /**\n   * constructor\n   */\n  constructor() {\n    // number\n    this.#hasNum = false;\n    this.#numSum = [];\n    this.#numMul = [];\n    // percentage\n    this.#hasPct = false;\n    this.#pctSum = [];\n    this.#pctMul = [];\n    // dimension\n    this.#hasDim = false;\n    this.#dimSum = [];\n    this.#dimSub = [];\n    this.#dimMul = [];\n    this.#dimDiv = [];\n    // et cetra\n    this.#hasEtc = false;\n    this.#etcSum = [];\n    this.#etcSub = [];\n    this.#etcMul = [];\n    this.#etcDiv = [];\n  }\n\n  get hasNum() {\n    return this.#hasNum;\n  }\n\n  set hasNum(value: boolean) {\n    this.#hasNum = !!value;\n  }\n\n  get numSum() {\n    return this.#numSum;\n  }\n\n  get numMul() {\n    return this.#numMul;\n  }\n\n  get hasPct() {\n    return this.#hasPct;\n  }\n\n  set hasPct(value: boolean) {\n    this.#hasPct = !!value;\n  }\n\n  get pctSum() {\n    return this.#pctSum;\n  }\n\n  get pctMul() {\n    return this.#pctMul;\n  }\n\n  get hasDim() {\n    return this.#hasDim;\n  }\n\n  set hasDim(value: boolean) {\n    this.#hasDim = !!value;\n  }\n\n  get dimSum() {\n    return this.#dimSum;\n  }\n\n  get dimSub() {\n    return this.#dimSub;\n  }\n\n  get dimMul() {\n    return this.#dimMul;\n  }\n\n  get dimDiv() {\n    return this.#dimDiv;\n  }\n\n  get hasEtc() {\n    return this.#hasEtc;\n  }\n\n  set hasEtc(value: boolean) {\n    this.#hasEtc = !!value;\n  }\n\n  get etcSum() {\n    return this.#etcSum;\n  }\n\n  get etcSub() {\n    return this.#etcSub;\n  }\n\n  get etcMul() {\n    return this.#etcMul;\n  }\n\n  get etcDiv() {\n    return this.#etcDiv;\n  }\n\n  /**\n   * clear values\n   * @returns void\n   */\n  clear() {\n    // number\n    this.#hasNum = false;\n    this.#numSum = [];\n    this.#numMul = [];\n    // percentage\n    this.#hasPct = false;\n    this.#pctSum = [];\n    this.#pctMul = [];\n    // dimension\n    this.#hasDim = false;\n    this.#dimSum = [];\n    this.#dimSub = [];\n    this.#dimMul = [];\n    this.#dimDiv = [];\n    // et cetra\n    this.#hasEtc = false;\n    this.#etcSum = [];\n    this.#etcSub = [];\n    this.#etcMul = [];\n    this.#etcDiv = [];\n  }\n\n  /**\n   * sort values\n   * @param values - values\n   * @returns sorted values\n   */\n  sort(values: string[] = []): string[] {\n    const arr = [...values];\n    if (arr.length > 1) {\n      arr.sort((a, b) => {\n        let res;\n        if (REG_TYPE_DIM_PCT.test(a) && REG_TYPE_DIM_PCT.test(b)) {\n          const [, valA = '', unitA = ''] = a.match(\n            REG_TYPE_DIM_PCT\n          ) as RegExpExecArray;\n          const [, valB = '', unitB = ''] = b.match(\n            REG_TYPE_DIM_PCT\n          ) as RegExpExecArray;\n          if (unitA === unitB) {\n            if (Number(valA) === Number(valB)) {\n              res = 0;\n            } else if (Number(valA) > Number(valB)) {\n              res = 1;\n            } else {\n              res = -1;\n            }\n          } else if (unitA > unitB) {\n            res = 1;\n          } else {\n            res = -1;\n          }\n        } else {\n          if (a === b) {\n            res = 0;\n          } else if (a > b) {\n            res = 1;\n          } else {\n            res = -1;\n          }\n        }\n        return res;\n      });\n    }\n    return arr;\n  }\n\n  /**\n   * multiply values\n   * @returns resolved value\n   */\n  multiply(): string | null {\n    const value = [];\n    let num;\n    if (this.#hasNum) {\n      num = 1;\n      for (const i of this.#numMul) {\n        num *= i;\n        if (num === 0 || !Number.isFinite(num) || Number.isNaN(num)) {\n          break;\n        }\n      }\n      if (!this.#hasPct && !this.#hasDim && !this.hasEtc) {\n        if (Number.isFinite(num)) {\n          num = roundToPrecision(num, HEX);\n        }\n        value.push(num);\n      }\n    }\n    if (this.#hasPct) {\n      if (typeof num !== 'number') {\n        num = 1;\n      }\n      for (const i of this.#pctMul) {\n        num *= i;\n        if (num === 0 || !Number.isFinite(num) || Number.isNaN(num)) {\n          break;\n        }\n      }\n      if (Number.isFinite(num)) {\n        num = `${roundToPrecision(num, HEX)}%`;\n      }\n      if (!this.#hasDim && !this.hasEtc) {\n        value.push(num);\n      }\n    }\n    if (this.#hasDim) {\n      let dim = '';\n      let mul = '';\n      let div = '';\n      if (this.#dimMul.length) {\n        if (this.#dimMul.length === 1) {\n          [mul] = this.#dimMul as [string];\n        } else {\n          mul = `${this.sort(this.#dimMul).join(' * ')}`;\n        }\n      }\n      if (this.#dimDiv.length) {\n        if (this.#dimDiv.length === 1) {\n          [div] = this.#dimDiv as [string];\n        } else {\n          div = `${this.sort(this.#dimDiv).join(' * ')}`;\n        }\n      }\n      if (Number.isFinite(num)) {\n        if (mul) {\n          if (div) {\n            if (div.includes('*')) {\n              dim = calc(`calc(${num} * ${mul} / (${div}))`, {\n                toCanonicalUnits: true\n              });\n            } else {\n              dim = calc(`calc(${num} * ${mul} / ${div})`, {\n                toCanonicalUnits: true\n              });\n            }\n          } else {\n            dim = calc(`calc(${num} * ${mul})`, {\n              toCanonicalUnits: true\n            });\n          }\n        } else if (div.includes('*')) {\n          dim = calc(`calc(${num} / (${div}))`, {\n            toCanonicalUnits: true\n          });\n        } else {\n          dim = calc(`calc(${num} / ${div})`, {\n            toCanonicalUnits: true\n          });\n        }\n        value.push(dim.replace(/^calc/, ''));\n      } else {\n        if (!value.length && num !== undefined) {\n          value.push(num);\n        }\n        if (mul) {\n          if (div) {\n            if (div.includes('*')) {\n              dim = calc(`calc(${mul} / (${div}))`, {\n                toCanonicalUnits: true\n              });\n            } else {\n              dim = calc(`calc(${mul} / ${div})`, {\n                toCanonicalUnits: true\n              });\n            }\n          } else {\n            dim = calc(`calc(${mul})`, {\n              toCanonicalUnits: true\n            });\n          }\n          if (value.length) {\n            value.push('*', dim.replace(/^calc/, ''));\n          } else {\n            value.push(dim.replace(/^calc/, ''));\n          }\n        } else {\n          dim = calc(`calc(${div})`, {\n            toCanonicalUnits: true\n          });\n          if (value.length) {\n            value.push('/', dim.replace(/^calc/, ''));\n          } else {\n            value.push('1', '/', dim.replace(/^calc/, ''));\n          }\n        }\n      }\n    }\n    if (this.#hasEtc) {\n      if (this.#etcMul.length) {\n        if (!value.length && num !== undefined) {\n          value.push(num);\n        }\n        const mul = this.sort(this.#etcMul).join(' * ');\n        if (value.length) {\n          value.push(`* ${mul}`);\n        } else {\n          value.push(`${mul}`);\n        }\n      }\n      if (this.#etcDiv.length) {\n        const div = this.sort(this.#etcDiv).join(' * ');\n        if (div.includes('*')) {\n          if (value.length) {\n            value.push(`/ (${div})`);\n          } else {\n            value.push(`1 / (${div})`);\n          }\n        } else if (value.length) {\n          value.push(`/ ${div}`);\n        } else {\n          value.push(`1 / ${div}`);\n        }\n      }\n    }\n    return value.join(' ') || null;\n  }\n\n  /**\n   * sum values\n   * @returns resolved value\n   */\n  sum(): string | null {\n    const value = [];\n    if (this.#hasNum) {\n      let num = 0;\n      for (const i of this.#numSum) {\n        num += i;\n        if (!Number.isFinite(num) || Number.isNaN(num)) {\n          break;\n        }\n      }\n      value.push(num);\n    }\n    if (this.#hasPct) {\n      let num: number | string = 0;\n      for (const i of this.#pctSum) {\n        num += i;\n        if (!Number.isFinite(num)) {\n          break;\n        }\n      }\n      if (Number.isFinite(num)) {\n        num = `${num}%`;\n      }\n      if (value.length) {\n        value.push(`+ ${num}`);\n      } else {\n        value.push(num);\n      }\n    }\n    if (this.#hasDim) {\n      let dim, sum, sub;\n      if (this.#dimSum.length) {\n        sum = this.#dimSum.join(' + ');\n      }\n      if (this.#dimSub.length) {\n        sub = this.#dimSub.join(' + ');\n      }\n      if (sum) {\n        if (sub) {\n          if (sub.includes('-')) {\n            dim = calc(`calc(${sum} - (${sub}))`, {\n              toCanonicalUnits: true\n            });\n          } else {\n            dim = calc(`calc(${sum} - ${sub})`, {\n              toCanonicalUnits: true\n            });\n          }\n        } else {\n          dim = calc(`calc(${sum})`, {\n            toCanonicalUnits: true\n          });\n        }\n      } else {\n        dim = calc(`calc(-1 * (${sub}))`, {\n          toCanonicalUnits: true\n        });\n      }\n      if (value.length) {\n        value.push('+', dim.replace(/^calc/, ''));\n      } else {\n        value.push(dim.replace(/^calc/, ''));\n      }\n    }\n    if (this.#hasEtc) {\n      if (this.#etcSum.length) {\n        const sum = this.sort(this.#etcSum)\n          .map(item => {\n            let res;\n            if (\n              REG_OPERATOR.test(item) &&\n              !item.startsWith('(') &&\n              !item.endsWith(')')\n            ) {\n              res = `(${item})`;\n            } else {\n              res = item;\n            }\n            return res;\n          })\n          .join(' + ');\n        if (value.length) {\n          if (this.#etcSum.length > 1) {\n            value.push(`+ (${sum})`);\n          } else {\n            value.push(`+ ${sum}`);\n          }\n        } else {\n          value.push(`${sum}`);\n        }\n      }\n      if (this.#etcSub.length) {\n        const sub = this.sort(this.#etcSub)\n          .map(item => {\n            let res;\n            if (\n              REG_OPERATOR.test(item) &&\n              !item.startsWith('(') &&\n              !item.endsWith(')')\n            ) {\n              res = `(${item})`;\n            } else {\n              res = item;\n            }\n            return res;\n          })\n          .join(' + ');\n        if (value.length) {\n          if (this.#etcSub.length > 1) {\n            value.push(`- (${sub})`);\n          } else {\n            value.push(`- ${sub}`);\n          }\n        } else if (this.#etcSub.length > 1) {\n          value.push(`-1 * (${sub})`);\n        } else {\n          value.push(`-1 * ${sub}`);\n        }\n      }\n    }\n    return value.join(' ');\n  }\n}\n\n/**\n * sort calc values\n * @param values - values to sort\n * @param [finalize] - finalize values\n * @returns sorted values\n */\nexport const sortCalcValues = (\n  values: (number | string)[] = [],\n  finalize: boolean = false\n): string => {\n  if (values.length < TRIA) {\n    throw new Error(`Unexpected array length ${values.length}.`);\n  }\n  const start = values.shift();\n  if (!isString(start) || !start.endsWith('(')) {\n    throw new Error(`Unexpected token ${start}.`);\n  }\n  const end = values.pop();\n  if (end !== ')') {\n    throw new Error(`Unexpected token ${end}.`);\n  }\n  if (values.length === 1) {\n    const [value] = values;\n    if (!isStringOrNumber(value)) {\n      throw new Error(`Unexpected token ${value}.`);\n    }\n    return `${start}${value}${end}`;\n  }\n  const sortedValues = [];\n  const cal = new Calculator();\n  let operator: string = '';\n  const l = values.length;\n  for (let i = 0; i < l; i++) {\n    const value = values[i];\n    if (!isStringOrNumber(value)) {\n      throw new Error(`Unexpected token ${value}.`);\n    }\n    if (value === '*' || value === '/') {\n      operator = value;\n    } else if (value === '+' || value === '-') {\n      const sortedValue = cal.multiply();\n      if (sortedValue) {\n        sortedValues.push(sortedValue, value);\n      }\n      cal.clear();\n      operator = '';\n    } else {\n      const numValue = Number(value);\n      const strValue = `${value}`;\n      switch (operator) {\n        case '/': {\n          if (Number.isFinite(numValue)) {\n            cal.hasNum = true;\n            cal.numMul.push(1 / numValue);\n          } else if (REG_TYPE_PCT.test(strValue)) {\n            const [, val = ''] = strValue.match(\n              REG_TYPE_PCT\n            ) as RegExpExecArray;\n            cal.hasPct = true;\n            cal.pctMul.push((MAX_PCT * MAX_PCT) / Number(val));\n          } else if (REG_TYPE_DIM.test(strValue)) {\n            cal.hasDim = true;\n            cal.dimDiv.push(strValue);\n          } else {\n            cal.hasEtc = true;\n            cal.etcDiv.push(strValue);\n          }\n          break;\n        }\n        case '*':\n        default: {\n          if (Number.isFinite(numValue)) {\n            cal.hasNum = true;\n            cal.numMul.push(numValue);\n          } else if (REG_TYPE_PCT.test(strValue)) {\n            const [, val = ''] = strValue.match(\n              REG_TYPE_PCT\n            ) as RegExpExecArray;\n            cal.hasPct = true;\n            cal.pctMul.push(Number(val));\n          } else if (REG_TYPE_DIM.test(strValue)) {\n            cal.hasDim = true;\n            cal.dimMul.push(strValue);\n          } else {\n            cal.hasEtc = true;\n            cal.etcMul.push(strValue);\n          }\n        }\n      }\n    }\n    if (i === l - 1) {\n      const sortedValue = cal.multiply();\n      sortedValues.push(sortedValue);\n      cal.clear();\n      operator = '';\n    }\n  }\n  let resolvedValue = '';\n  if (finalize && (sortedValues.includes('+') || sortedValues.includes('-'))) {\n    const finalizedValues = [];\n    cal.clear();\n    operator = '';\n    const l = sortedValues.length;\n    for (let i = 0; i < l; i++) {\n      const value = sortedValues[i];\n      if (isStringOrNumber(value)) {\n        if (value === '+' || value === '-') {\n          operator = value;\n        } else {\n          const numValue = Number(value);\n          const strValue = `${value}`;\n          switch (operator) {\n            case '-': {\n              if (Number.isFinite(numValue)) {\n                cal.hasNum = true;\n                cal.numSum.push(-1 * numValue);\n              } else if (REG_TYPE_PCT.test(strValue)) {\n                const [, val = ''] = strValue.match(\n                  REG_TYPE_PCT\n                ) as RegExpExecArray;\n                cal.hasPct = true;\n                cal.pctSum.push(-1 * Number(val));\n              } else if (REG_TYPE_DIM.test(strValue)) {\n                cal.hasDim = true;\n                cal.dimSub.push(strValue);\n              } else {\n                cal.hasEtc = true;\n                cal.etcSub.push(strValue);\n              }\n              break;\n            }\n            case '+':\n            default: {\n              if (Number.isFinite(numValue)) {\n                cal.hasNum = true;\n                cal.numSum.push(numValue);\n              } else if (REG_TYPE_PCT.test(strValue)) {\n                const [, val = ''] = strValue.match(\n                  REG_TYPE_PCT\n                ) as RegExpExecArray;\n                cal.hasPct = true;\n                cal.pctSum.push(Number(val));\n              } else if (REG_TYPE_DIM.test(strValue)) {\n                cal.hasDim = true;\n                cal.dimSum.push(strValue);\n              } else {\n                cal.hasEtc = true;\n                cal.etcSum.push(strValue);\n              }\n            }\n          }\n        }\n      }\n      if (i === l - 1) {\n        const sortedValue = cal.sum();\n        finalizedValues.push(sortedValue);\n        cal.clear();\n        operator = '';\n      }\n    }\n    resolvedValue = finalizedValues.join(' ');\n  } else {\n    resolvedValue = sortedValues.join(' ');\n  }\n  return `${start}${resolvedValue}${end}`;\n};\n\n/**\n * serialize calc\n * @param value - value to serialize\n * @param [opt] - options\n * @returns serialized value\n */\nexport const serializeCalc = (value: string, opt: IOptions = {}): string => {\n  const { customProperty = {}, dimension = {}, format = '' } = opt;\n  if (isString(value)) {\n    if (!REG_FN_VAR_START.test(value) || format !== VAL_SPEC) {\n      return value;\n    }\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{serializeCalc:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as string;\n    }\n  }\n  const items: string[] = tokenize({ css: value })\n    .map((token: CSSToken): string => {\n      const [type = '', value = ''] = token as [TokenType, string];\n      let res = '';\n      if (type !== W_SPACE && type !== COMMENT) {\n        res = value;\n      }\n      return res;\n    })\n    .filter(v => v);\n  let startIndex = items.findLastIndex((item: string) => /\\($/.test(item));\n  while (startIndex) {\n    const endIndex = items.findIndex((item: unknown, index: number) => {\n      return item === ')' && index > startIndex;\n    });\n    const slicedValues: string[] = items.slice(startIndex, endIndex + 1);\n    let serializedValue: string = sortCalcValues(slicedValues);\n    if (REG_FN_VAR_START.test(serializedValue)) {\n      serializedValue = calc(serializedValue, {\n        toCanonicalUnits: true\n      });\n    }\n    items.splice(startIndex, endIndex - startIndex + 1, serializedValue);\n    startIndex = items.findLastIndex((item: string) => /\\($/.test(item));\n  }\n  const serializedCalc = sortCalcValues(items, true);\n  if (cacheKey) {\n    cachedResults.set(cacheKey, serializedCalc);\n  }\n  return serializedCalc;\n};\n\n/**\n * resolve dimension\n * @param token - CSS token\n * @param [opt] - options\n * @returns resolved value\n */\nexport const resolveDimension = (\n  token: CSSToken,\n  opt: IOptions = {}\n): string | null => {\n  if (!Array.isArray(token)) {\n    throw new TypeError(`${token} is not an array.`);\n  }\n  const [, , , , detail = {}] = token;\n  const { unit, value } = detail as {\n    unit: string;\n    value: number;\n  };\n  const { dimension = {} } = opt;\n  if (unit === 'px') {\n    return `${value}${unit}`;\n  }\n  const relativeValue = Number(value);\n  if (unit && Number.isFinite(relativeValue)) {\n    let pixelValue;\n    if (Object.hasOwnProperty.call(dimension, unit)) {\n      pixelValue = dimension[unit];\n    } else if (typeof dimension.callback === 'function') {\n      pixelValue = dimension.callback(unit);\n    }\n    pixelValue = Number(pixelValue);\n    if (Number.isFinite(pixelValue)) {\n      return `${relativeValue * pixelValue}px`;\n    }\n  }\n  return null;\n};\n\n/**\n * parse tokens\n * @param tokens - CSS tokens\n * @param [opt] - options\n * @returns parsed tokens\n */\nexport const parseTokens = (\n  tokens: CSSToken[],\n  opt: IOptions = {}\n): string[] => {\n  if (!Array.isArray(tokens)) {\n    throw new TypeError(`${tokens} is not an array.`);\n  }\n  const { format = '' } = opt;\n  const mathFunc = new Set();\n  let nest = 0;\n  const res: string[] = [];\n  while (tokens.length) {\n    const token = tokens.shift();\n    if (!Array.isArray(token)) {\n      throw new TypeError(`${token} is not an array.`);\n    }\n    const [type = '', value = ''] = token as [TokenType, string];\n    switch (type) {\n      case DIM: {\n        let resolvedValue;\n        if (format === VAL_SPEC && !mathFunc.has(nest)) {\n          resolvedValue = value;\n        } else {\n          resolvedValue = resolveDimension(token, opt) ?? value;\n        }\n        res.push(resolvedValue);\n        break;\n      }\n      case FUNC:\n      case PAREN_OPEN: {\n        res.push(value);\n        nest++;\n        if (REG_FN_MATH_START.test(value)) {\n          mathFunc.add(nest);\n        }\n        break;\n      }\n      case PAREN_CLOSE: {\n        if (res.length) {\n          const lastValue = res[res.length - 1];\n          if (lastValue === ' ') {\n            res.splice(-1, 1, value);\n          } else {\n            res.push(value);\n          }\n        } else {\n          res.push(value);\n        }\n        if (mathFunc.has(nest)) {\n          mathFunc.delete(nest);\n        }\n        nest--;\n        break;\n      }\n      case W_SPACE: {\n        if (res.length) {\n          const lastValue = res[res.length - 1];\n          if (\n            isString(lastValue) &&\n            !lastValue.endsWith('(') &&\n            lastValue !== ' '\n          ) {\n            res.push(value);\n          }\n        }\n        break;\n      }\n      default: {\n        if (type !== COMMENT && type !== EOF) {\n          res.push(value);\n        }\n      }\n    }\n  }\n  return res;\n};\n\n/**\n * resolve CSS calc()\n * @param value - color value including calc()\n * @param [opt] - options\n * @returns resolved value\n */\nexport const cssCalc = (value: string, opt: IOptions = {}): string => {\n  const { customProperty = {}, dimension = {}, format = '' } = opt;\n  if (isString(value)) {\n    if (REG_FN_VAR.test(value)) {\n      if (format === VAL_SPEC) {\n        return value;\n        // var() must be resolved before cssCalc()\n      } else {\n        throw new SyntaxError(`Unexpected token ${FN_VAR} found.`);\n      }\n    } else if (!REG_FN_CALC.test(value)) {\n      return value;\n    }\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{cssCalc:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as string;\n    }\n  }\n  const tokens = tokenize({ css: value });\n  const values = parseTokens(tokens, opt);\n  let resolvedValue: string = calc(values.join(''), {\n    toCanonicalUnits: true\n  });\n  if (REG_FN_VAR_START.test(value)) {\n    if (REG_TYPE_DIM_PCT.test(resolvedValue)) {\n      const [, val = '', unit = ''] = resolvedValue.match(\n        REG_TYPE_DIM_PCT\n      ) as RegExpExecArray;\n      resolvedValue = `${roundToPrecision(Number(val), HEX)}${unit}`;\n    }\n    // wrap with `calc()`\n    if (\n      resolvedValue &&\n      !REG_FN_VAR_START.test(resolvedValue) &&\n      format === VAL_SPEC\n    ) {\n      resolvedValue = `calc(${resolvedValue})`;\n    }\n  }\n  if (cacheKey) {\n    cachedResults.set(cacheKey, resolvedValue);\n  }\n  return resolvedValue;\n};\n","/**\n * css-var\n */\n\nimport { TokenType, tokenize } from '@csstools/css-tokenizer';\nimport type { CSSToken } from '@csstools/css-tokenizer';\nimport { LRUCache } from 'lru-cache';\nimport { isString } from './common';\nimport { cssCalc } from './css-calc';\nimport { isColor, valueToJsonString } from './util';\nimport type { IOptions } from './typedef';\n\n/* constants */\nimport { FN_VAR, SYN_FN_CALC, SYN_FN_VAR, VAL_SPEC } from './constant';\nconst {\n  CloseParen: PAREN_CLOSE,\n  Comment: COMMENT,\n  EOF,\n  Ident: IDENT,\n  Whitespace: W_SPACE\n} = TokenType;\n\n/* regexp */\nconst REG_FN_CALC = new RegExp(SYN_FN_CALC);\nconst REG_FN_VAR = new RegExp(SYN_FN_VAR);\n\n/* cached results */\nexport const cachedResults = new LRUCache({\n  max: 4096\n});\n\n/**\n * resolve custom property\n * @param tokens - CSS tokens\n * @param [opt] - options\n * @returns result - [tokens, resolvedValue]\n */\nexport function resolveCustomProperty(\n  tokens: CSSToken[],\n  opt: IOptions = {}\n): [CSSToken[], string] {\n  if (!Array.isArray(tokens)) {\n    throw new TypeError(`${tokens} is not an array.`);\n  }\n  const { customProperty = {} } = opt;\n  const items: string[] = [];\n  while (tokens.length) {\n    const token = tokens.shift();\n    if (!Array.isArray(token)) {\n      throw new TypeError(`${token} is not an array.`);\n    }\n    const [type = '', value = ''] = token as [TokenType, string];\n    // end of var()\n    if (type === PAREN_CLOSE) {\n      break;\n    }\n    // nested var()\n    if (value === FN_VAR) {\n      const [restTokens, item] = resolveCustomProperty(tokens, opt);\n      tokens = restTokens;\n      if (item) {\n        items.push(item);\n      }\n    } else if (type === IDENT) {\n      if (value.startsWith('--')) {\n        let item;\n        if (Object.hasOwnProperty.call(customProperty, value)) {\n          item = customProperty[value] as string;\n        } else if (typeof customProperty.callback === 'function') {\n          item = customProperty.callback(value);\n        }\n        if (item) {\n          items.push(item);\n        }\n      } else if (value) {\n        items.push(value);\n      }\n    }\n  }\n  let resolveAsColor = false;\n  if (items.length > 1) {\n    const lastValue = items[items.length - 1];\n    resolveAsColor = isColor(lastValue);\n  }\n  let resolvedValue = '';\n  for (let item of items) {\n    item = item.trim();\n    if (REG_FN_VAR.test(item)) {\n      // recurse cssVar()\n      const resolvedItem = cssVar(item, opt);\n      if (resolvedItem) {\n        if (resolveAsColor) {\n          if (isColor(resolvedItem)) {\n            resolvedValue = resolvedItem;\n          }\n        } else {\n          resolvedValue = resolvedItem;\n        }\n      }\n    } else if (REG_FN_CALC.test(item)) {\n      item = cssCalc(item, opt);\n      if (resolveAsColor) {\n        if (isColor(item)) {\n          resolvedValue = item;\n        }\n      } else {\n        resolvedValue = item;\n      }\n    } else if (\n      item &&\n      !/^(?:inherit|initial|revert(?:-layer)?|unset)$/.test(item)\n    ) {\n      if (resolveAsColor) {\n        if (isColor(item)) {\n          resolvedValue = item;\n        }\n      } else {\n        resolvedValue = item;\n      }\n    }\n    if (resolvedValue) {\n      break;\n    }\n  }\n  return [tokens, resolvedValue];\n}\n\n/**\n * parse tokens\n * @param tokens - CSS tokens\n * @param [opt] - options\n * @returns parsed tokens\n */\nexport function parseTokens(\n  tokens: CSSToken[],\n  opt: IOptions = {}\n): string[] | null {\n  const res: string[] = [];\n  while (tokens.length) {\n    const token = tokens.shift();\n    const [type = '', value = ''] = token as [TokenType, string];\n    if (value === FN_VAR) {\n      const [restTokens, resolvedValue] = resolveCustomProperty(tokens, opt);\n      if (!resolvedValue) {\n        return null;\n      }\n      tokens = restTokens;\n      res.push(resolvedValue);\n    } else {\n      switch (type) {\n        case PAREN_CLOSE: {\n          if (res.length) {\n            const lastValue = res[res.length - 1];\n            if (lastValue === ' ') {\n              res.splice(-1, 1, value);\n            } else {\n              res.push(value);\n            }\n          } else {\n            res.push(value);\n          }\n          break;\n        }\n        case W_SPACE: {\n          if (res.length) {\n            const lastValue = res[res.length - 1];\n            if (\n              isString(lastValue) &&\n              !lastValue.endsWith('(') &&\n              lastValue !== ' '\n            ) {\n              res.push(value);\n            }\n          }\n          break;\n        }\n        default: {\n          if (type !== COMMENT && type !== EOF) {\n            res.push(value);\n          }\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * resolve CSS var()\n * @param value - color value including var()\n * @param [opt] - options\n * @returns resolved value\n */\nexport function cssVar(value: string, opt: IOptions = {}): string | null {\n  const { dimension = {}, customProperty = {}, format = '' } = opt;\n  if (isString(value)) {\n    if (!REG_FN_VAR.test(value) || format === VAL_SPEC) {\n      return value;\n    }\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{cssVar:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as string | null;\n    }\n  }\n  const tokens = tokenize({ css: value });\n  const values = parseTokens(tokens, opt);\n  if (Array.isArray(values)) {\n    let color = values.join('');\n    if (REG_FN_CALC.test(color)) {\n      color = cssCalc(color, opt);\n    }\n    if (cacheKey) {\n      cachedResults.set(cacheKey, color);\n    }\n    return color;\n  } else {\n    if (cacheKey) {\n      cachedResults.set(cacheKey, null!);\n    }\n    return null;\n  }\n}\n","function multiplyMatrices(t,n){return[t[0]*n[0]+t[1]*n[1]+t[2]*n[2],t[3]*n[0]+t[4]*n[1]+t[5]*n[2],t[6]*n[0]+t[7]*n[1]+t[8]*n[2]]}const t=[.955473421488075,-.02309845494876471,.06325924320057072,-.0283697093338637,1.0099953980813041,.021041441191917323,.012314014864481998,-.020507649298898964,1.330365926242124];\n/**\n * Bradford chromatic adaptation from D50 to D65\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */function D50_to_D65(n){return multiplyMatrices(t,n)}const n=[1.0479297925449969,.022946870601609652,-.05019226628920524,.02962780877005599,.9904344267538799,-.017073799063418826,-.009243040646204504,.015055191490298152,.7518742814281371];\n/**\n * Bradford chromatic adaptation from D65 to D50\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see http://www.brucelindbloom.com/index.html?Eqn_ChromAdapt.html\n */function D65_to_D50(t){return multiplyMatrices(n,t)}\n/**\n * @param {number} hue - Hue as degrees 0..360\n * @param {number} sat - Saturation as percentage 0..100\n * @param {number} light - Lightness as percentage 0..100\n * @return {number[]} Array of sRGB components; in-gamut colors in range [0..1]\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/hslToRgb.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see https://github.com/w3c/csswg-drafts/blob/main/css-color-4/hslToRgb.js\n */function HSL_to_sRGB(t){let n=t[0]%360;const _=t[1]/100,o=t[2]/100;return n<0&&(n+=360),[HSL_to_sRGB_channel(0,n,_,o),HSL_to_sRGB_channel(8,n,_,o),HSL_to_sRGB_channel(4,n,_,o)]}function HSL_to_sRGB_channel(t,n,_,o){const e=(t+n/30)%12;return o-_*Math.min(o,1-o)*Math.max(-1,Math.min(e-3,9-e,1))}\n/**\n * @param {number} hue -  Hue as degrees 0..360\n * @param {number} white -  Whiteness as percentage 0..100\n * @param {number} black -  Blackness as percentage 0..100\n * @return {number[]} Array of RGB components 0..1\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/hwbToRgb.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see https://github.com/w3c/csswg-drafts/blob/main/css-color-4/hwbToRgb.js\n */function HWB_to_sRGB(t){const n=t[0],_=t[1]/100,o=t[2]/100;if(_+o>=1){const t=_/(_+o);return[t,t,t]}const e=HSL_to_sRGB([n,100,50]),a=1-_-o;return[e[0]*a+_,e[1]*a+_,e[2]*a+_]}\n/**\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */function LCH_to_Lab(t){const n=t[2]*Math.PI/180;return[t[0],t[1]*Math.cos(n),t[1]*Math.sin(n)]}\n/**\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */function Lab_to_LCH(t){const n=180*Math.atan2(t[2],t[1])/Math.PI;return[t[0],Math.sqrt(Math.pow(t[1],2)+Math.pow(t[2],2)),n>=0?n:n+360]}const _=[.3457/.3585,1,.2958/.3585];\n/**\n * Convert Lab to D50-adapted XYZ\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n */function Lab_to_XYZ(t){const n=24389/27,o=216/24389,e=(t[0]+16)/116,a=t[1]/500+e,r=e-t[2]/200;return[(Math.pow(a,3)>o?Math.pow(a,3):(116*a-16)/n)*_[0],(t[0]>8?Math.pow((t[0]+16)/116,3):t[0]/n)*_[1],(Math.pow(r,3)>o?Math.pow(r,3):(116*r-16)/n)*_[2]]}\n/**\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js\n */function OKLCH_to_OKLab(t){const n=t[2]*Math.PI/180;return[t[0],t[1]*Math.cos(n),t[1]*Math.sin(n)]}\n/**\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js\n */function OKLab_to_OKLCH(t){const n=180*Math.atan2(t[2],t[1])/Math.PI;return[t[0],Math.sqrt(t[1]**2+t[2]**2),n>=0?n:n+360]}const o=[1.2268798758459243,-.5578149944602171,.2813910456659647,-.0405757452148008,1.112286803280317,-.0717110580655164,-.0763729366746601,-.4214933324022432,1.5869240198367816],e=[1,.3963377773761749,.2158037573099136,1,-.1055613458156586,-.0638541728258133,1,-.0894841775298119,-1.2914855480194092];\n/**\n * Given OKLab, convert to XYZ relative to D65\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js\n */\nfunction OKLab_to_XYZ(t){const n=multiplyMatrices(e,t);return multiplyMatrices(o,[n[0]**3,n[1]**3,n[2]**3])}\n/**\n * Assuming XYZ is relative to D50, convert to CIE Lab\n * from CIE standard, which now defines these as a rational fraction\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */function XYZ_to_Lab(t){const n=compute_f(t[0]/_[0]),o=compute_f(t[1]/_[1]);return[116*o-16,500*(n-o),200*(o-compute_f(t[2]/_[2]))]}const a=216/24389,r=24389/27;function compute_f(t){return t>a?Math.cbrt(t):(r*t+16)/116}const l=[.819022437996703,.3619062600528904,-.1288737815209879,.0329836539323885,.9292868615863434,.0361446663506424,.0481771893596242,.2642395317527308,.6335478284694309],i=[.210454268309314,.7936177747023054,-.0040720430116193,1.9779985324311684,-2.42859224204858,.450593709617411,.0259040424655478,.7827717124575296,-.8086757549230774];\n/**\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n *\n * XYZ <-> LMS matrices recalculated for consistent reference white\n * @see https://github.com/w3c/csswg-drafts/issues/6642#issuecomment-943521484\n */\nfunction XYZ_to_OKLab(t){const n=multiplyMatrices(l,t);return multiplyMatrices(i,[Math.cbrt(n[0]),Math.cbrt(n[1]),Math.cbrt(n[2])])}const c=[30757411/17917100,-6372589/17917100,-4539589/17917100,-.666684351832489,1.616481236634939,467509/29648200,792561/44930125,-1921689/44930125,.942103121235474];\n/**\n * Convert XYZ to linear-light rec2020\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */const u=[446124/178915,-333277/357830,-72051/178915,-14852/17905,63121/35810,423/17905,11844/330415,-50337/660830,316169/330415];\n/**\n * Convert XYZ to linear-light P3\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */function XYZ_to_lin_P3(t){return multiplyMatrices(u,t)}const s=[1.3457868816471583,-.25557208737979464,-.05110186497554526,-.5446307051249019,1.5082477428451468,.02052744743642139,0,0,1.2119675456389452];\n/**\n * Convert D50 XYZ to linear-light prophoto-rgb\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n */const h=[1829569/896150,-506331/896150,-308931/896150,-851781/878810,1648619/878810,36519/878810,16779/1248040,-147721/1248040,1266979/1248040];\n/**\n * Convert XYZ to linear-light a98-rgb\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */const m=[12831/3959,-329/214,-1974/3959,-851781/878810,1648619/878810,36519/878810,705/12673,-2585/12673,705/667];\n/**\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */function XYZ_to_lin_sRGB(t){return multiplyMatrices(m,t)}\n/**\n * Convert an array of linear-light rec2020 RGB  in the range 0.0-1.0\n * to gamma corrected form ITU-R BT.2020-2 p.4\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */const D=1.09929682680944,g=.018053968510807;function gam_2020_channel(t){const n=t<0?-1:1,_=Math.abs(t);return _>g?n*(D*Math.pow(_,.45)-(D-1)):4.5*t}\n/**\n * Convert an array of linear-light sRGB values in the range 0.0-1.0 to gamma corrected form\n * Extended transfer function:\n *  For negative values, linear portion extends on reflection\n *  of axis, then uses reflected pow below that\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see https://en.wikipedia.org/wiki/SRGB\n */function gam_sRGB(t){return[gam_sRGB_channel(t[0]),gam_sRGB_channel(t[1]),gam_sRGB_channel(t[2])]}function gam_sRGB_channel(t){const n=t<0?-1:1,_=Math.abs(t);return _>.0031308?n*(1.055*Math.pow(_,1/2.4)-.055):12.92*t}\n/**\n * Convert an array of linear-light display-p3 RGB in the range 0.0-1.0\n * to gamma corrected form\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */function gam_P3(t){return gam_sRGB(t)}\n/**\n * Convert an array of linear-light prophoto-rgb in the range 0.0-1.0\n * to gamma corrected form.\n * Transfer curve is gamma 1.8 with a small linear portion.\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */const b=1/512;function gam_ProPhoto_channel(t){const n=t<0?-1:1,_=Math.abs(t);return _>=b?n*Math.pow(_,1/1.8):16*t}\n/**\n * Convert an array of linear-light a98-rgb in the range 0.0-1.0\n * to gamma corrected form. Negative values are also now accepted\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */function gam_a98rgb_channel(t){const n=t<0?-1:1,_=Math.abs(t);return n*Math.pow(_,256/563)}\n/**\n * Convert an array of rec2020 RGB values in the range 0.0 - 1.0\n * to linear light (un-companded) form.\n * ITU-R BT.2020-2 p.4\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */const f=1.09929682680944,X=.018053968510807;function lin_2020_channel(t){const n=t<0?-1:1,_=Math.abs(t);return _<4.5*X?t/4.5:n*Math.pow((_+f-1)/f,1/.45)}const Y=[63426534/99577255,20160776/139408157,47086771/278816314,26158966/99577255,.677998071518871,8267143/139408157,0,19567812/697040785,1.0609850577107909];\n/**\n * Convert an array of linear-light rec2020 values to CIE XYZ\n * using  D65 (no chromatic adaptation)\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n */\n/**\n * Convert an array of of sRGB values where in-gamut values are in the range\n * [0 - 1] to linear light (un-companded) form.\n * Extended transfer function:\n *  For negative values, linear portion is extended on reflection of axis,\n *  then reflected power function is used.\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see https://en.wikipedia.org/wiki/SRGB\n */\nfunction lin_sRGB(t){return[lin_sRGB_channel(t[0]),lin_sRGB_channel(t[1]),lin_sRGB_channel(t[2])]}function lin_sRGB_channel(t){const n=t<0?-1:1,_=Math.abs(t);return _<=.04045?t/12.92:n*Math.pow((_+.055)/1.055,2.4)}\n/**\n * Convert an array of display-p3 RGB values in the range 0.0 - 1.0\n * to linear light (un-companded) form.\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */function lin_P3(t){return lin_sRGB(t)}const Z=[608311/1250200,189793/714400,198249/1000160,35783/156275,247089/357200,198249/2500400,0,32229/714400,5220557/5000800];\n/**\n * Convert an array of linear-light display-p3 values to CIE XYZ\n * using D65 (no chromatic adaptation)\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n */function lin_P3_to_XYZ(t){return multiplyMatrices(Z,t)}\n/**\n * Convert an array of prophoto-rgb values where in-gamut Colors are in the\n * range [0.0 - 1.0] to linear light (un-companded) form. Transfer curve is\n * gamma 1.8 with a small linear portion. Extended transfer function\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */const M=16/512;function lin_ProPhoto_channel(t){const n=t<0?-1:1,_=Math.abs(t);return _<=M?t/16:n*Math.pow(_,1.8)}const p=[.7977666449006423,.13518129740053308,.0313477341283922,.2880748288194013,.711835234241873,8993693872564e-17,0,0,.8251046025104602];\n/**\n * Convert an array of linear-light prophoto-rgb values to CIE D50 XYZ.\n * Matrix cannot be expressed in rational form, but is calculated to 64 bit accuracy.\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see see https://github.com/w3c/csswg-drafts/issues/7675\n */function lin_a98rgb_channel(t){const n=t<0?-1:1,_=Math.abs(t);return n*Math.pow(_,563/256)}const d=[573536/994567,263643/1420810,187206/994567,591459/1989134,6239551/9945670,374412/4972835,53769/1989134,351524/4972835,4929758/4972835];\n/**\n * Convert an array of linear-light a98-rgb values to CIE XYZ\n * http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n * has greater numerical precision than section 4.3.5.3 of\n * https://www.adobe.com/digitalimag/pdfs/AdobeRGB1998.pdf\n * but the values below were calculated from first principles\n * from the chromaticity coordinates of R G B W\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n * @see https://www.adobe.com/digitalimag/pdfs/AdobeRGB1998.pdf\n * @see https://github.com/w3c/csswg-drafts/blob/main/css-color-4/matrixmaker.html\n */const L=[506752/1228815,87881/245763,12673/70218,87098/409605,175762/245763,12673/175545,7918/409605,87881/737289,1001167/1053270];\n/**\n * Convert an array of linear-light sRGB values to CIE XYZ\n * using sRGB's own white, D65 (no chromatic adaptation)\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */function lin_sRGB_to_XYZ(t){return multiplyMatrices(L,t)}\n/**\n * Convert an array of gamma-corrected sRGB values in the 0.0 to 1.0 range to HSL.\n *\n * @param {Color} RGB [r, g, b]\n * - Red component 0..1\n * - Green component 0..1\n * - Blue component 0..1\n * @return {number[]} Array of HSL values: Hue as degrees 0..360, Saturation and Lightness as percentages 0..100\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/utilities.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n *\n * @see https://github.com/w3c/csswg-drafts/blob/main/css-color-4/better-rgbToHsl.js\n */function sRGB_to_HSL(t){const n=t[0],_=t[1],o=t[2],e=Math.max(n,_,o),a=Math.min(n,_,o),r=(a+e)/2,l=e-a;let i=NaN,c=0;if(0!==Math.round(1e5*l)){const t=Math.round(1e5*r);switch(c=0===t||1e5===t?0:(e-r)/Math.min(r,1-r),e){case n:i=(_-o)/l+(_<o?6:0);break;case _:i=(o-n)/l+2;break;case o:i=(n-_)/l+4}i*=60}return c<0&&(i+=180,c=Math.abs(c)),i>=360&&(i-=360),[i,100*c,100*r]}function sRGB_to_Hue(t){const n=t[0],_=t[1],o=t[2],e=Math.max(n,_,o);let a=NaN;const r=e-Math.min(n,_,o);if(0!==r){switch(e){case n:a=(_-o)/r+(_<o?6:0);break;case _:a=(o-n)/r+2;break;case o:a=(n-_)/r+4}a*=60}return a>=360&&(a-=360),a}function sRGB_to_XYZ_D50(t){let n=t;return n=lin_sRGB(n),n=lin_sRGB_to_XYZ(n),n=D65_to_D50(n),n}function XYZ_D50_to_sRGB(t){let n=t;return n=D50_to_D65(n),n=XYZ_to_lin_sRGB(n),n=gam_sRGB(n),n}function HSL_to_XYZ_D50(t){let n=t;return n=HSL_to_sRGB(n),n=lin_sRGB(n),n=lin_sRGB_to_XYZ(n),n=D65_to_D50(n),n}function XYZ_D50_to_HSL(t){let n=t;return n=D50_to_D65(n),n=XYZ_to_lin_sRGB(n),n=gam_sRGB(n),n=sRGB_to_HSL(n),n}function HWB_to_XYZ_D50(t){let n=t;return n=HWB_to_sRGB(n),n=lin_sRGB(n),n=lin_sRGB_to_XYZ(n),n=D65_to_D50(n),n}function XYZ_D50_to_HWB(t){let n=t;n=D50_to_D65(n),n=XYZ_to_lin_sRGB(n);const _=gam_sRGB(n),o=Math.min(_[0],_[1],_[2]),e=1-Math.max(_[0],_[1],_[2]);return[sRGB_to_Hue(_),100*o,100*e]}function Lab_to_XYZ_D50(t){let n=t;return n=Lab_to_XYZ(n),n}function XYZ_D50_to_Lab(t){let n=t;return n=XYZ_to_Lab(n),n}function LCH_to_XYZ_D50(t){let n=t;return n=LCH_to_Lab(n),n=Lab_to_XYZ(n),n}function XYZ_D50_to_LCH(t){let n=t;return n=XYZ_to_Lab(n),n=Lab_to_LCH(n),n}function OKLab_to_XYZ_D50(t){let n=t;return n=OKLab_to_XYZ(n),n=D65_to_D50(n),n}function XYZ_D50_to_OKLab(t){let n=t;return n=D50_to_D65(n),n=XYZ_to_OKLab(n),n}function OKLCH_to_XYZ_D50(t){let n=t;return n=OKLCH_to_OKLab(n),n=OKLab_to_XYZ(n),n=D65_to_D50(n),n}function XYZ_D50_to_OKLCH(t){let n=t;return n=D50_to_D65(n),n=XYZ_to_OKLab(n),n=OKLab_to_OKLCH(n),n}function lin_sRGB_to_XYZ_D50(t){let n=t;return n=lin_sRGB_to_XYZ(n),n=D65_to_D50(n),n}function XYZ_D50_to_lin_sRGB(t){let n=t;return n=D50_to_D65(n),n=XYZ_to_lin_sRGB(n),n}function a98_RGB_to_XYZ_D50(t){let n=t;\n/**\n * Convert an array of a98-rgb values in the range 0.0 - 1.0\n * to linear light (un-companded) form. Negative values are also now accepted\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/conversions.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n */\nvar _;return n=[lin_a98rgb_channel((_=n)[0]),lin_a98rgb_channel(_[1]),lin_a98rgb_channel(_[2])],n=multiplyMatrices(d,n),n=D65_to_D50(n),n}function XYZ_D50_to_a98_RGB(t){let n=t;var _;return n=D50_to_D65(n),n=multiplyMatrices(h,n),n=[gam_a98rgb_channel((_=n)[0]),gam_a98rgb_channel(_[1]),gam_a98rgb_channel(_[2])],n}function P3_to_XYZ_D50(t){let n=t;return n=lin_P3(n),n=lin_P3_to_XYZ(n),n=D65_to_D50(n),n}function XYZ_D50_to_P3(t){let n=t;return n=D50_to_D65(n),n=XYZ_to_lin_P3(n),n=gam_P3(n),n}function rec_2020_to_XYZ_D50(t){let n=t;var _;return n=[lin_2020_channel((_=n)[0]),lin_2020_channel(_[1]),lin_2020_channel(_[2])],n=multiplyMatrices(Y,n),n=D65_to_D50(n),n}function XYZ_D50_to_rec_2020(t){let n=t;var _;return n=D50_to_D65(n),n=multiplyMatrices(c,n),n=[gam_2020_channel((_=n)[0]),gam_2020_channel(_[1]),gam_2020_channel(_[2])],n}function ProPhoto_RGB_to_XYZ_D50(t){let n=t;var _;return n=[lin_ProPhoto_channel((_=n)[0]),lin_ProPhoto_channel(_[1]),lin_ProPhoto_channel(_[2])],n=multiplyMatrices(p,n),n}function XYZ_D50_to_ProPhoto(t){let n=t;var _;return n=multiplyMatrices(s,n),n=[gam_ProPhoto_channel((_=n)[0]),gam_ProPhoto_channel(_[1]),gam_ProPhoto_channel(_[2])],n}function XYZ_D65_to_XYZ_D50(t){let n=t;return n=D65_to_D50(n),n}function XYZ_D50_to_XYZ_D65(t){let n=t;return n=D50_to_D65(n),n}function XYZ_D50_to_XYZ_D50(t){return t}function inGamut(t){return t[0]>=-1e-4&&t[0]<=1.0001&&t[1]>=-1e-4&&t[1]<=1.0001&&t[2]>=-1e-4&&t[2]<=1.0001}function clip(t){return[t[0]<0?0:t[0]>1?1:t[0],t[1]<0?0:t[1]>1?1:t[1],t[2]<0?0:t[2]>1?1:t[2]]}\n/**\n * @description Calculate deltaE OK which is the simple root sum of squares\n * @param {number[]} reference - Array of OKLab values: L as 0..1, a and b as -1..1\n * @param {number[]} sample - Array of OKLab values: L as 0..1, a and b as -1..1\n * @return {number} How different a color sample is from reference\n *\n * @license W3C https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @copyright This software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/blob/main/css-color-4/deltaEOK.js. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n * @see https://github.com/w3c/csswg-drafts/blob/main/css-color-4/deltaEOK.js\n */function deltaEOK(t,n){const[_,o,e]=t,[a,r,l]=n,i=_-a,c=o-r,u=e-l;return Math.sqrt(i**2+c**2+u**2)}const B=.02,G=1e-4;function mapGamut(t,n,_){const o=t;let e=clip(n(o)),a=deltaEOK(OKLCH_to_OKLab(_(e)),OKLCH_to_OKLab(o));if(a<B)return e;let r=0,l=o[1],i=!0;for(;l-r>G;){const t=(r+l)/2;if(o[1]=t,i&&inGamut(n(o)))r=t;else if(e=clip(n(o)),a=deltaEOK(OKLCH_to_OKLab(_(e)),OKLCH_to_OKLab(o)),a<B){if(B-a<G)return e;i=!1,r=t}else l=t}return clip(n([...o]))}\n/**\n * @license MIT https://github.com/facelessuser/coloraide/blob/main/LICENSE.md\n */function mapGamutRayTrace(t,n,_){const o=t[0],e=t[2];let a=n(t);const r=n([o,0,e]);for(let t=0;t<4;t++){if(t>0){const t=_(a);t[0]=o,t[2]=e,a=n(t)}const l=rayTraceBox(r,a);if(!l)break;a=l}return clip(a)}function rayTraceBox(t,n){let _=1/0,o=-1/0;const e=[0,0,0];for(let a=0;a<3;a++){const r=t[a],l=n[a]-r;e[a]=l;const i=0,c=1;if(l){const t=1/l,n=(i-r)*t,e=(c-r)*t;o=Math.max(Math.min(n,e),o),_=Math.min(Math.max(n,e),_)}else if(r<i||r>c)return!1}return!(o>_||_<0)&&(o<0&&(o=_),!!isFinite(o)&&[t[0]+e[0]*o,t[1]+e[1]*o,t[2]+e[2]*o])}const R={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};function luminance(t){const[n,_,o]=t.map((t=>t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4)));return.2126*n+.7152*_+.0722*o}function contrast_ratio_wcag_2_1(t,n){const _=luminance(t),o=luminance(n);return(Math.max(_,o)+.05)/(Math.min(_,o)+.05)}export{HSL_to_XYZ_D50,HWB_to_XYZ_D50,LCH_to_XYZ_D50,Lab_to_XYZ_D50,OKLCH_to_OKLab,OKLCH_to_XYZ_D50,OKLab_to_OKLCH,OKLab_to_XYZ,OKLab_to_XYZ_D50,P3_to_XYZ_D50,ProPhoto_RGB_to_XYZ_D50,XYZ_D50_to_HSL,XYZ_D50_to_HWB,XYZ_D50_to_LCH,XYZ_D50_to_Lab,XYZ_D50_to_OKLCH,XYZ_D50_to_OKLab,XYZ_D50_to_P3,XYZ_D50_to_ProPhoto,XYZ_D50_to_XYZ_D50,XYZ_D50_to_XYZ_D65,XYZ_D50_to_a98_RGB,XYZ_D50_to_lin_sRGB,XYZ_D50_to_rec_2020,XYZ_D50_to_sRGB,XYZ_D65_to_XYZ_D50,XYZ_to_OKLab,XYZ_to_lin_P3,XYZ_to_lin_sRGB,a98_RGB_to_XYZ_D50,clip,contrast_ratio_wcag_2_1,gam_P3,gam_sRGB,inGamut,lin_P3,lin_P3_to_XYZ,lin_sRGB,lin_sRGB_to_XYZ,lin_sRGB_to_XYZ_D50,mapGamut,mapGamutRayTrace,R as namedColors,rec_2020_to_XYZ_D50,sRGB_to_XYZ_D50};\n","import{TokenType as e,NumberType as a,isTokenIdent as n,isTokenPercentage as r,isTokenNumber as o,isTokenDelim as t,isTokenNumeric as l,isTokenComma as s,isTokenDimension as u,isTokenHash as c}from\"@csstools/css-tokenizer\";import{XYZ_D65_to_XYZ_D50 as i,XYZ_D50_to_XYZ_D50 as h,OKLCH_to_XYZ_D50 as m,LCH_to_XYZ_D50 as p,OKLab_to_XYZ_D50 as N,Lab_to_XYZ_D50 as b,HWB_to_XYZ_D50 as v,HSL_to_XYZ_D50 as g,ProPhoto_RGB_to_XYZ_D50 as f,a98_RGB_to_XYZ_D50 as d,rec_2020_to_XYZ_D50 as y,P3_to_XYZ_D50 as _,lin_sRGB_to_XYZ_D50 as C,sRGB_to_XYZ_D50 as w,XYZ_D50_to_XYZ_D65 as x,XYZ_D50_to_OKLab as H,XYZ_D50_to_OKLCH as L,XYZ_D50_to_LCH as k,XYZ_D50_to_Lab as P,XYZ_D50_to_HWB as S,XYZ_D50_to_HSL as z,XYZ_D50_to_a98_RGB as D,XYZ_D50_to_ProPhoto as F,XYZ_D50_to_rec_2020 as Z,XYZ_D50_to_P3 as M,XYZ_D50_to_lin_sRGB as R,XYZ_D50_to_sRGB as B,namedColors as G,inGamut as T,clip as V,gam_sRGB as A,mapGamutRayTrace as X,OKLCH_to_OKLab as Y,OKLab_to_XYZ as K,XYZ_to_lin_sRGB as I,lin_sRGB_to_XYZ as O,XYZ_to_OKLab as E,OKLab_to_OKLCH as W,contrast_ratio_wcag_2_1 as U,gam_P3 as $,XYZ_to_lin_P3 as j,lin_P3_to_XYZ as q}from\"@csstools/color-helpers\";import{isWhitespaceNode as J,isCommentNode as Q,isTokenNode as ee,isFunctionNode as ae,TokenNode as ne,FunctionNode as re,WhitespaceNode as oe}from\"@csstools/css-parser-algorithms\";import{mathFunctionNames as te,calcFromComponentValues as le}from\"@csstools/css-calc\";var se,ue;function convertNaNToZero(e){return[Number.isNaN(e[0])?0:e[0],Number.isNaN(e[1])?0:e[1],Number.isNaN(e[2])?0:e[2]]}function colorData_to_XYZ_D50(e){switch(e.colorNotation){case se.HEX:case se.RGB:case se.sRGB:return{...e,colorNotation:se.XYZ_D50,channels:w(convertNaNToZero(e.channels))};case se.Linear_sRGB:return{...e,colorNotation:se.XYZ_D50,channels:C(convertNaNToZero(e.channels))};case se.Display_P3:return{...e,colorNotation:se.XYZ_D50,channels:_(convertNaNToZero(e.channels))};case se.Rec2020:return{...e,colorNotation:se.XYZ_D50,channels:y(convertNaNToZero(e.channels))};case se.A98_RGB:return{...e,colorNotation:se.XYZ_D50,channels:d(convertNaNToZero(e.channels))};case se.ProPhoto_RGB:return{...e,colorNotation:se.XYZ_D50,channels:f(convertNaNToZero(e.channels))};case se.HSL:return{...e,colorNotation:se.XYZ_D50,channels:g(convertNaNToZero(e.channels))};case se.HWB:return{...e,colorNotation:se.XYZ_D50,channels:v(convertNaNToZero(e.channels))};case se.Lab:return{...e,colorNotation:se.XYZ_D50,channels:b(convertNaNToZero(e.channels))};case se.OKLab:return{...e,colorNotation:se.XYZ_D50,channels:N(convertNaNToZero(e.channels))};case se.LCH:return{...e,colorNotation:se.XYZ_D50,channels:p(convertNaNToZero(e.channels))};case se.OKLCH:return{...e,colorNotation:se.XYZ_D50,channels:m(convertNaNToZero(e.channels))};case se.XYZ_D50:return{...e,colorNotation:se.XYZ_D50,channels:h(convertNaNToZero(e.channels))};case se.XYZ_D65:return{...e,colorNotation:se.XYZ_D50,channels:i(convertNaNToZero(e.channels))};default:throw new Error(\"Unsupported color notation\")}}!function(e){e.A98_RGB=\"a98-rgb\",e.Display_P3=\"display-p3\",e.HEX=\"hex\",e.HSL=\"hsl\",e.HWB=\"hwb\",e.LCH=\"lch\",e.Lab=\"lab\",e.Linear_sRGB=\"srgb-linear\",e.OKLCH=\"oklch\",e.OKLab=\"oklab\",e.ProPhoto_RGB=\"prophoto-rgb\",e.RGB=\"rgb\",e.sRGB=\"srgb\",e.Rec2020=\"rec2020\",e.XYZ_D50=\"xyz-d50\",e.XYZ_D65=\"xyz-d65\"}(se||(se={})),function(e){e.ColorKeyword=\"color-keyword\",e.HasAlpha=\"has-alpha\",e.HasDimensionValues=\"has-dimension-values\",e.HasNoneKeywords=\"has-none-keywords\",e.HasNumberValues=\"has-number-values\",e.HasPercentageAlpha=\"has-percentage-alpha\",e.HasPercentageValues=\"has-percentage-values\",e.HasVariableAlpha=\"has-variable-alpha\",e.Hex=\"hex\",e.LegacyHSL=\"legacy-hsl\",e.LegacyRGB=\"legacy-rgb\",e.NamedColor=\"named-color\",e.RelativeColorSyntax=\"relative-color-syntax\",e.ColorMix=\"color-mix\",e.ContrastColor=\"contrast-color\",e.Experimental=\"experimental\"}(ue||(ue={}));const ce=new Set([se.A98_RGB,se.Display_P3,se.HEX,se.Linear_sRGB,se.ProPhoto_RGB,se.RGB,se.sRGB,se.Rec2020,se.XYZ_D50,se.XYZ_D65]);function colorDataTo(e,a){const n={...e};if(e.colorNotation!==a){const e=colorData_to_XYZ_D50(n);switch(a){case se.HEX:case se.RGB:n.colorNotation=se.RGB,n.channels=B(e.channels);break;case se.sRGB:n.colorNotation=se.sRGB,n.channels=B(e.channels);break;case se.Linear_sRGB:n.colorNotation=se.Linear_sRGB,n.channels=R(e.channels);break;case se.Display_P3:n.colorNotation=se.Display_P3,n.channels=M(e.channels);break;case se.Rec2020:n.colorNotation=se.Rec2020,n.channels=Z(e.channels);break;case se.ProPhoto_RGB:n.colorNotation=se.ProPhoto_RGB,n.channels=F(e.channels);break;case se.A98_RGB:n.colorNotation=se.A98_RGB,n.channels=D(e.channels);break;case se.HSL:n.colorNotation=se.HSL,n.channels=z(e.channels);break;case se.HWB:n.colorNotation=se.HWB,n.channels=S(e.channels);break;case se.Lab:n.colorNotation=se.Lab,n.channels=P(e.channels);break;case se.LCH:n.colorNotation=se.LCH,n.channels=k(e.channels);break;case se.OKLCH:n.colorNotation=se.OKLCH,n.channels=L(e.channels);break;case se.OKLab:n.colorNotation=se.OKLab,n.channels=H(e.channels);break;case se.XYZ_D50:n.colorNotation=se.XYZ_D50,n.channels=h(e.channels);break;case se.XYZ_D65:n.colorNotation=se.XYZ_D65,n.channels=x(e.channels);break;default:throw new Error(\"Unsupported color notation\")}}else n.channels=convertNaNToZero(e.channels);if(a===e.colorNotation)n.channels=carryForwardMissingComponents(e.channels,[0,1,2],n.channels,[0,1,2]);else if(ce.has(a)&&ce.has(e.colorNotation))n.channels=carryForwardMissingComponents(e.channels,[0,1,2],n.channels,[0,1,2]);else switch(a){case se.HSL:switch(e.colorNotation){case se.HWB:n.channels=carryForwardMissingComponents(e.channels,[0],n.channels,[0]);break;case se.Lab:case se.OKLab:n.channels=carryForwardMissingComponents(e.channels,[2],n.channels,[0]);break;case se.LCH:case se.OKLCH:n.channels=carryForwardMissingComponents(e.channels,[0,1,2],n.channels,[2,1,0])}break;case se.HWB:switch(e.colorNotation){case se.HSL:n.channels=carryForwardMissingComponents(e.channels,[0],n.channels,[0]);break;case se.LCH:case se.OKLCH:n.channels=carryForwardMissingComponents(e.channels,[0],n.channels,[2])}break;case se.Lab:case se.OKLab:switch(e.colorNotation){case se.HSL:n.channels=carryForwardMissingComponents(e.channels,[0],n.channels,[2]);break;case se.Lab:case se.OKLab:n.channels=carryForwardMissingComponents(e.channels,[0,1,2],n.channels,[0,1,2]);break;case se.LCH:case se.OKLCH:n.channels=carryForwardMissingComponents(e.channels,[0],n.channels,[0])}break;case se.LCH:case se.OKLCH:switch(e.colorNotation){case se.HSL:n.channels=carryForwardMissingComponents(e.channels,[0,1,2],n.channels,[2,1,0]);break;case se.HWB:n.channels=carryForwardMissingComponents(e.channels,[0],n.channels,[2]);break;case se.Lab:case se.OKLab:n.channels=carryForwardMissingComponents(e.channels,[0],n.channels,[0]);break;case se.LCH:case se.OKLCH:n.channels=carryForwardMissingComponents(e.channels,[0,1,2],n.channels,[0,1,2])}}return n.channels=convertPowerlessComponentsToMissingComponents(n.channels,a),n}function convertPowerlessComponentsToMissingComponents(e,a){const n=[...e];switch(a){case se.HSL:!Number.isNaN(n[1])&&reducePrecision(n[1],4)<=0&&(n[0]=NaN);break;case se.HWB:Math.max(0,reducePrecision(n[1],4))+Math.max(0,reducePrecision(n[2],4))>=100&&(n[0]=NaN);break;case se.LCH:!Number.isNaN(n[1])&&reducePrecision(n[1],4)<=0&&(n[2]=NaN);break;case se.OKLCH:!Number.isNaN(n[1])&&reducePrecision(n[1],6)<=0&&(n[2]=NaN)}return n}function convertPowerlessComponentsToZeroValuesForDisplay(e,a){const n=[...e];switch(a){case se.HSL:(reducePrecision(n[2])<=0||reducePrecision(n[2])>=100)&&(n[0]=NaN,n[1]=NaN),reducePrecision(n[1])<=0&&(n[0]=NaN);break;case se.HWB:Math.max(0,reducePrecision(n[1]))+Math.max(0,reducePrecision(n[2]))>=100&&(n[0]=NaN);break;case se.Lab:(reducePrecision(n[0])<=0||reducePrecision(n[0])>=100)&&(n[1]=NaN,n[2]=NaN);break;case se.LCH:reducePrecision(n[1])<=0&&(n[2]=NaN),(reducePrecision(n[0])<=0||reducePrecision(n[0])>=100)&&(n[1]=NaN,n[2]=NaN);break;case se.OKLab:(reducePrecision(n[0])<=0||reducePrecision(n[0])>=1)&&(n[1]=NaN,n[2]=NaN);break;case se.OKLCH:reducePrecision(n[1])<=0&&(n[2]=NaN),(reducePrecision(n[0])<=0||reducePrecision(n[0])>=1)&&(n[1]=NaN,n[2]=NaN)}return n}function carryForwardMissingComponents(e,a,n,r){const o=[...n];for(const n of a)Number.isNaN(e[a[n]])&&(o[r[n]]=NaN);return o}function normalizeRelativeColorDataChannels(e){const a=new Map;switch(e.colorNotation){case se.RGB:case se.HEX:a.set(\"r\",dummyNumberToken(255*e.channels[0])),a.set(\"g\",dummyNumberToken(255*e.channels[1])),a.set(\"b\",dummyNumberToken(255*e.channels[2])),\"number\"==typeof e.alpha&&a.set(\"alpha\",dummyNumberToken(e.alpha));break;case se.HSL:a.set(\"h\",dummyNumberToken(e.channels[0])),a.set(\"s\",dummyNumberToken(e.channels[1])),a.set(\"l\",dummyNumberToken(e.channels[2])),\"number\"==typeof e.alpha&&a.set(\"alpha\",dummyNumberToken(e.alpha));break;case se.HWB:a.set(\"h\",dummyNumberToken(e.channels[0])),a.set(\"w\",dummyNumberToken(e.channels[1])),a.set(\"b\",dummyNumberToken(e.channels[2])),\"number\"==typeof e.alpha&&a.set(\"alpha\",dummyNumberToken(e.alpha));break;case se.Lab:case se.OKLab:a.set(\"l\",dummyNumberToken(e.channels[0])),a.set(\"a\",dummyNumberToken(e.channels[1])),a.set(\"b\",dummyNumberToken(e.channels[2])),\"number\"==typeof e.alpha&&a.set(\"alpha\",dummyNumberToken(e.alpha));break;case se.LCH:case se.OKLCH:a.set(\"l\",dummyNumberToken(e.channels[0])),a.set(\"c\",dummyNumberToken(e.channels[1])),a.set(\"h\",dummyNumberToken(e.channels[2])),\"number\"==typeof e.alpha&&a.set(\"alpha\",dummyNumberToken(e.alpha));break;case se.sRGB:case se.A98_RGB:case se.Display_P3:case se.Rec2020:case se.Linear_sRGB:case se.ProPhoto_RGB:a.set(\"r\",dummyNumberToken(e.channels[0])),a.set(\"g\",dummyNumberToken(e.channels[1])),a.set(\"b\",dummyNumberToken(e.channels[2])),\"number\"==typeof e.alpha&&a.set(\"alpha\",dummyNumberToken(e.alpha));break;case se.XYZ_D50:case se.XYZ_D65:a.set(\"x\",dummyNumberToken(e.channels[0])),a.set(\"y\",dummyNumberToken(e.channels[1])),a.set(\"z\",dummyNumberToken(e.channels[2])),\"number\"==typeof e.alpha&&a.set(\"alpha\",dummyNumberToken(e.alpha))}return a}function noneToZeroInRelativeColorDataChannels(e){const a=new Map(e);for(const[n,r]of e)Number.isNaN(r[4].value)&&a.set(n,dummyNumberToken(0));return a}function dummyNumberToken(n){return Number.isNaN(n)?[e.Number,\"none\",-1,-1,{value:Number.NaN,type:a.Number}]:[e.Number,n.toString(),-1,-1,{value:n,type:a.Number}]}function reducePrecision(e,a=7){if(Number.isNaN(e))return 0;const n=Math.pow(10,a);return Math.round(e*n)/n}function colorDataFitsRGB_Gamut(e){const a={...e,channels:[...e.channels]};a.channels=convertPowerlessComponentsToZeroValuesForDisplay(a.channels,a.colorNotation);return!colorDataTo(a,se.RGB).channels.find((e=>e<-1e-5||e>1.00001))}function colorDataFitsDisplayP3_Gamut(e){const a={...e,channels:[...e.channels]};a.channels=convertPowerlessComponentsToZeroValuesForDisplay(a.channels,a.colorNotation);return!colorDataTo(a,se.Display_P3).channels.find((e=>e<-1e-5||e>1.00001))}function normalize(e,a,n,r){return Math.min(Math.max(e/a,n),r)}const ie=/[A-Z]/g;function toLowerCaseAZ(e){return e.replace(ie,(e=>String.fromCharCode(e.charCodeAt(0)+32)))}function normalize_Color_ChannelValues(t,l,s){if(n(t)&&\"none\"===toLowerCaseAZ(t[4].value))return s.syntaxFlags.add(ue.HasNoneKeywords),[e.Number,\"none\",t[2],t[3],{value:NaN,type:a.Number}];if(r(t)){3!==l&&s.syntaxFlags.add(ue.HasPercentageValues);let n=normalize(t[4].value,100,-2147483647,2147483647);return 3===l&&(n=normalize(t[4].value,100,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}if(o(t)){3!==l&&s.syntaxFlags.add(ue.HasNumberValues);let n=normalize(t[4].value,1,-2147483647,2147483647);return 3===l&&(n=normalize(t[4].value,1,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}return!1}const he=new Set([\"srgb\",\"srgb-linear\",\"display-p3\",\"a98-rgb\",\"prophoto-rgb\",\"rec2020\",\"xyz\",\"xyz-d50\",\"xyz-d65\"]);function color$1(e,a){const r=[],s=[],u=[],c=[];let i,h,m=!1,p=!1;const N={colorNotation:se.sRGB,channels:[0,0,0],alpha:1,syntaxFlags:new Set([])};let b=r;for(let o=0;o<e.value.length;o++){let v=e.value[o];if(J(v)||Q(v))for(;J(e.value[o+1])||Q(e.value[o+1]);)o++;else if(b===r&&r.length&&(b=s),b===s&&s.length&&(b=u),ee(v)&&t(v.value)&&\"/\"===v.value[4].value){if(b===c)return!1;b=c}else{if(ae(v)){if(b===c&&\"var\"===toLowerCaseAZ(v.getName())){N.syntaxFlags.add(ue.HasVariableAlpha),b.push(v);continue}if(!te.has(toLowerCaseAZ(v.getName())))return!1;const[[e]]=le([[v]],{censorIntoStandardRepresentableValues:!0,globals:h,precision:-1,toCanonicalUnits:!0,rawPercentages:!0});if(!e||!ee(e)||!l(e.value))return!1;Number.isNaN(e.value[4].value)&&(e.value[4].value=0),v=e}if(b===r&&0===r.length&&ee(v)&&n(v.value)&&he.has(toLowerCaseAZ(v.value[4].value))){if(m)return!1;m=toLowerCaseAZ(v.value[4].value),N.colorNotation=colorSpaceNameToColorNotation(m),p&&(p.colorNotation!==N.colorNotation&&(p=colorDataTo(p,N.colorNotation)),i=normalizeRelativeColorDataChannels(p),h=noneToZeroInRelativeColorDataChannels(i))}else if(b===r&&0===r.length&&ee(v)&&n(v.value)&&\"from\"===toLowerCaseAZ(v.value[4].value)){if(p)return!1;if(m)return!1;for(;J(e.value[o+1])||Q(e.value[o+1]);)o++;if(o++,v=e.value[o],p=a(v),!1===p)return!1;p.syntaxFlags.has(ue.Experimental)&&N.syntaxFlags.add(ue.Experimental),N.syntaxFlags.add(ue.RelativeColorSyntax)}else{if(!ee(v))return!1;if(n(v.value)&&i&&i.has(toLowerCaseAZ(v.value[4].value))){b.push(new ne(i.get(toLowerCaseAZ(v.value[4].value))));continue}b.push(v)}}}if(!m)return!1;if(1!==b.length)return!1;if(1!==r.length||1!==s.length||1!==u.length)return!1;if(!ee(r[0])||!ee(s[0])||!ee(u[0]))return!1;if(i&&!i.has(\"alpha\"))return!1;const v=normalize_Color_ChannelValues(r[0].value,0,N);if(!v||!o(v))return!1;const g=normalize_Color_ChannelValues(s[0].value,1,N);if(!g||!o(g))return!1;const f=normalize_Color_ChannelValues(u[0].value,2,N);if(!f||!o(f))return!1;const d=[v,g,f];if(1===c.length)if(N.syntaxFlags.add(ue.HasAlpha),ee(c[0])){const e=normalize_Color_ChannelValues(c[0].value,3,N);if(!e||!o(e))return!1;d.push(e)}else N.alpha=c[0];else if(i&&i.has(\"alpha\")){const e=normalize_Color_ChannelValues(i.get(\"alpha\"),3,N);if(!e||!o(e))return!1;d.push(e)}return N.channels=[d[0][4].value,d[1][4].value,d[2][4].value],4===d.length&&(N.alpha=d[3][4].value),N}function colorSpaceNameToColorNotation(e){switch(e){case\"srgb\":return se.sRGB;case\"srgb-linear\":return se.Linear_sRGB;case\"display-p3\":return se.Display_P3;case\"a98-rgb\":return se.A98_RGB;case\"prophoto-rgb\":return se.ProPhoto_RGB;case\"rec2020\":return se.Rec2020;case\"xyz\":case\"xyz-d65\":return se.XYZ_D65;case\"xyz-d50\":return se.XYZ_D50;default:throw new Error(\"Unknown color space name: \"+e)}}const me=new Set([\"srgb\",\"srgb-linear\",\"display-p3\",\"a98-rgb\",\"prophoto-rgb\",\"rec2020\",\"lab\",\"oklab\",\"xyz\",\"xyz-d50\",\"xyz-d65\"]),pe=new Set([\"hsl\",\"hwb\",\"lch\",\"oklch\"]),Ne=new Set([\"shorter\",\"longer\",\"increasing\",\"decreasing\"]);function colorMix(e,a){let r=null,o=null,t=null,l=!1;for(let u=0;u<e.value.length;u++){const c=e.value[u];if(!J(c)&&!Q(c)){if(ee(c)&&n(c.value)){if(!r&&\"in\"===toLowerCaseAZ(c.value[4].value)){r=c;continue}if(r&&!o){o=toLowerCaseAZ(c.value[4].value);continue}if(r&&o&&!t&&pe.has(o)){t=toLowerCaseAZ(c.value[4].value);continue}if(r&&o&&t&&!l&&\"hue\"===toLowerCaseAZ(c.value[4].value)){l=!0;continue}return!1}return!(!ee(c)||!s(c.value))&&(!!o&&(t||l?!!(o&&t&&l&&pe.has(o)&&Ne.has(t))&&colorMixPolar(o,t,colorMixComponents(e.value.slice(u+1),a)):me.has(o)?colorMixRectangular(o,colorMixComponents(e.value.slice(u+1),a)):!!pe.has(o)&&colorMixPolar(o,\"shorter\",colorMixComponents(e.value.slice(u+1),a))))}}return!1}function colorMixComponents(e,a){const n=[];let o=1,t=!1,u=!1;for(let o=0;o<e.length;o++){let c=e[o];if(!J(c)&&!Q(c)){if(!ee(c)||!s(c.value)){if(!t){const e=a(c);if(e){t=e;continue}}if(!u){if(ae(c)&&te.has(toLowerCaseAZ(c.getName()))){if([[c]]=le([[c]],{censorIntoStandardRepresentableValues:!0,precision:-1,toCanonicalUnits:!0,rawPercentages:!0}),!c||!ee(c)||!l(c.value))return!1;Number.isNaN(c.value[4].value)&&(c.value[4].value=0)}if(ee(c)&&r(c.value)&&c.value[4].value>=0){u=c.value[4].value;continue}}return!1}if(!t)return!1;n.push({color:t,percentage:u}),t=!1,u=!1}}if(t&&n.push({color:t,percentage:u}),2!==n.length)return!1;let c=n[0].percentage,i=n[1].percentage;return(!1===c||!(c<0||c>100))&&((!1===i||!(i<0||i>100))&&(!1===c&&!1===i?(c=50,i=50):!1!==c&&!1===i?i=100-c:!1===c&&!1!==i&&(c=100-i),(0!==c||0!==i)&&(!1!==c&&!1!==i&&(c+i>100&&(c=c/(c+i)*100,i=i/(c+i)*100),c+i<100&&(o=(c+i)/100,c=c/(c+i)*100,i=i/(c+i)*100),{a:{color:n[0].color,percentage:c},b:{color:n[1].color,percentage:i},alphaMultiplier:o}))))}function colorMixRectangular(e,a){if(!a)return!1;const n=a.a.color,r=a.b.color,o=a.a.percentage/100;let t=n.channels,l=r.channels,s=se.RGB,u=n.alpha;if(\"number\"!=typeof u)return!1;let c=r.alpha;if(\"number\"!=typeof c)return!1;switch(u=Number.isNaN(u)?c:u,c=Number.isNaN(c)?u:c,e){case\"srgb\":s=se.RGB;break;case\"srgb-linear\":s=se.Linear_sRGB;break;case\"display-p3\":s=se.Display_P3;break;case\"a98-rgb\":s=se.A98_RGB;break;case\"prophoto-rgb\":s=se.ProPhoto_RGB;break;case\"rec2020\":s=se.Rec2020;break;case\"lab\":s=se.Lab;break;case\"oklab\":s=se.OKLab;break;case\"xyz-d50\":s=se.XYZ_D50;break;case\"xyz\":case\"xyz-d65\":s=se.XYZ_D65}t=colorDataTo(n,s).channels,l=colorDataTo(r,s).channels,t[0]=fillInMissingComponent(t[0],l[0]),l[0]=fillInMissingComponent(l[0],t[0]),t[1]=fillInMissingComponent(t[1],l[1]),l[1]=fillInMissingComponent(l[1],t[1]),t[2]=fillInMissingComponent(t[2],l[2]),l[2]=fillInMissingComponent(l[2],t[2]),t[0]=premultiply(t[0],u),t[1]=premultiply(t[1],u),t[2]=premultiply(t[2],u),l[0]=premultiply(l[0],c),l[1]=premultiply(l[1],c),l[2]=premultiply(l[2],c);const i=interpolate(u,c,o),h={colorNotation:s,channels:[un_premultiply(interpolate(t[0],l[0],o),i),un_premultiply(interpolate(t[1],l[1],o),i),un_premultiply(interpolate(t[2],l[2],o),i)],alpha:i*a.alphaMultiplier,syntaxFlags:new Set([ue.ColorMix])};return(a.a.color.syntaxFlags.has(ue.Experimental)||a.b.color.syntaxFlags.has(ue.Experimental))&&h.syntaxFlags.add(ue.Experimental),h}function colorMixPolar(e,a,n){if(!n)return!1;const r=n.a.color,o=n.b.color,t=n.a.percentage/100;let l=r.channels,s=o.channels,u=0,c=0,i=0,h=0,m=0,p=0,N=se.RGB,b=r.alpha;if(\"number\"!=typeof b)return!1;let v=o.alpha;if(\"number\"!=typeof v)return!1;switch(b=Number.isNaN(b)?v:b,v=Number.isNaN(v)?b:v,e){case\"hsl\":N=se.HSL;break;case\"hwb\":N=se.HWB;break;case\"lch\":N=se.LCH;break;case\"oklch\":N=se.OKLCH}switch(l=colorDataTo(r,N).channels,s=colorDataTo(o,N).channels,e){case\"hsl\":case\"hwb\":u=l[0],c=s[0],i=l[1],h=s[1],m=l[2],p=s[2];break;case\"lch\":case\"oklch\":i=l[0],h=s[0],m=l[1],p=s[1],u=l[2],c=s[2]}u=fillInMissingComponent(u,c),Number.isNaN(u)&&(u=0),c=fillInMissingComponent(c,u),Number.isNaN(c)&&(c=0),i=fillInMissingComponent(i,h),h=fillInMissingComponent(h,i),m=fillInMissingComponent(m,p),p=fillInMissingComponent(p,m);const g=c-u;switch(a){case\"shorter\":g>180?u+=360:g<-180&&(c+=360);break;case\"longer\":-180<g&&g<180&&(g>0?u+=360:c+=360);break;case\"increasing\":g<0&&(c+=360);break;case\"decreasing\":g>0&&(u+=360);break;default:throw new Error(\"Unknown hue interpolation method\")}i=premultiply(i,b),m=premultiply(m,b),h=premultiply(h,v),p=premultiply(p,v);let f=[0,0,0];const d=interpolate(b,v,t);switch(e){case\"hsl\":case\"hwb\":f=[interpolate(u,c,t),un_premultiply(interpolate(i,h,t),d),un_premultiply(interpolate(m,p,t),d)];break;case\"lch\":case\"oklch\":f=[un_premultiply(interpolate(i,h,t),d),un_premultiply(interpolate(m,p,t),d),interpolate(u,c,t)]}const y={colorNotation:N,channels:f,alpha:d*n.alphaMultiplier,syntaxFlags:new Set([ue.ColorMix])};return(n.a.color.syntaxFlags.has(ue.Experimental)||n.b.color.syntaxFlags.has(ue.Experimental))&&y.syntaxFlags.add(ue.Experimental),y}function fillInMissingComponent(e,a){return Number.isNaN(e)?a:e}function interpolate(e,a,n){return e*n+a*(1-n)}function premultiply(e,a){return Number.isNaN(a)?e:Number.isNaN(e)?NaN:e*a}function un_premultiply(e,a){return 0===a||Number.isNaN(a)?e:Number.isNaN(e)?NaN:e/a}function hex(e){const a=toLowerCaseAZ(e[4].value);if(a.match(/[^a-f0-9]/))return!1;const n={colorNotation:se.HEX,channels:[0,0,0],alpha:1,syntaxFlags:new Set([ue.Hex])},r=a.length;if(3===r){const e=a[0],r=a[1],o=a[2];return n.channels=[parseInt(e+e,16)/255,parseInt(r+r,16)/255,parseInt(o+o,16)/255],n}if(6===r){const e=a[0]+a[1],r=a[2]+a[3],o=a[4]+a[5];return n.channels=[parseInt(e,16)/255,parseInt(r,16)/255,parseInt(o,16)/255],n}if(4===r){const e=a[0],r=a[1],o=a[2],t=a[3];return n.channels=[parseInt(e+e,16)/255,parseInt(r+r,16)/255,parseInt(o+o,16)/255],n.alpha=parseInt(t+t,16)/255,n.syntaxFlags.add(ue.HasAlpha),n}if(8===r){const e=a[0]+a[1],r=a[2]+a[3],o=a[4]+a[5],t=a[6]+a[7];return n.channels=[parseInt(e,16)/255,parseInt(r,16)/255,parseInt(o,16)/255],n.alpha=parseInt(t,16)/255,n.syntaxFlags.add(ue.HasAlpha),n}return!1}function normalizeHue(n){if(o(n))return n[4].value=n[4].value%360,n[1]=n[4].value.toString(),n;if(u(n)){let r=n[4].value;switch(toLowerCaseAZ(n[4].unit)){case\"deg\":break;case\"rad\":r=180*n[4].value/Math.PI;break;case\"grad\":r=.9*n[4].value;break;case\"turn\":r=360*n[4].value;break;default:return!1}return r%=360,[e.Number,r.toString(),n[2],n[3],{value:r,type:a.Number}]}return!1}function normalize_legacy_HSL_ChannelValues(n,t,l){if(0===t){const e=normalizeHue(n);return!1!==e&&(u(n)&&l.syntaxFlags.add(ue.HasDimensionValues),e)}if(r(n)){3===t?l.syntaxFlags.add(ue.HasPercentageAlpha):l.syntaxFlags.add(ue.HasPercentageValues);let r=normalize(n[4].value,1,0,100);return 3===t&&(r=normalize(n[4].value,100,0,1)),[e.Number,r.toString(),n[2],n[3],{value:r,type:a.Number}]}if(o(n)){if(3!==t)return!1;let r=normalize(n[4].value,1,0,100);return 3===t&&(r=normalize(n[4].value,1,0,1)),[e.Number,r.toString(),n[2],n[3],{value:r,type:a.Number}]}return!1}function normalize_modern_HSL_ChannelValues(t,l,s){if(n(t)&&\"none\"===toLowerCaseAZ(t[4].value))return s.syntaxFlags.add(ue.HasNoneKeywords),[e.Number,\"none\",t[2],t[3],{value:NaN,type:a.Number}];if(0===l){const e=normalizeHue(t);return!1!==e&&(u(t)&&s.syntaxFlags.add(ue.HasDimensionValues),e)}if(r(t)){3===l?s.syntaxFlags.add(ue.HasPercentageAlpha):s.syntaxFlags.add(ue.HasPercentageValues);let n=t[4].value;return 3===l?n=normalize(t[4].value,100,0,1):1===l&&(n=normalize(t[4].value,1,0,2147483647)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}if(o(t)){3!==l&&s.syntaxFlags.add(ue.HasNumberValues);let n=t[4].value;return 3===l?n=normalize(t[4].value,1,0,1):1===l&&(n=normalize(t[4].value,1,0,2147483647)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}return!1}function threeChannelLegacySyntax(e,a,n,r){const t=[],u=[],c=[],i=[],h={colorNotation:n,channels:[0,0,0],alpha:1,syntaxFlags:new Set(r)};let m=t;for(let a=0;a<e.value.length;a++){let n=e.value[a];if(!J(n)&&!Q(n)){if(ee(n)&&s(n.value)){if(m===t){m=u;continue}if(m===u){m=c;continue}if(m===c){m=i;continue}if(m===i)return!1}if(ae(n)){if(m===i&&\"var\"===n.getName().toLowerCase()){h.syntaxFlags.add(ue.HasVariableAlpha),m.push(n);continue}if(!te.has(n.getName().toLowerCase()))return!1;const[[e]]=le([[n]],{censorIntoStandardRepresentableValues:!0,precision:-1,toCanonicalUnits:!0,rawPercentages:!0});if(!e||!ee(e)||!l(e.value))return!1;Number.isNaN(e.value[4].value)&&(e.value[4].value=0),n=e}if(!ee(n))return!1;m.push(n)}}if(1!==m.length)return!1;if(1!==t.length||1!==u.length||1!==c.length)return!1;if(!ee(t[0])||!ee(u[0])||!ee(c[0]))return!1;const p=a(t[0].value,0,h);if(!p||!o(p))return!1;const N=a(u[0].value,1,h);if(!N||!o(N))return!1;const b=a(c[0].value,2,h);if(!b||!o(b))return!1;const v=[p,N,b];if(1===i.length)if(h.syntaxFlags.add(ue.HasAlpha),ee(i[0])){const e=a(i[0].value,3,h);if(!e||!o(e))return!1;v.push(e)}else h.alpha=i[0];return h.channels=[v[0][4].value,v[1][4].value,v[2][4].value],4===v.length&&(h.alpha=v[3][4].value),h}function threeChannelSpaceSeparated(e,a,r,s,u){const c=[],i=[],h=[],m=[];let p,N,b=!1;const v={colorNotation:r,channels:[0,0,0],alpha:1,syntaxFlags:new Set(s)};let g=c;for(let a=0;a<e.value.length;a++){let o=e.value[a];if(J(o)||Q(o))for(;J(e.value[a+1])||Q(e.value[a+1]);)a++;else if(g===c&&c.length&&(g=i),g===i&&i.length&&(g=h),ee(o)&&t(o.value)&&\"/\"===o.value[4].value){if(g===m)return!1;g=m}else{if(ae(o)){if(g===m&&\"var\"===o.getName().toLowerCase()){v.syntaxFlags.add(ue.HasVariableAlpha),g.push(o);continue}if(!te.has(o.getName().toLowerCase()))return!1;const[[e]]=le([[o]],{censorIntoStandardRepresentableValues:!0,globals:N,precision:-1,toCanonicalUnits:!0,rawPercentages:!0});if(!e||!ee(e)||!l(e.value))return!1;Number.isNaN(e.value[4].value)&&(e.value[4].value=0),o=e}if(g===c&&0===c.length&&ee(o)&&n(o.value)&&\"from\"===o.value[4].value.toLowerCase()){if(b)return!1;for(;J(e.value[a+1])||Q(e.value[a+1]);)a++;if(a++,o=e.value[a],b=u(o),!1===b)return!1;b.syntaxFlags.has(ue.Experimental)&&v.syntaxFlags.add(ue.Experimental),v.syntaxFlags.add(ue.RelativeColorSyntax),b.colorNotation!==r&&(b=colorDataTo(b,r)),p=normalizeRelativeColorDataChannels(b),N=noneToZeroInRelativeColorDataChannels(p)}else{if(!ee(o))return!1;if(n(o.value)&&p){const e=o.value[4].value.toLowerCase();if(p.has(e)){g.push(new ne(p.get(e)));continue}}g.push(o)}}}if(1!==g.length)return!1;if(1!==c.length||1!==i.length||1!==h.length)return!1;if(!ee(c[0])||!ee(i[0])||!ee(h[0]))return!1;if(p&&!p.has(\"alpha\"))return!1;const f=a(c[0].value,0,v);if(!f||!o(f))return!1;const d=a(i[0].value,1,v);if(!d||!o(d))return!1;const y=a(h[0].value,2,v);if(!y||!o(y))return!1;const _=[f,d,y];if(1===m.length)if(v.syntaxFlags.add(ue.HasAlpha),ee(m[0])){const e=a(m[0].value,3,v);if(!e||!o(e))return!1;_.push(e)}else v.alpha=m[0];else if(p&&p.has(\"alpha\")){const e=a(p.get(\"alpha\"),3,v);if(!e||!o(e))return!1;_.push(e)}return v.channels=[_[0][4].value,_[1][4].value,_[2][4].value],4===_.length&&(v.alpha=_[3][4].value),v}function hsl(e,a){if(e.value.some((e=>ee(e)&&s(e.value)))){const a=hslCommaSeparated(e);if(!1!==a)return a}{const n=hslSpaceSeparated(e,a);if(!1!==n)return n}return!1}function hslCommaSeparated(e){return threeChannelLegacySyntax(e,normalize_legacy_HSL_ChannelValues,se.HSL,[ue.LegacyHSL])}function hslSpaceSeparated(e,a){return threeChannelSpaceSeparated(e,normalize_modern_HSL_ChannelValues,se.HSL,[],a)}function normalize_HWB_ChannelValues(t,l,s){if(n(t)&&\"none\"===toLowerCaseAZ(t[4].value))return s.syntaxFlags.add(ue.HasNoneKeywords),[e.Number,\"none\",t[2],t[3],{value:NaN,type:a.Number}];if(0===l){const e=normalizeHue(t);return!1!==e&&(u(t)&&s.syntaxFlags.add(ue.HasDimensionValues),e)}if(r(t)){3===l?s.syntaxFlags.add(ue.HasPercentageAlpha):s.syntaxFlags.add(ue.HasPercentageValues);let n=t[4].value;return 3===l&&(n=normalize(t[4].value,100,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}if(o(t)){3!==l&&s.syntaxFlags.add(ue.HasNumberValues);let n=t[4].value;return 3===l&&(n=normalize(t[4].value,1,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}return!1}function normalize_Lab_ChannelValues(t,l,s){if(n(t)&&\"none\"===toLowerCaseAZ(t[4].value))return s.syntaxFlags.add(ue.HasNoneKeywords),[e.Number,\"none\",t[2],t[3],{value:NaN,type:a.Number}];if(r(t)){3!==l&&s.syntaxFlags.add(ue.HasPercentageValues);let n=normalize(t[4].value,1,0,100);return 1===l||2===l?n=normalize(t[4].value,.8,-2147483647,2147483647):3===l&&(n=normalize(t[4].value,100,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}if(o(t)){3!==l&&s.syntaxFlags.add(ue.HasNumberValues);let n=normalize(t[4].value,1,0,100);return 1===l||2===l?n=normalize(t[4].value,1,-2147483647,2147483647):3===l&&(n=normalize(t[4].value,1,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}return!1}function lab(e,a){return threeChannelSpaceSeparated(e,normalize_Lab_ChannelValues,se.Lab,[],a)}function normalize_LCH_ChannelValues(t,l,s){if(n(t)&&\"none\"===toLowerCaseAZ(t[4].value))return s.syntaxFlags.add(ue.HasNoneKeywords),[e.Number,\"none\",t[2],t[3],{value:NaN,type:a.Number}];if(2===l){const e=normalizeHue(t);return!1!==e&&(u(t)&&s.syntaxFlags.add(ue.HasDimensionValues),e)}if(r(t)){3!==l&&s.syntaxFlags.add(ue.HasPercentageValues);let n=normalize(t[4].value,1,0,100);return 1===l?n=normalize(t[4].value,100/150,0,2147483647):3===l&&(n=normalize(t[4].value,100,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}if(o(t)){3!==l&&s.syntaxFlags.add(ue.HasNumberValues);let n=normalize(t[4].value,1,0,100);return 1===l?n=normalize(t[4].value,1,0,2147483647):3===l&&(n=normalize(t[4].value,1,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}return!1}function lch(e,a){return threeChannelSpaceSeparated(e,normalize_LCH_ChannelValues,se.LCH,[],a)}const be=new Map;for(const[e,a]of Object.entries(G))be.set(e,a);function namedColor(e){const a=be.get(toLowerCaseAZ(e));return!!a&&{colorNotation:se.RGB,channels:[a[0]/255,a[1]/255,a[2]/255],alpha:1,syntaxFlags:new Set([ue.ColorKeyword,ue.NamedColor])}}function normalize_OKLab_ChannelValues(t,l,s){if(n(t)&&\"none\"===toLowerCaseAZ(t[4].value))return s.syntaxFlags.add(ue.HasNoneKeywords),[e.Number,\"none\",t[2],t[3],{value:NaN,type:a.Number}];if(r(t)){3!==l&&s.syntaxFlags.add(ue.HasPercentageValues);let n=normalize(t[4].value,100,0,1);return 1===l||2===l?n=normalize(t[4].value,250,-2147483647,2147483647):3===l&&(n=normalize(t[4].value,100,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}if(o(t)){3!==l&&s.syntaxFlags.add(ue.HasNumberValues);let n=normalize(t[4].value,1,0,1);return 1===l||2===l?n=normalize(t[4].value,1,-2147483647,2147483647):3===l&&(n=normalize(t[4].value,1,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}return!1}function oklab(e,a){return threeChannelSpaceSeparated(e,normalize_OKLab_ChannelValues,se.OKLab,[],a)}function normalize_OKLCH_ChannelValues(t,l,s){if(n(t)&&\"none\"===toLowerCaseAZ(t[4].value))return s.syntaxFlags.add(ue.HasNoneKeywords),[e.Number,\"none\",t[2],t[3],{value:NaN,type:a.Number}];if(2===l){const e=normalizeHue(t);return!1!==e&&(u(t)&&s.syntaxFlags.add(ue.HasDimensionValues),e)}if(r(t)){3!==l&&s.syntaxFlags.add(ue.HasPercentageValues);let n=normalize(t[4].value,100,0,1);return 1===l?n=normalize(t[4].value,250,0,2147483647):3===l&&(n=normalize(t[4].value,100,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}if(o(t)){3!==l&&s.syntaxFlags.add(ue.HasNumberValues);let n=normalize(t[4].value,1,0,1);return 1===l?n=normalize(t[4].value,1,0,2147483647):3===l&&(n=normalize(t[4].value,1,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}return!1}function oklch(e,a){return threeChannelSpaceSeparated(e,normalize_OKLCH_ChannelValues,se.OKLCH,[],a)}function normalize_legacy_sRGB_ChannelValues(n,t,l){if(r(n)){3===t?l.syntaxFlags.add(ue.HasPercentageAlpha):l.syntaxFlags.add(ue.HasPercentageValues);const r=normalize(n[4].value,100,0,1);return[e.Number,r.toString(),n[2],n[3],{value:r,type:a.Number}]}if(o(n)){3!==t&&l.syntaxFlags.add(ue.HasNumberValues);let r=normalize(n[4].value,255,0,1);return 3===t&&(r=normalize(n[4].value,1,0,1)),[e.Number,r.toString(),n[2],n[3],{value:r,type:a.Number}]}return!1}function normalize_modern_sRGB_ChannelValues(t,l,s){if(n(t)&&\"none\"===t[4].value.toLowerCase())return s.syntaxFlags.add(ue.HasNoneKeywords),[e.Number,\"none\",t[2],t[3],{value:NaN,type:a.Number}];if(r(t)){3!==l&&s.syntaxFlags.add(ue.HasPercentageValues);let n=normalize(t[4].value,100,-2147483647,2147483647);return 3===l&&(n=normalize(t[4].value,100,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}if(o(t)){3!==l&&s.syntaxFlags.add(ue.HasNumberValues);let n=normalize(t[4].value,255,-2147483647,2147483647);return 3===l&&(n=normalize(t[4].value,1,0,1)),[e.Number,n.toString(),t[2],t[3],{value:n,type:a.Number}]}return!1}function rgb(e,a){if(e.value.some((e=>ee(e)&&s(e.value)))){const a=rgbCommaSeparated(e);if(!1!==a)return(!a.syntaxFlags.has(ue.HasNumberValues)||!a.syntaxFlags.has(ue.HasPercentageValues))&&a}else{const n=rgbSpaceSeparated(e,a);if(!1!==n)return n}return!1}function rgbCommaSeparated(e){return threeChannelLegacySyntax(e,normalize_legacy_sRGB_ChannelValues,se.RGB,[ue.LegacyRGB])}function rgbSpaceSeparated(e,a){return threeChannelSpaceSeparated(e,normalize_modern_sRGB_ChannelValues,se.RGB,[],a)}function XYZ_D50_to_sRGB_Gamut(e){const a=B(e);if(T(a))return V(a);let n=e;return n=L(n),n[0]<1e-6&&(n=[0,0,0]),n[0]>.999999&&(n=[1,0,0]),A(X(n,oklch_to_lin_srgb,lin_srgb_to_oklch))}function oklch_to_lin_srgb(e){return e=Y(e),e=K(e),I(e)}function lin_srgb_to_oklch(e){return e=O(e),e=E(e),W(e)}function contrastColor(e,a){let r=!1,o=!1;for(let t=0;t<e.value.length;t++){const l=e.value[t];if(!J(l)&&!Q(l)&&(r||(r=a(l),!r))){if(!r||o||!ee(l)||!n(l.value)||\"max\"!==toLowerCaseAZ(l.value[4].value))return!1;o=!0}}if(!r||!o)return!1;r.channels=convertNaNToZero(r.channels),r.channels=XYZ_D50_to_sRGB_Gamut(colorData_to_XYZ_D50(r).channels),r.colorNotation=se.sRGB;const t={colorNotation:se.sRGB,channels:[0,0,0],alpha:1,syntaxFlags:new Set([ue.ContrastColor,ue.Experimental])},l=U(r.channels,[1,1,1]),s=U(r.channels,[0,0,0]);return t.channels=l>s?[1,1,1]:[0,0,0],t}function XYZ_D50_to_P3_Gamut(e){const a=M(e);if(T(a))return V(a);let n=e;return n=L(n),n[0]<1e-6&&(n=[0,0,0]),n[0]>.999999&&(n=[1,0,0]),$(X(n,oklch_to_lin_p3,lin_p3_to_oklch))}function oklch_to_lin_p3(e){return e=Y(e),e=K(e),j(e)}function lin_p3_to_oklch(e){return e=q(e),e=E(e),W(e)}function toPrecision(e,a=7){e=+e,a=+a;const n=(Math.floor(Math.abs(e))+\"\").length;if(a>n)return+e.toFixed(a-n);{const r=10**(n-a);return Math.round(e/r)*r}}function serializeWithAlpha(n,r,o,t){const l=[e.CloseParen,\")\",-1,-1,void 0];if(\"number\"==typeof n.alpha){const s=Math.min(1,Math.max(0,toPrecision(Number.isNaN(n.alpha)?0:n.alpha)));return 1===toPrecision(s,4)?new re(r,l,t):new re(r,l,[...t,new oe([o]),new ne([e.Delim,\"/\",-1,-1,{value:\"/\"}]),new oe([o]),new ne([e.Number,toPrecision(s,4).toString(),-1,-1,{value:n.alpha,type:a.Integer}])])}return new re(r,l,[...t,new oe([o]),new ne([e.Delim,\"/\",-1,-1,{value:\"/\"}]),new oe([o]),n.alpha])}function serializeP3(n,r=!0){n.channels=convertPowerlessComponentsToZeroValuesForDisplay(n.channels,n.colorNotation);let o=n.channels.map((e=>Number.isNaN(e)?0:e));r?o=XYZ_D50_to_P3_Gamut(colorData_to_XYZ_D50(n).channels):n.colorNotation!==se.Display_P3&&(o=M(colorData_to_XYZ_D50(n).channels));const t=r?Math.min(1,Math.max(0,toPrecision(o[0],6))):toPrecision(o[0],6),l=r?Math.min(1,Math.max(0,toPrecision(o[1],6))):toPrecision(o[1],6),s=r?Math.min(1,Math.max(0,toPrecision(o[2],6))):toPrecision(o[2],6),u=[e.Function,\"color(\",-1,-1,{value:\"color\"}],c=[e.Whitespace,\" \",-1,-1,void 0];return serializeWithAlpha(n,u,c,[new ne([e.Ident,\"display-p3\",-1,-1,{value:\"display-p3\"}]),new oe([c]),new ne([e.Number,t.toString(),-1,-1,{value:o[0],type:a.Number}]),new oe([c]),new ne([e.Number,l.toString(),-1,-1,{value:o[1],type:a.Number}]),new oe([c]),new ne([e.Number,s.toString(),-1,-1,{value:o[2],type:a.Number}])])}function serializeRGB(n,r=!0){n.channels=convertPowerlessComponentsToZeroValuesForDisplay(n.channels,n.colorNotation);let o=n.channels.map((e=>Number.isNaN(e)?0:e));o=r?XYZ_D50_to_sRGB_Gamut(colorData_to_XYZ_D50(n).channels):B(colorData_to_XYZ_D50(n).channels);const t=Math.min(255,Math.max(0,Math.round(255*toPrecision(o[0])))),l=Math.min(255,Math.max(0,Math.round(255*toPrecision(o[1])))),s=Math.min(255,Math.max(0,Math.round(255*toPrecision(o[2])))),u=[e.CloseParen,\")\",-1,-1,void 0],c=[e.Whitespace,\" \",-1,-1,void 0],i=[e.Comma,\",\",-1,-1,void 0],h=[new ne([e.Number,t.toString(),-1,-1,{value:Math.min(255,255*Math.max(0,o[0])),type:a.Integer}]),new ne(i),new oe([c]),new ne([e.Number,l.toString(),-1,-1,{value:Math.min(255,255*Math.max(0,o[1])),type:a.Integer}]),new ne(i),new oe([c]),new ne([e.Number,s.toString(),-1,-1,{value:Math.min(255,255*Math.max(0,o[2])),type:a.Integer}])];if(\"number\"==typeof n.alpha){const r=Math.min(1,Math.max(0,toPrecision(Number.isNaN(n.alpha)?0:n.alpha)));return 1===toPrecision(r,4)?new re([e.Function,\"rgb(\",-1,-1,{value:\"rgb\"}],u,h):new re([e.Function,\"rgba(\",-1,-1,{value:\"rgba\"}],u,[...h,new ne(i),new oe([c]),new ne([e.Number,toPrecision(r,4).toString(),-1,-1,{value:n.alpha,type:a.Number}])])}return new re([e.Function,\"rgba(\",-1,-1,{value:\"rgba\"}],u,[...h,new ne(i),new oe([c]),n.alpha])}function serializeHSL(n,r=!0){n.channels=convertPowerlessComponentsToZeroValuesForDisplay(n.channels,n.colorNotation);let o=n.channels.map((e=>Number.isNaN(e)?0:e));o=z(r?w(XYZ_D50_to_sRGB_Gamut(colorData_to_XYZ_D50(n).channels)):colorData_to_XYZ_D50(n).channels),o=o.map((e=>Number.isNaN(e)?0:e));const t=Math.min(360,Math.max(0,Math.round(toPrecision(o[0])))),l=Math.min(100,Math.max(0,Math.round(toPrecision(o[1])))),s=Math.min(100,Math.max(0,Math.round(toPrecision(o[2])))),u=[e.CloseParen,\")\",-1,-1,void 0],c=[e.Whitespace,\" \",-1,-1,void 0],i=[e.Comma,\",\",-1,-1,void 0],h=[new ne([e.Number,t.toString(),-1,-1,{value:o[0],type:a.Integer}]),new ne(i),new oe([c]),new ne([e.Percentage,l.toString()+\"%\",-1,-1,{value:o[1]}]),new ne(i),new oe([c]),new ne([e.Percentage,s.toString()+\"%\",-1,-1,{value:o[2]}])];if(\"number\"==typeof n.alpha){const r=Math.min(1,Math.max(0,toPrecision(Number.isNaN(n.alpha)?0:n.alpha)));return 1===toPrecision(r,4)?new re([e.Function,\"hsl(\",-1,-1,{value:\"hsl\"}],u,h):new re([e.Function,\"hsla(\",-1,-1,{value:\"hsla\"}],u,[...h,new ne(i),new oe([c]),new ne([e.Number,toPrecision(r,4).toString(),-1,-1,{value:n.alpha,type:a.Number}])])}return new re([e.Function,\"hsla(\",-1,-1,{value:\"hsla\"}],u,[...h,new ne(i),new oe([c]),n.alpha])}function serializeOKLCH(n){n.channels=convertPowerlessComponentsToZeroValuesForDisplay(n.channels,n.colorNotation);let r=n.channels.map((e=>Number.isNaN(e)?0:e));n.colorNotation!==se.OKLCH&&(r=L(colorData_to_XYZ_D50(n).channels));const o=toPrecision(r[0],6),t=toPrecision(r[1],6),l=toPrecision(r[2],6),s=[e.Function,\"oklch(\",-1,-1,{value:\"oklch\"}],u=[e.Whitespace,\" \",-1,-1,void 0];return serializeWithAlpha(n,s,u,[new ne([e.Number,o.toString(),-1,-1,{value:r[0],type:a.Number}]),new oe([u]),new ne([e.Number,t.toString(),-1,-1,{value:r[1],type:a.Number}]),new oe([u]),new ne([e.Number,l.toString(),-1,-1,{value:r[2],type:a.Number}])])}function color(e){if(ae(e)){switch(toLowerCaseAZ(e.getName())){case\"rgb\":case\"rgba\":return rgb(e,color);case\"hsl\":case\"hsla\":return hsl(e,color);case\"hwb\":return a=color,threeChannelSpaceSeparated(e,normalize_HWB_ChannelValues,se.HWB,[],a);case\"lab\":return lab(e,color);case\"lch\":return lch(e,color);case\"oklab\":return oklab(e,color);case\"oklch\":return oklch(e,color);case\"color\":return color$1(e,color);case\"color-mix\":return colorMix(e,color);case\"contrast-color\":return contrastColor(e,color)}}var a;if(ee(e)){if(c(e.value))return hex(e.value);if(n(e.value)){const a=namedColor(e.value[4].value);return!1!==a?a:\"transparent\"===toLowerCaseAZ(e.value[4].value)&&{colorNotation:se.RGB,channels:[0,0,0],alpha:0,syntaxFlags:new Set([ue.ColorKeyword])}}}return!1}export{se as ColorNotation,ue as SyntaxFlag,color,colorDataFitsDisplayP3_Gamut,colorDataFitsRGB_Gamut,serializeHSL,serializeOKLCH,serializeP3,serializeRGB};\n","/**\n * relative-color\n */\n\nimport { SyntaxFlag, color as colorParser } from '@csstools/css-color-parser';\nimport { parseComponentValue } from '@csstools/css-parser-algorithms';\nimport type { ComponentValue } from '@csstools/css-parser-algorithms';\nimport { TokenType, tokenize } from '@csstools/css-tokenizer';\nimport type { CSSToken } from '@csstools/css-tokenizer';\nimport { LRUCache } from 'lru-cache';\nimport { isString, isStringOrNumber } from './common';\nimport { colorToRgb } from './convert';\nimport { resolveDimension, serializeCalc } from './css-calc';\nimport { resolve } from './resolve';\nimport { roundToPrecision, valueToJsonString } from './util';\nimport type { ColorChannels, IOptions } from './typedef';\n\n/* constants */\nimport { NAMED_COLORS } from './color';\nimport {\n  CS_LAB,\n  CS_LCH,\n  FN_REL,\n  FN_REL_CAPT,\n  FN_VAR,\n  NONE,\n  SYN_COLOR_TYPE,\n  SYN_FN_MATH_START,\n  SYN_FN_VAR,\n  SYN_MIX,\n  VAL_SPEC\n} from './constant';\nconst {\n  CloseParen: PAREN_CLOSE,\n  Comment: COMMENT,\n  Dimension: DIM,\n  EOF,\n  Function: FUNC,\n  Ident: IDENT,\n  Number: NUM,\n  OpenParen: PAREN_OPEN,\n  Percentage: PCT,\n  Whitespace: W_SPACE\n} = TokenType;\nconst { HasNoneKeywords: KEY_NONE } = SyntaxFlag;\nconst OCT = 8;\nconst DEC = 10;\nconst HEX = 16;\nconst MAX_PCT = 100;\nconst MAX_RGB = 255;\n\n/* type definitions */\n/**\n * @type ColorChannel - color channel\n */\ntype ColorChannel = (number | string)[];\n\n/* regexp */\nconst REG_COLOR_CAPT = new RegExp(\n  `^${FN_REL}(${SYN_COLOR_TYPE}|${SYN_MIX})\\\\s+`\n);\nconst REG_CS_HSL = /(?:hsla?|hwb)$/;\nconst REG_CS_CIE = new RegExp(`^(?:${CS_LAB}|${CS_LCH})$`);\nconst REG_FN_MATH_START = new RegExp(SYN_FN_MATH_START);\nconst REG_FN_REL = new RegExp(FN_REL);\nconst REG_FN_REL_CAPT = new RegExp(`^${FN_REL_CAPT}`);\nconst REG_FN_REL_START = new RegExp(`^${FN_REL}`);\nconst REG_FN_VAR = new RegExp(SYN_FN_VAR);\n\n/* cached results */\nexport const cachedResults = new LRUCache({\n  max: 4096\n});\n\n/**\n * resolve relative color channels\n * @param tokens - CSS tokens\n * @param [opt] - options\n * @returns resolved color channels\n */\nexport function resolveColorChannels(\n  tokens: CSSToken[],\n  opt: IOptions = {}\n): ColorChannel | null {\n  if (!Array.isArray(tokens)) {\n    throw new TypeError(`${tokens} is not an array.`);\n  }\n  const { colorSpace = '', format = '' } = opt;\n  const colorChannels = new Map([\n    ['color', ['r', 'g', 'b', 'alpha']],\n    ['hsl', ['h', 's', 'l', 'alpha']],\n    ['hsla', ['h', 's', 'l', 'alpha']],\n    ['hwb', ['h', 'w', 'b', 'alpha']],\n    ['lab', ['l', 'a', 'b', 'alpha']],\n    ['lch', ['l', 'c', 'h', 'alpha']],\n    ['oklab', ['l', 'a', 'b', 'alpha']],\n    ['oklch', ['l', 'c', 'h', 'alpha']],\n    ['rgb', ['r', 'g', 'b', 'alpha']],\n    ['rgba', ['r', 'g', 'b', 'alpha']]\n  ]);\n  const colorChannel = colorChannels.get(colorSpace);\n  const mathFunc = new Set();\n  const channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] = [\n    [],\n    [],\n    [],\n    []\n  ];\n  let i = 0;\n  let nest = 0;\n  let func = false;\n  while (tokens.length) {\n    const token = tokens.shift();\n    if (!Array.isArray(token)) {\n      throw new TypeError(`${token} is not an array.`);\n    }\n    const [type = '', value = '', , , detail = {}] = token;\n    const { value: detailValue } = detail as {\n      value: number;\n    };\n    const channel = channels[i] as ColorChannel;\n    switch (type) {\n      case DIM: {\n        const resolvedValue = resolveDimension(token, opt) ?? value;\n        channel.push(resolvedValue);\n        break;\n      }\n      case FUNC: {\n        channel.push(value);\n        func = true;\n        nest++;\n        if (REG_FN_MATH_START.test(value)) {\n          mathFunc.add(nest);\n        }\n        break;\n      }\n      case IDENT: {\n        // invalid channel key\n        if (!colorChannel || !colorChannel.includes(value)) {\n          return null;\n        }\n        channel.push(value);\n        if (!func) {\n          i++;\n        }\n        break;\n      }\n      case NUM: {\n        channel.push(detailValue);\n        if (!func) {\n          i++;\n        }\n        break;\n      }\n      case PAREN_OPEN: {\n        channel.push(value);\n        nest++;\n        break;\n      }\n      case PAREN_CLOSE: {\n        if (func) {\n          const lastValue = channel[channel.length - 1];\n          if (lastValue === ' ') {\n            channel.splice(-1, 1, value);\n          } else {\n            channel.push(value);\n          }\n          if (mathFunc.has(nest)) {\n            mathFunc.delete(nest);\n          }\n          nest--;\n          if (nest === 0) {\n            func = false;\n            i++;\n          }\n        }\n        break;\n      }\n      case PCT: {\n        channel.push(detailValue / MAX_PCT);\n        if (!func) {\n          i++;\n        }\n        break;\n      }\n      case W_SPACE: {\n        if (channel.length && func) {\n          const lastValue = channel[channel.length - 1];\n          if (typeof lastValue === 'number') {\n            channel.push(value);\n          } else if (\n            isString(lastValue) &&\n            !lastValue.endsWith('(') &&\n            lastValue !== ' '\n          ) {\n            channel.push(value);\n          }\n        }\n        break;\n      }\n      default: {\n        if (type !== COMMENT && type !== EOF && func) {\n          channel.push(value);\n        }\n      }\n    }\n  }\n  const channelValues: ColorChannel = [];\n  for (const channel of channels) {\n    if (channel.length === 1) {\n      const [resolvedValue] = channel;\n      if (\n        isStringOrNumber(resolvedValue) &&\n        typeof resolvedValue !== 'undefined'\n      ) {\n        channelValues.push(resolvedValue);\n      }\n    } else if (channel.length) {\n      const resolvedValue = serializeCalc(channel.join(''), {\n        format\n      });\n      channelValues.push(resolvedValue);\n    }\n  }\n  return channelValues;\n}\n\n/**\n * extract origin color\n * @param value - color value\n * @param [opt] - options\n * @returns origin color value\n */\nexport function extractOriginColor(\n  value: string,\n  opt: IOptions = {}\n): string | null {\n  const {\n    currentColor = '',\n    customProperty = {},\n    dimension = {},\n    format = ''\n  } = opt;\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n    if (!value) {\n      return null;\n    }\n    if (!REG_FN_REL_START.test(value)) {\n      return value;\n    }\n  } else {\n    return null;\n  }\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{preProcess:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as string | null;\n    }\n  }\n  if (/currentcolor/.test(value)) {\n    if (currentColor) {\n      value = value.replace(/currentcolor/g, currentColor);\n    } else {\n      if (cacheKey) {\n        cachedResults.set(cacheKey, null!);\n      }\n      return null;\n    }\n  }\n  let colorSpace = '';\n  if (REG_FN_REL_CAPT.test(value)) {\n    [, colorSpace = ''] = value.match(REG_FN_REL_CAPT) as RegExpExecArray;\n  }\n  opt.colorSpace = colorSpace;\n  if (REG_COLOR_CAPT.test(value)) {\n    const [, originColor = ''] = value.match(REG_COLOR_CAPT) as RegExpExecArray;\n    const [, restValue = ''] = value.split(originColor);\n    if (/^[a-z]+$/.test(originColor)) {\n      if (\n        !/^transparent$/.test(originColor) &&\n        !Object.prototype.hasOwnProperty.call(NAMED_COLORS, originColor)\n      ) {\n        if (cacheKey) {\n          cachedResults.set(cacheKey, null!);\n        }\n        return null;\n      }\n    } else if (format === VAL_SPEC) {\n      const resolvedOriginColor = resolve(originColor, opt);\n      if (isString(resolvedOriginColor)) {\n        value = value.replace(originColor, resolvedOriginColor);\n      }\n    }\n    if (format === VAL_SPEC) {\n      const tokens = tokenize({ css: restValue });\n      const channelValues = resolveColorChannels(tokens, opt) as\n        | string[]\n        | null;\n      if (!Array.isArray(channelValues)) {\n        if (cacheKey) {\n          cachedResults.set(cacheKey, null!);\n        }\n        return null;\n      }\n      let channelValue;\n      if (channelValues.length === 3) {\n        channelValue = ` ${channelValues.join(' ')})`;\n      } else {\n        const [v1 = '', v2 = '', v3 = '', v4 = ''] = channelValues;\n        channelValue = ` ${v1} ${v2} ${v3} / ${v4})`;\n      }\n      if (restValue !== channelValue) {\n        value = value.replace(restValue, channelValue);\n      }\n    }\n    // nested relative color\n  } else {\n    const [, restValue = ''] = value.split(REG_FN_REL_START);\n    const tokens = tokenize({ css: restValue });\n    const originColor: string[] = [];\n    let nest = 0;\n    while (tokens.length) {\n      const [type = '', tokenValue = ''] = tokens.shift() as [\n        TokenType,\n        string\n      ];\n      switch (type) {\n        case FUNC:\n        case PAREN_OPEN: {\n          originColor.push(tokenValue);\n          nest++;\n          break;\n        }\n        case PAREN_CLOSE: {\n          const lastValue = originColor[originColor.length - 1];\n          if (lastValue === ' ') {\n            originColor.splice(-1, 1, tokenValue);\n          } else if (isString(lastValue)) {\n            originColor.push(tokenValue);\n          }\n          nest--;\n          break;\n        }\n        case W_SPACE: {\n          const lastValue = originColor[originColor.length - 1];\n          if (\n            isString(lastValue) &&\n            !lastValue.endsWith('(') &&\n            lastValue !== ' '\n          ) {\n            originColor.push(tokenValue);\n          }\n          break;\n        }\n        default: {\n          if (type !== COMMENT && type !== EOF) {\n            originColor.push(tokenValue);\n          }\n        }\n      }\n      if (nest === 0) {\n        break;\n      }\n    }\n    const resolvedOriginColor = resolveRelativeColor(\n      originColor.join('').trim(),\n      opt\n    );\n    if (!resolvedOriginColor) {\n      if (cacheKey) {\n        cachedResults.set(cacheKey, null!);\n      }\n      return null;\n    }\n    const channelValues = resolveColorChannels(tokens, opt) as string[] | null;\n    if (!Array.isArray(channelValues)) {\n      if (cacheKey) {\n        cachedResults.set(cacheKey, null!);\n      }\n      return null;\n    }\n    let channelValue: string;\n    if (channelValues.length === 3) {\n      channelValue = ` ${channelValues.join(' ')})`;\n    } else {\n      const [v1 = '', v2 = '', v3 = '', v4 = ''] = channelValues;\n      channelValue = ` ${v1} ${v2} ${v3} / ${v4})`;\n    }\n    value = value.replace(restValue, `${resolvedOriginColor}${channelValue}`);\n  }\n  if (cacheKey) {\n    cachedResults.set(cacheKey, value);\n  }\n  return value;\n}\n\n/**\n * resolve relative color\n * @param value - relative color value\n * @param [opt] - options\n * @returns resolved value\n */\nexport function resolveRelativeColor(\n  value: string,\n  opt: IOptions = {}\n): string | null {\n  const { customProperty = {}, dimension = {}, format = '' } = opt;\n  if (isString(value)) {\n    if (REG_FN_VAR.test(value)) {\n      if (format === VAL_SPEC) {\n        return value;\n        // var() must be resolved before resolveRelativeColor()\n      } else {\n        throw new SyntaxError(`Unexpected token ${FN_VAR} found.`);\n      }\n    } else if (!REG_FN_REL.test(value)) {\n      return value;\n    }\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{relativeColor:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as string | null;\n    }\n  }\n  const originColor = extractOriginColor(value, opt);\n  if (originColor) {\n    value = originColor;\n  } else {\n    if (cacheKey) {\n      cachedResults.set(cacheKey, null!);\n    }\n    return null;\n  }\n  if (format === VAL_SPEC) {\n    if (value.startsWith('rgba(')) {\n      value = value.replace(/^rgba\\(/, 'rgb(');\n    } else if (value.startsWith('hsla(')) {\n      value = value.replace(/^hsla\\(/, 'hsl(');\n    }\n    return value;\n  }\n  const tokens = tokenize({ css: value });\n  const components = parseComponentValue(tokens) as ComponentValue;\n  const parsedComponents = colorParser(components);\n  if (!parsedComponents) {\n    if (cacheKey) {\n      cachedResults.set(cacheKey, null!);\n    }\n    return null;\n  }\n  const {\n    alpha: alphaComponent,\n    channels: channelsComponent,\n    colorNotation,\n    syntaxFlags\n  } = parsedComponents;\n  let alpha: number | string;\n  if (Number.isNaN(Number(alphaComponent))) {\n    if (syntaxFlags instanceof Set && syntaxFlags.has(KEY_NONE)) {\n      alpha = NONE;\n    } else {\n      alpha = 0;\n    }\n  } else {\n    alpha = roundToPrecision(Number(alphaComponent), OCT);\n  }\n  let v1: number | string;\n  let v2: number | string;\n  let v3: number | string;\n  [v1, v2, v3] = channelsComponent;\n  let resolvedValue;\n  if (REG_CS_CIE.test(colorNotation)) {\n    const hasNone = syntaxFlags instanceof Set && syntaxFlags.has(KEY_NONE);\n    if (Number.isNaN(v1)) {\n      if (hasNone) {\n        v1 = NONE;\n      } else {\n        v1 = 0;\n      }\n    } else {\n      v1 = roundToPrecision(v1, HEX);\n    }\n    if (Number.isNaN(v2)) {\n      if (hasNone) {\n        v2 = NONE;\n      } else {\n        v2 = 0;\n      }\n    } else {\n      v2 = roundToPrecision(v2, HEX);\n    }\n    if (Number.isNaN(v3)) {\n      if (hasNone) {\n        v3 = NONE;\n      } else {\n        v3 = 0;\n      }\n    } else {\n      v3 = roundToPrecision(v3, HEX);\n    }\n    if (alpha === 1) {\n      resolvedValue = `${colorNotation}(${v1} ${v2} ${v3})`;\n    } else {\n      resolvedValue = `${colorNotation}(${v1} ${v2} ${v3} / ${alpha})`;\n    }\n  } else if (REG_CS_HSL.test(colorNotation)) {\n    if (Number.isNaN(v1)) {\n      v1 = 0;\n    }\n    if (Number.isNaN(v2)) {\n      v2 = 0;\n    }\n    if (Number.isNaN(v3)) {\n      v3 = 0;\n    }\n    let [r, g, b] = colorToRgb(\n      `${colorNotation}(${v1} ${v2} ${v3} / ${alpha})`\n    ) as ColorChannels;\n    r = roundToPrecision(r / MAX_RGB, DEC);\n    g = roundToPrecision(g / MAX_RGB, DEC);\n    b = roundToPrecision(b / MAX_RGB, DEC);\n    if (alpha === 1) {\n      resolvedValue = `color(srgb ${r} ${g} ${b})`;\n    } else {\n      resolvedValue = `color(srgb ${r} ${g} ${b} / ${alpha})`;\n    }\n  } else {\n    const cs = colorNotation === 'rgb' ? 'srgb' : colorNotation;\n    const hasNone = syntaxFlags instanceof Set && syntaxFlags.has(KEY_NONE);\n    if (Number.isNaN(v1)) {\n      if (hasNone) {\n        v1 = NONE;\n      } else {\n        v1 = 0;\n      }\n    } else {\n      v1 = roundToPrecision(v1, DEC);\n    }\n    if (Number.isNaN(v2)) {\n      if (hasNone) {\n        v2 = NONE;\n      } else {\n        v2 = 0;\n      }\n    } else {\n      v2 = roundToPrecision(v2, DEC);\n    }\n    if (Number.isNaN(v3)) {\n      if (hasNone) {\n        v3 = NONE;\n      } else {\n        v3 = 0;\n      }\n    } else {\n      v3 = roundToPrecision(v3, DEC);\n    }\n    if (alpha === 1) {\n      resolvedValue = `color(${cs} ${v1} ${v2} ${v3})`;\n    } else {\n      resolvedValue = `color(${cs} ${v1} ${v2} ${v3} / ${alpha})`;\n    }\n  }\n  if (cacheKey) {\n    cachedResults.set(cacheKey, resolvedValue);\n  }\n  return resolvedValue;\n}\n","/**\n * resolve\n */\n\nimport { LRUCache } from 'lru-cache';\nimport {\n  convertRgbToHex,\n  resolveColorFunc,\n  resolveColorMix,\n  resolveColorValue\n} from './color';\nimport { isString } from './common';\nimport { cssCalc } from './css-calc';\nimport { cssVar } from './css-var';\nimport { resolveRelativeColor } from './relative-color';\nimport { valueToJsonString } from './util';\nimport type {\n  ComputedColorChannels,\n  IOptions,\n  SpecifiedColorChannels\n} from './typedef';\n\n/* constants */\nimport {\n  FN_COLOR,\n  FN_MIX,\n  SYN_FN_CALC,\n  SYN_FN_REL,\n  SYN_FN_VAR,\n  VAL_COMP,\n  VAL_SPEC\n} from './constant';\nconst RGB_TRANSPARENT = 'rgba(0, 0, 0, 0)';\n\n/* regexp */\nconst REG_FN_CALC = new RegExp(SYN_FN_CALC);\nconst REG_FN_REL = new RegExp(SYN_FN_REL);\nconst REG_FN_VAR = new RegExp(SYN_FN_VAR);\n\n/* cached results */\nexport const cachedResults = new LRUCache({\n  max: 4096\n});\n\n/**\n * resolve CSS color\n * @param color\n *   - color value\n *   - system colors are not supported\n * @param [opt] - options\n * @param [opt.currentColor]\n *   - color to use for `currentcolor` keyword\n *   - if omitted, it will be treated as a missing color\n *     i.e. `rgb(none none none / none)`\n * @param [opt.customProperty]\n *   - custom properties\n *   - pair of `--` prefixed property name and value,\n *     e.g. `customProperty: { '--some-color': '#0000ff' }`\n *   - and/or `callback` function to get the value of the custom property,\n *     e.g. `customProperty: { callback: someDeclaration.getPropertyValue }`\n * @param [opt.dimension]\n *   - dimension, convert relative length to pixels\n *   - pair of unit and it's value as a number in pixels,\n *     e.g. `dimension: { em: 12, rem: 16, vw: 10.26 }`\n *   - and/or `callback` function to get the value as a number in pixels,\n *     e.g. `dimension: { callback: convertUnitToPixel }`\n * @param [opt.format]\n *   - output format, one of below\n *   - `computedValue` (default), [computed value][139] of the color\n *   - `specifiedValue`, [specified value][140] of the color\n *   - `hex`, hex color notation, i.e. `rrggbb`\n *   - `hexAlpha`, hex color notation with alpha channel, i.e. `#rrggbbaa`\n * @returns\n *   - one of rgba?(), #rrggbb(aa)?, color-name, '(empty-string)',\n *     color(color-space r g b / alpha), color(color-space x y z / alpha),\n *     lab(l a b / alpha), lch(l c h / alpha), oklab(l a b / alpha),\n *     oklch(l c h / alpha), null\n *   - in `computedValue`, values are numbers, however `rgb()` values are\n *     integers\n *   - in `specifiedValue`, returns `empty string` for unknown and/or invalid\n *     color\n *   - in `hex`, returns `null` for `transparent`, and also returns `null` if\n *     any of `r`, `g`, `b`, `alpha` is not a number\n *   - in `hexAlpha`, returns `#00000000` for `transparent`,\n *     however returns `null` if any of `r`, `g`, `b`, `alpha` is not a number\n */\nexport const resolve = (\n  value: string,\n  opt: IOptions = {}\n): string | [unknown, string | null] | null => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const {\n    currentColor = '',\n    customProperty = {},\n    dimension = {},\n    format = VAL_COMP\n  } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{resolve:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as\n        | string\n        | [unknown, string | null]\n        | null;\n    }\n  }\n  if (REG_FN_VAR.test(value)) {\n    if (format === VAL_SPEC) {\n      if (cacheKey) {\n        cachedResults.set(cacheKey, value);\n      }\n      return value;\n    }\n    const resolvedValue = cssVar(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue;\n    } else {\n      switch (format) {\n        case 'hex':\n        case 'hexAlpha': {\n          if (cacheKey) {\n            cachedResults.set(cacheKey, null!);\n          }\n          return null;\n        }\n        default: {\n          const res = RGB_TRANSPARENT;\n          if (cacheKey) {\n            cachedResults.set(cacheKey, res);\n          }\n          return res;\n        }\n      }\n    }\n  }\n  if (opt.format !== format) {\n    opt.format = format;\n  }\n  value = value.toLowerCase();\n  if (REG_FN_REL.test(value)) {\n    const resolvedValue = resolveRelativeColor(value, opt);\n    if (format === VAL_COMP) {\n      let res = '';\n      if (resolvedValue) {\n        res = resolvedValue;\n      } else {\n        res = RGB_TRANSPARENT;\n      }\n      if (cacheKey) {\n        cachedResults.set(cacheKey, res);\n      }\n      return res;\n    }\n    if (format === VAL_SPEC) {\n      let res = '';\n      if (resolvedValue) {\n        res = resolvedValue;\n      } else {\n        res = '';\n      }\n      if (cacheKey) {\n        cachedResults.set(cacheKey, res);\n      }\n      return res;\n    }\n    if (resolvedValue) {\n      value = resolvedValue;\n    } else {\n      value = '';\n    }\n  }\n  if (REG_FN_CALC.test(value)) {\n    value = cssCalc(value, opt);\n  }\n  let cs = '';\n  let r = NaN;\n  let g = NaN;\n  let b = NaN;\n  let alpha = NaN;\n  if (value === 'transparent') {\n    switch (format) {\n      case VAL_SPEC: {\n        if (cacheKey) {\n          cachedResults.set(cacheKey, value);\n        }\n        return value;\n      }\n      case 'hex': {\n        if (cacheKey) {\n          cachedResults.set(cacheKey, null!);\n        }\n        return null;\n      }\n      case 'hexAlpha': {\n        const res = '#00000000';\n        if (cacheKey) {\n          cachedResults.set(cacheKey, res);\n        }\n        return res;\n      }\n      case VAL_COMP:\n      default: {\n        const res = RGB_TRANSPARENT;\n        if (cacheKey) {\n          cachedResults.set(cacheKey, res);\n        }\n        return res;\n      }\n    }\n  } else if (value === 'currentcolor') {\n    if (format === VAL_SPEC) {\n      if (cacheKey) {\n        cachedResults.set(cacheKey, value);\n      }\n      return value;\n    }\n    if (currentColor) {\n      if (currentColor.startsWith(FN_MIX)) {\n        [cs, r, g, b, alpha] = resolveColorMix(\n          currentColor,\n          opt\n        ) as ComputedColorChannels;\n      } else if (currentColor.startsWith(FN_COLOR)) {\n        [cs, r, g, b, alpha] = resolveColorFunc(\n          currentColor,\n          opt\n        ) as ComputedColorChannels;\n      } else {\n        [cs, r, g, b, alpha] = resolveColorValue(\n          currentColor,\n          opt\n        ) as ComputedColorChannels;\n      }\n    } else if (format === VAL_COMP) {\n      const res = RGB_TRANSPARENT;\n      if (cacheKey) {\n        cachedResults.set(cacheKey, res);\n      }\n      return res;\n    }\n  } else if (format === VAL_SPEC) {\n    if (value.startsWith(FN_MIX)) {\n      const res = resolveColorMix(value, opt) as string;\n      if (cacheKey) {\n        cachedResults.set(cacheKey, res);\n      }\n      return res;\n    } else if (value.startsWith(FN_COLOR)) {\n      const [scs, rr, gg, bb, aa] = resolveColorFunc(\n        value,\n        opt\n      ) as SpecifiedColorChannels;\n      let res = '';\n      if (aa === 1) {\n        res = `color(${scs} ${rr} ${gg} ${bb})`;\n      } else {\n        res = `color(${scs} ${rr} ${gg} ${bb} / ${aa})`;\n      }\n      if (cacheKey) {\n        cachedResults.set(cacheKey, res);\n      }\n      return res;\n    } else {\n      const rgb = resolveColorValue(value, opt);\n      if (!rgb) {\n        const res = '';\n        if (cacheKey) {\n          cachedResults.set(cacheKey, res);\n        }\n        return res;\n      }\n      const [scs, rr, gg, bb, aa] = rgb as SpecifiedColorChannels;\n      let res = '';\n      if (scs === 'rgb') {\n        if (aa === 1) {\n          res = `${scs}(${rr}, ${gg}, ${bb})`;\n        } else {\n          res = `${scs}a(${rr}, ${gg}, ${bb}, ${aa})`;\n        }\n      } else if (aa === 1) {\n        res = `${scs}(${rr} ${gg} ${bb})`;\n      } else {\n        res = `${scs}(${rr} ${gg} ${bb} / ${aa})`;\n      }\n      if (cacheKey) {\n        cachedResults.set(cacheKey, res);\n      }\n      return res;\n    }\n  } else if (/currentcolor/.test(value)) {\n    if (currentColor) {\n      value = value.replace(/currentcolor/g, currentColor);\n    }\n    if (/transparent/.test(value)) {\n      value = value.replace(/transparent/g, RGB_TRANSPARENT);\n    }\n    if (value.startsWith(FN_MIX)) {\n      [cs, r, g, b, alpha] = resolveColorMix(\n        value,\n        opt\n      ) as ComputedColorChannels;\n    }\n  } else if (/transparent/.test(value)) {\n    value = value.replace(/transparent/g, RGB_TRANSPARENT);\n    if (value.startsWith(FN_MIX)) {\n      [cs, r, g, b, alpha] = resolveColorMix(\n        value,\n        opt\n      ) as ComputedColorChannels;\n    }\n  } else if (value.startsWith(FN_MIX)) {\n    [cs, r, g, b, alpha] = resolveColorMix(value, opt) as ComputedColorChannels;\n  } else if (value.startsWith(FN_COLOR)) {\n    [cs, r, g, b, alpha] = resolveColorFunc(\n      value,\n      opt\n    ) as ComputedColorChannels;\n  } else if (value) {\n    [cs, r, g, b, alpha] = resolveColorValue(\n      value,\n      opt\n    ) as ComputedColorChannels;\n  }\n  let res = '';\n  switch (format) {\n    case 'hex': {\n      if (\n        Number.isNaN(r) ||\n        Number.isNaN(g) ||\n        Number.isNaN(b) ||\n        Number.isNaN(alpha) ||\n        alpha === 0\n      ) {\n        if (cacheKey) {\n          cachedResults.set(cacheKey, null!);\n        }\n        return null;\n      }\n      res = convertRgbToHex([r, g, b, 1]);\n      break;\n    }\n    case 'hexAlpha': {\n      if (\n        Number.isNaN(r) ||\n        Number.isNaN(g) ||\n        Number.isNaN(b) ||\n        Number.isNaN(alpha)\n      ) {\n        if (cacheKey) {\n          cachedResults.set(cacheKey, null!);\n        }\n        return null;\n      }\n      res = convertRgbToHex([r, g, b, alpha]);\n      break;\n    }\n    case VAL_COMP:\n    default: {\n      switch (cs) {\n        case 'rgb': {\n          if (alpha === 1) {\n            res = `${cs}(${r}, ${g}, ${b})`;\n          } else {\n            res = `${cs}a(${r}, ${g}, ${b}, ${alpha})`;\n          }\n          break;\n        }\n        case 'lab':\n        case 'lch':\n        case 'oklab':\n        case 'oklch': {\n          if (alpha === 1) {\n            res = `${cs}(${r} ${g} ${b})`;\n          } else {\n            res = `${cs}(${r} ${g} ${b} / ${alpha})`;\n          }\n          break;\n        }\n        // color()\n        default: {\n          if (alpha === 1) {\n            res = `color(${cs} ${r} ${g} ${b})`;\n          } else {\n            res = `color(${cs} ${r} ${g} ${b} / ${alpha})`;\n          }\n        }\n      }\n    }\n  }\n  if (cacheKey) {\n    cachedResults.set(cacheKey, res);\n  }\n  return res;\n};\n","/**\n * util\n */\n\nimport { isString } from './common';\nimport { resolve } from './resolve';\n\n/* constants */\nimport { NAMED_COLORS } from './color';\nimport { SYN_COLOR_TYPE, SYN_MIX, VAL_SPEC } from './constant';\nconst DEC = 10;\nconst HEX = 16;\nconst DEG = 360;\nconst DEG_HALF = 180;\n\n/* regexp */\nconst REG_COLOR = new RegExp(`^(?:${SYN_COLOR_TYPE})$`);\nconst REG_MIX = new RegExp(`${SYN_MIX}`);\n\n/**\n * is color\n * @param value\n * @returns result\n */\nexport const isColor = (value: unknown): boolean => {\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n    if (value && isString(value)) {\n      if (/^[a-z]+$/.test(value)) {\n        if (\n          /^(?:currentcolor|transparent)$/.test(value) ||\n          Object.prototype.hasOwnProperty.call(NAMED_COLORS, value)\n        ) {\n          return true;\n        }\n      } else if (REG_COLOR.test(value) || REG_MIX.test(value)) {\n        return true;\n      } else {\n        const resolvedValue = resolve(value, {\n          format: VAL_SPEC\n        });\n        if (resolvedValue) {\n          return true;\n        }\n        return false;\n      }\n    }\n  }\n  return false;\n};\n\n/**\n * value to JSON string\n * @param value\n * @param [func] - stringify function\n * @returns stringified value in JSON notation\n */\nexport const valueToJsonString = (\n  value: unknown,\n  func: boolean = false\n): string => {\n  if (typeof value === 'undefined') {\n    return '';\n  }\n  const res = JSON.stringify(value, (_key, val) => {\n    let replacedValue;\n    if (typeof val === 'undefined') {\n      replacedValue = null;\n    } else if (typeof val === 'function') {\n      if (func) {\n        replacedValue = val.toString().replace(/\\s/g, '').substring(0, HEX);\n      } else {\n        replacedValue = val.name;\n      }\n    } else if (val instanceof Map || val instanceof Set) {\n      replacedValue = [...val];\n    } else if (typeof val === 'bigint') {\n      replacedValue = val.toString();\n    } else {\n      replacedValue = val;\n    }\n    return replacedValue;\n  });\n  return res;\n};\n\n/**\n * round to specified precision\n * @param value\n * @param bit - minimum bits\n * @returns rounded value\n */\nexport const roundToPrecision = (value: number, bit: number = 0): number => {\n  if (!Number.isFinite(value)) {\n    throw new TypeError(`${value} is not a finite number.`);\n  }\n  if (!Number.isFinite(bit)) {\n    throw new TypeError(`${bit} is not a finite number.`);\n  } else if (bit < 0 || bit > HEX) {\n    throw new RangeError(`${bit} is not between 0 and ${HEX}.`);\n  }\n  if (bit === 0) {\n    return Math.round(value);\n  }\n  let val;\n  if (bit === HEX) {\n    val = value.toPrecision(6);\n  } else if (bit < DEC) {\n    val = value.toPrecision(4);\n  } else {\n    val = value.toPrecision(5);\n  }\n  return parseFloat(val);\n};\n\n/**\n * interpolate hue\n * @param hueA - hue value\n * @param hueB - hue value\n * @param arc - shorter | longer | increasing | decreasing\n * @returns result - [hueA, hueB]\n */\nexport const interpolateHue = (\n  hueA: number,\n  hueB: number,\n  arc: string = 'shorter'\n): [number, number] => {\n  if (!Number.isFinite(hueA)) {\n    throw new TypeError(`${hueA} is not a finite number.`);\n  }\n  if (!Number.isFinite(hueB)) {\n    throw new TypeError(`${hueB} is not a finite number.`);\n  }\n  switch (arc) {\n    case 'decreasing': {\n      if (hueB > hueA) {\n        hueA += DEG;\n      }\n      break;\n    }\n    case 'increasing': {\n      if (hueB < hueA) {\n        hueB += DEG;\n      }\n      break;\n    }\n    case 'longer': {\n      if (hueB > hueA && hueB < hueA + DEG_HALF) {\n        hueA += DEG;\n      } else if (hueB > hueA + DEG_HALF * -1 && hueB <= hueA) {\n        hueB += DEG;\n      }\n      break;\n    }\n    case 'shorter':\n    default: {\n      if (hueB > hueA + DEG_HALF) {\n        hueA += DEG;\n      } else if (hueB < hueA + DEG_HALF * -1) {\n        hueB += DEG;\n      }\n    }\n  }\n  return [hueA, hueB];\n};\n","/**\n * color\n *\n * Ref: CSS Color Module Level 4\n *      Sample code for Color Conversions\n *      https://w3c.github.io/csswg-drafts/css-color-4/#color-conversion-code\n */\n\nimport { isString } from './common';\nimport { interpolateHue, roundToPrecision } from './util';\nimport type {\n  ComputedColorChannels,\n  ColorChannels,\n  IOptions,\n  SpecifiedColorChannels\n} from './typedef';\n\n/* constants */\nimport {\n  ANGLE,\n  CS_HUE_CAPT,\n  CS_MIX,\n  CS_RGB,\n  CS_XYZ,\n  FN_COLOR,\n  FN_MIX,\n  NONE,\n  NUM,\n  PCT,\n  SYN_COLOR_TYPE,\n  SYN_FN_COLOR,\n  SYN_HSL,\n  SYN_HSL_LV3,\n  SYN_LCH,\n  SYN_MIX,\n  SYN_MIX_CAPT,\n  SYN_MIX_PART,\n  SYN_MOD,\n  SYN_RGB_LV3,\n  VAL_COMP,\n  VAL_MIX,\n  VAL_SPEC\n} from './constant';\n\n/* numeric constants */\nconst PPTH = 0.001;\nconst HALF = 0.5;\nconst DUO = 2;\nconst TRIA = 3;\nconst QUAD = 4;\nconst OCT = 8;\nconst DEC = 10;\nconst DOZ = 12;\nconst HEX = 16;\nconst SEXA = 60;\nconst DEG_HALF = 180;\nconst DEG = 360;\nconst MAX_PCT = 100;\nconst MAX_RGB = 255;\nconst POW_SQR = 2;\nconst POW_CUBE = 3;\nconst POW_LINEAR = 2.4;\nconst LINEAR_COEF = 12.92;\nconst LINEAR_OFFSET = 0.055;\nconst LAB_L = 116;\nconst LAB_A = 500;\nconst LAB_B = 200;\nconst LAB_EPSILON = 216 / 24389;\nconst LAB_KAPPA = 24389 / 27;\n\n/* type definitions */\n/**\n * @type NumStrColorChannels - string or numeric color channels\n */\ntype NumStrColorChannels = [\n  x: number | string,\n  y: number | string,\n  z: number | string,\n  alpha: number | string\n];\n\n/**\n * @type TriColorChannels - color channels without alpha\n */\ntype TriColorChannels = [x: number, y: number, z: number];\n\n/**\n * @type ColorMatrix - color matrix\n */\ntype ColorMatrix = [\n  r1: TriColorChannels,\n  r2: TriColorChannels,\n  r3: TriColorChannels\n];\n\n/* white point */\nconst D50: TriColorChannels = [\n  0.3457 / 0.3585,\n  1.0,\n  (1.0 - 0.3457 - 0.3585) / 0.3585\n];\nconst MATRIX_D50_TO_D65: ColorMatrix = [\n  [0.955473421488075, -0.02309845494876471, 0.06325924320057072],\n  [-0.0283697093338637, 1.0099953980813041, 0.021041441191917323],\n  [0.012314014864481998, -0.020507649298898964, 1.330365926242124]\n];\nconst MATRIX_D65_TO_D50: ColorMatrix = [\n  [1.0479297925449969, 0.022946870601609652, -0.05019226628920524],\n  [0.02962780877005599, 0.9904344267538799, -0.017073799063418826],\n  [-0.009243040646204504, 0.015055191490298152, 0.7518742814281371]\n];\n\n/* color space */\nconst MATRIX_L_RGB_TO_XYZ: ColorMatrix = [\n  [506752 / 1228815, 87881 / 245763, 12673 / 70218],\n  [87098 / 409605, 175762 / 245763, 12673 / 175545],\n  [7918 / 409605, 87881 / 737289, 1001167 / 1053270]\n];\nconst MATRIX_XYZ_TO_L_RGB: ColorMatrix = [\n  [12831 / 3959, -329 / 214, -1974 / 3959],\n  [-851781 / 878810, 1648619 / 878810, 36519 / 878810],\n  [705 / 12673, -2585 / 12673, 705 / 667]\n];\nconst MATRIX_XYZ_TO_LMS: ColorMatrix = [\n  [0.819022437996703, 0.3619062600528904, -0.1288737815209879],\n  [0.0329836539323885, 0.9292868615863434, 0.0361446663506424],\n  [0.0481771893596242, 0.2642395317527308, 0.6335478284694309]\n];\nconst MATRIX_LMS_TO_XYZ: ColorMatrix = [\n  [1.2268798758459243, -0.5578149944602171, 0.2813910456659647],\n  [-0.0405757452148008, 1.112286803280317, -0.0717110580655164],\n  [-0.0763729366746601, -0.4214933324022432, 1.5869240198367816]\n];\nconst MATRIX_OKLAB_TO_LMS: ColorMatrix = [\n  [1.0, 0.3963377773761749, 0.2158037573099136],\n  [1.0, -0.1055613458156586, -0.0638541728258133],\n  [1.0, -0.0894841775298119, -1.2914855480194092]\n];\nconst MATRIX_LMS_TO_OKLAB: ColorMatrix = [\n  [0.210454268309314, 0.7936177747023054, -0.0040720430116193],\n  [1.9779985324311684, -2.4285922420485799, 0.450593709617411],\n  [0.0259040424655478, 0.7827717124575296, -0.8086757549230774]\n];\nconst MATRIX_P3_TO_XYZ: ColorMatrix = [\n  [608311 / 1250200, 189793 / 714400, 198249 / 1000160],\n  [35783 / 156275, 247089 / 357200, 198249 / 2500400],\n  [0 / 1, 32229 / 714400, 5220557 / 5000800]\n];\nconst MATRIX_REC2020_TO_XYZ: ColorMatrix = [\n  [63426534 / 99577255, 20160776 / 139408157, 47086771 / 278816314],\n  [26158966 / 99577255, 472592308 / 697040785, 8267143 / 139408157],\n  [0 / 1, 19567812 / 697040785, 295819943 / 278816314]\n];\nconst MATRIX_A98_TO_XYZ: ColorMatrix = [\n  [573536 / 994567, 263643 / 1420810, 187206 / 994567],\n  [591459 / 1989134, 6239551 / 9945670, 374412 / 4972835],\n  [53769 / 1989134, 351524 / 4972835, 4929758 / 4972835]\n];\nconst MATRIX_PROPHOTO_TO_XYZ_D50: ColorMatrix = [\n  [0.7977666449006423, 0.13518129740053308, 0.0313477341283922],\n  [0.2880748288194013, 0.711835234241873, 0.00008993693872564],\n  [0.0, 0.0, 0.8251046025104602]\n];\n\n/* regexp */\nconst REG_COLOR = new RegExp(`^(?:${SYN_COLOR_TYPE})$`);\nconst REG_CS_HUE = new RegExp(`^${CS_HUE_CAPT}$`);\nconst REG_CS_XYZ = /^xyz(?:-d(?:50|65))?$/;\nconst REG_CURRENT = /^currentColor$/i;\nconst REG_FN_COLOR = new RegExp(`^color\\\\(\\\\s*(${SYN_FN_COLOR})\\\\s*\\\\)$`);\nconst REG_HSL = new RegExp(`^hsla?\\\\(\\\\s*(${SYN_HSL}|${SYN_HSL_LV3})\\\\s*\\\\)$`);\nconst REG_HWB = new RegExp(`^hwb\\\\(\\\\s*(${SYN_HSL})\\\\s*\\\\)$`);\nconst REG_LAB = new RegExp(`^lab\\\\(\\\\s*(${SYN_MOD})\\\\s*\\\\)$`);\nconst REG_LCH = new RegExp(`^lch\\\\(\\\\s*(${SYN_LCH})\\\\s*\\\\)$`);\nconst REG_MIX = new RegExp(`^${SYN_MIX}$`);\nconst REG_MIX_CAPT = new RegExp(`^${SYN_MIX_CAPT}$`);\nconst REG_MIX_NEST = new RegExp(`${SYN_MIX}`, 'g');\nconst REG_OKLAB = new RegExp(`^oklab\\\\(\\\\s*(${SYN_MOD})\\\\s*\\\\)$`);\nconst REG_OKLCH = new RegExp(`^oklch\\\\(\\\\s*(${SYN_LCH})\\\\s*\\\\)$`);\nconst REG_SPEC = /^(?:specifi|comput)edValue$/;\n\n/* named colors */\nexport const NAMED_COLORS = {\n  aliceblue: [0xf0, 0xf8, 0xff],\n  antiquewhite: [0xfa, 0xeb, 0xd7],\n  aqua: [0x00, 0xff, 0xff],\n  aquamarine: [0x7f, 0xff, 0xd4],\n  azure: [0xf0, 0xff, 0xff],\n  beige: [0xf5, 0xf5, 0xdc],\n  bisque: [0xff, 0xe4, 0xc4],\n  black: [0x00, 0x00, 0x00],\n  blanchedalmond: [0xff, 0xeb, 0xcd],\n  blue: [0x00, 0x00, 0xff],\n  blueviolet: [0x8a, 0x2b, 0xe2],\n  brown: [0xa5, 0x2a, 0x2a],\n  burlywood: [0xde, 0xb8, 0x87],\n  cadetblue: [0x5f, 0x9e, 0xa0],\n  chartreuse: [0x7f, 0xff, 0x00],\n  chocolate: [0xd2, 0x69, 0x1e],\n  coral: [0xff, 0x7f, 0x50],\n  cornflowerblue: [0x64, 0x95, 0xed],\n  cornsilk: [0xff, 0xf8, 0xdc],\n  crimson: [0xdc, 0x14, 0x3c],\n  cyan: [0x00, 0xff, 0xff],\n  darkblue: [0x00, 0x00, 0x8b],\n  darkcyan: [0x00, 0x8b, 0x8b],\n  darkgoldenrod: [0xb8, 0x86, 0x0b],\n  darkgray: [0xa9, 0xa9, 0xa9],\n  darkgreen: [0x00, 0x64, 0x00],\n  darkgrey: [0xa9, 0xa9, 0xa9],\n  darkkhaki: [0xbd, 0xb7, 0x6b],\n  darkmagenta: [0x8b, 0x00, 0x8b],\n  darkolivegreen: [0x55, 0x6b, 0x2f],\n  darkorange: [0xff, 0x8c, 0x00],\n  darkorchid: [0x99, 0x32, 0xcc],\n  darkred: [0x8b, 0x00, 0x00],\n  darksalmon: [0xe9, 0x96, 0x7a],\n  darkseagreen: [0x8f, 0xbc, 0x8f],\n  darkslateblue: [0x48, 0x3d, 0x8b],\n  darkslategray: [0x2f, 0x4f, 0x4f],\n  darkslategrey: [0x2f, 0x4f, 0x4f],\n  darkturquoise: [0x00, 0xce, 0xd1],\n  darkviolet: [0x94, 0x00, 0xd3],\n  deeppink: [0xff, 0x14, 0x93],\n  deepskyblue: [0x00, 0xbf, 0xff],\n  dimgray: [0x69, 0x69, 0x69],\n  dimgrey: [0x69, 0x69, 0x69],\n  dodgerblue: [0x1e, 0x90, 0xff],\n  firebrick: [0xb2, 0x22, 0x22],\n  floralwhite: [0xff, 0xfa, 0xf0],\n  forestgreen: [0x22, 0x8b, 0x22],\n  fuchsia: [0xff, 0x00, 0xff],\n  gainsboro: [0xdc, 0xdc, 0xdc],\n  ghostwhite: [0xf8, 0xf8, 0xff],\n  gold: [0xff, 0xd7, 0x00],\n  goldenrod: [0xda, 0xa5, 0x20],\n  gray: [0x80, 0x80, 0x80],\n  green: [0x00, 0x80, 0x00],\n  greenyellow: [0xad, 0xff, 0x2f],\n  grey: [0x80, 0x80, 0x80],\n  honeydew: [0xf0, 0xff, 0xf0],\n  hotpink: [0xff, 0x69, 0xb4],\n  indianred: [0xcd, 0x5c, 0x5c],\n  indigo: [0x4b, 0x00, 0x82],\n  ivory: [0xff, 0xff, 0xf0],\n  khaki: [0xf0, 0xe6, 0x8c],\n  lavender: [0xe6, 0xe6, 0xfa],\n  lavenderblush: [0xff, 0xf0, 0xf5],\n  lawngreen: [0x7c, 0xfc, 0x00],\n  lemonchiffon: [0xff, 0xfa, 0xcd],\n  lightblue: [0xad, 0xd8, 0xe6],\n  lightcoral: [0xf0, 0x80, 0x80],\n  lightcyan: [0xe0, 0xff, 0xff],\n  lightgoldenrodyellow: [0xfa, 0xfa, 0xd2],\n  lightgray: [0xd3, 0xd3, 0xd3],\n  lightgreen: [0x90, 0xee, 0x90],\n  lightgrey: [0xd3, 0xd3, 0xd3],\n  lightpink: [0xff, 0xb6, 0xc1],\n  lightsalmon: [0xff, 0xa0, 0x7a],\n  lightseagreen: [0x20, 0xb2, 0xaa],\n  lightskyblue: [0x87, 0xce, 0xfa],\n  lightslategray: [0x77, 0x88, 0x99],\n  lightslategrey: [0x77, 0x88, 0x99],\n  lightsteelblue: [0xb0, 0xc4, 0xde],\n  lightyellow: [0xff, 0xff, 0xe0],\n  lime: [0x00, 0xff, 0x00],\n  limegreen: [0x32, 0xcd, 0x32],\n  linen: [0xfa, 0xf0, 0xe6],\n  magenta: [0xff, 0x00, 0xff],\n  maroon: [0x80, 0x00, 0x00],\n  mediumaquamarine: [0x66, 0xcd, 0xaa],\n  mediumblue: [0x00, 0x00, 0xcd],\n  mediumorchid: [0xba, 0x55, 0xd3],\n  mediumpurple: [0x93, 0x70, 0xdb],\n  mediumseagreen: [0x3c, 0xb3, 0x71],\n  mediumslateblue: [0x7b, 0x68, 0xee],\n  mediumspringgreen: [0x00, 0xfa, 0x9a],\n  mediumturquoise: [0x48, 0xd1, 0xcc],\n  mediumvioletred: [0xc7, 0x15, 0x85],\n  midnightblue: [0x19, 0x19, 0x70],\n  mintcream: [0xf5, 0xff, 0xfa],\n  mistyrose: [0xff, 0xe4, 0xe1],\n  moccasin: [0xff, 0xe4, 0xb5],\n  navajowhite: [0xff, 0xde, 0xad],\n  navy: [0x00, 0x00, 0x80],\n  oldlace: [0xfd, 0xf5, 0xe6],\n  olive: [0x80, 0x80, 0x00],\n  olivedrab: [0x6b, 0x8e, 0x23],\n  orange: [0xff, 0xa5, 0x00],\n  orangered: [0xff, 0x45, 0x00],\n  orchid: [0xda, 0x70, 0xd6],\n  palegoldenrod: [0xee, 0xe8, 0xaa],\n  palegreen: [0x98, 0xfb, 0x98],\n  paleturquoise: [0xaf, 0xee, 0xee],\n  palevioletred: [0xdb, 0x70, 0x93],\n  papayawhip: [0xff, 0xef, 0xd5],\n  peachpuff: [0xff, 0xda, 0xb9],\n  peru: [0xcd, 0x85, 0x3f],\n  pink: [0xff, 0xc0, 0xcb],\n  plum: [0xdd, 0xa0, 0xdd],\n  powderblue: [0xb0, 0xe0, 0xe6],\n  purple: [0x80, 0x00, 0x80],\n  rebeccapurple: [0x66, 0x33, 0x99],\n  red: [0xff, 0x00, 0x00],\n  rosybrown: [0xbc, 0x8f, 0x8f],\n  royalblue: [0x41, 0x69, 0xe1],\n  saddlebrown: [0x8b, 0x45, 0x13],\n  salmon: [0xfa, 0x80, 0x72],\n  sandybrown: [0xf4, 0xa4, 0x60],\n  seagreen: [0x2e, 0x8b, 0x57],\n  seashell: [0xff, 0xf5, 0xee],\n  sienna: [0xa0, 0x52, 0x2d],\n  silver: [0xc0, 0xc0, 0xc0],\n  skyblue: [0x87, 0xce, 0xeb],\n  slateblue: [0x6a, 0x5a, 0xcd],\n  slategray: [0x70, 0x80, 0x90],\n  slategrey: [0x70, 0x80, 0x90],\n  snow: [0xff, 0xfa, 0xfa],\n  springgreen: [0x00, 0xff, 0x7f],\n  steelblue: [0x46, 0x82, 0xb4],\n  tan: [0xd2, 0xb4, 0x8c],\n  teal: [0x00, 0x80, 0x80],\n  thistle: [0xd8, 0xbf, 0xd8],\n  tomato: [0xff, 0x63, 0x47],\n  turquoise: [0x40, 0xe0, 0xd0],\n  violet: [0xee, 0x82, 0xee],\n  wheat: [0xf5, 0xde, 0xb3],\n  white: [0xff, 0xff, 0xff],\n  whitesmoke: [0xf5, 0xf5, 0xf5],\n  yellow: [0xff, 0xff, 0x00],\n  yellowgreen: [0x9a, 0xcd, 0x32]\n} as const;\n\n/**\n * validate color components\n * @param arr - color components\n * @param [opt] - options\n * @param [opt.alpha] - alpha channel\n * @param [opt.minLength] - min length\n * @param [opt.maxLength] - max length\n * @param [opt.minRange] - min range\n * @param [opt.maxRange] - max range\n * @param [opt.validateRange] - validate range\n * @returns result - validated color components\n */\nexport const validateColorComponents = (\n  arr: ColorChannels | TriColorChannels,\n  opt: {\n    alpha?: boolean;\n    minLength?: number;\n    maxLength?: number;\n    minRange?: number;\n    maxRange?: number;\n    validateRange?: boolean;\n  } = {}\n): ColorChannels | TriColorChannels => {\n  if (!Array.isArray(arr)) {\n    throw new TypeError(`${arr} is not an array.`);\n  }\n  const {\n    alpha = false,\n    minLength = TRIA,\n    maxLength = QUAD,\n    minRange = 0,\n    maxRange = 1,\n    validateRange = true\n  } = opt;\n  if (!Number.isFinite(minLength)) {\n    throw new TypeError(`${minLength} is not a number.`);\n  }\n  if (!Number.isFinite(maxLength)) {\n    throw new TypeError(`${maxLength} is not a number.`);\n  }\n  if (!Number.isFinite(minRange)) {\n    throw new TypeError(`${minRange} is not a number.`);\n  }\n  if (!Number.isFinite(maxRange)) {\n    throw new TypeError(`${maxRange} is not a number.`);\n  }\n  const l = arr.length;\n  if (l < minLength || l > maxLength) {\n    throw new Error(`Unexpected array length ${l}.`);\n  }\n  let i = 0;\n  while (i < l) {\n    const v = arr[i] as number;\n    if (!Number.isFinite(v)) {\n      throw new TypeError(`${v} is not a number.`);\n    } else if (i < TRIA && validateRange && (v < minRange || v > maxRange)) {\n      throw new RangeError(`${v} is not between ${minRange} and ${maxRange}.`);\n    } else if (i === TRIA && (v < 0 || v > 1)) {\n      throw new RangeError(`${v} is not between 0 and 1.`);\n    }\n    i++;\n  }\n  if (alpha && l === TRIA) {\n    arr.push(1);\n  }\n  return arr;\n};\n\n/**\n * transform matrix\n * @param mtx - 3 * 3 matrix\n * @param vct - vector\n * @param [skip] - skip validate\n * @returns TriColorChannels - [p1, p2, p3]\n */\nexport const transformMatrix = (\n  mtx: ColorMatrix,\n  vct: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  if (!Array.isArray(mtx)) {\n    throw new TypeError(`${mtx} is not an array.`);\n  } else if (mtx.length !== TRIA) {\n    throw new Error(`Unexpected array length ${mtx.length}.`);\n  } else if (!skip) {\n    for (let i of mtx) {\n      i = validateColorComponents(i as TriColorChannels, {\n        maxLength: TRIA,\n        validateRange: false\n      }) as TriColorChannels;\n    }\n  }\n  const [[r1c1, r1c2, r1c3], [r2c1, r2c2, r2c3], [r3c1, r3c2, r3c3]] = mtx;\n  let v1, v2, v3;\n  if (skip) {\n    [v1, v2, v3] = vct;\n  } else {\n    [v1, v2, v3] = validateColorComponents(vct, {\n      maxLength: TRIA,\n      validateRange: false\n    });\n  }\n  const p1 = r1c1 * v1 + r1c2 * v2 + r1c3 * v3;\n  const p2 = r2c1 * v1 + r2c2 * v2 + r2c3 * v3;\n  const p3 = r3c1 * v1 + r3c2 * v2 + r3c3 * v3;\n  return [p1, p2, p3];\n};\n\n/**\n * normalize color components\n * @param colorA - color components [v1, v2, v3, v4]\n * @param colorB - color components [v1, v2, v3, v4]\n * @param [skip] - skip validate\n * @returns result - [colorA, colorB]\n */\nexport const normalizeColorComponents = (\n  colorA: [number | string, number | string, number | string, number | string],\n  colorB: [number | string, number | string, number | string, number | string],\n  skip: boolean = false\n): [ColorChannels, ColorChannels] => {\n  if (!Array.isArray(colorA)) {\n    throw new TypeError(`${colorA} is not an array.`);\n  } else if (colorA.length !== QUAD) {\n    throw new Error(`Unexpected array length ${colorA.length}.`);\n  }\n  if (!Array.isArray(colorB)) {\n    throw new TypeError(`${colorB} is not an array.`);\n  } else if (colorB.length !== QUAD) {\n    throw new Error(`Unexpected array length ${colorB.length}.`);\n  }\n  let i = 0;\n  while (i < QUAD) {\n    if (colorA[i] === NONE && colorB[i] === NONE) {\n      colorA[i] = 0;\n      colorB[i] = 0;\n    } else if (colorA[i] === NONE) {\n      colorA[i] = colorB[i] as number;\n    } else if (colorB[i] === NONE) {\n      colorB[i] = colorA[i] as number;\n    }\n    i++;\n  }\n  if (skip) {\n    return [colorA as ColorChannels, colorB as ColorChannels];\n  }\n  const validatedColorA = validateColorComponents(colorA as ColorChannels, {\n    minLength: QUAD,\n    validateRange: false\n  });\n  const validatedColorB = validateColorComponents(colorB as ColorChannels, {\n    minLength: QUAD,\n    validateRange: false\n  });\n  return [validatedColorA as ColorChannels, validatedColorB as ColorChannels];\n};\n\n/**\n * number to hex string\n * @param value - color value\n * @returns hex string\n */\nexport const numberToHexString = (value: number): string => {\n  if (!Number.isFinite(value)) {\n    throw new TypeError(`${value} is not a number.`);\n  } else {\n    value = Math.round(value);\n    if (value < 0 || value > MAX_RGB) {\n      throw new RangeError(`${value} is not between 0 and ${MAX_RGB}.`);\n    }\n  }\n  let hex = value.toString(HEX);\n  if (hex.length === 1) {\n    hex = `0${hex}`;\n  }\n  return hex;\n};\n\n/**\n * angle to deg\n * @param angle\n * @returns deg: 0..360\n */\nexport const angleToDeg = (angle: string): number => {\n  if (isString(angle)) {\n    angle = angle.trim();\n  } else {\n    throw new TypeError(`${angle} is not a string.`);\n  }\n  const GRAD = DEG / 400;\n  const RAD = DEG / (Math.PI * DUO);\n  const reg = new RegExp(`^(${NUM})(${ANGLE})?$`);\n  if (!reg.test(angle)) {\n    throw new SyntaxError(`Invalid property value: ${angle}`);\n  }\n  const [, value = '', unit = ''] = angle.match(reg) as RegExpExecArray;\n  let deg;\n  switch (unit) {\n    case 'grad':\n      deg = parseFloat(value) * GRAD;\n      break;\n    case 'rad':\n      deg = parseFloat(value) * RAD;\n      break;\n    case 'turn':\n      deg = parseFloat(value) * DEG;\n      break;\n    default:\n      deg = parseFloat(value);\n  }\n  deg %= DEG;\n  if (deg < 0) {\n    deg += DEG;\n  } else if (Object.is(deg, -0)) {\n    deg = 0;\n  }\n  return deg;\n};\n\n/**\n * parse alpha\n * @param [alpha] - alpha value\n * @returns alpha: 0..1\n */\nexport const parseAlpha = (alpha: string = ''): number => {\n  if (isString(alpha)) {\n    alpha = alpha.trim();\n    if (!alpha) {\n      alpha = '1';\n    } else if (alpha === NONE) {\n      alpha = '0';\n    } else {\n      let a;\n      if (alpha.endsWith('%')) {\n        a = parseFloat(alpha) / MAX_PCT;\n      } else {\n        a = parseFloat(alpha);\n      }\n      if (!Number.isFinite(a)) {\n        throw new TypeError(`${a} is not a finite number.`);\n      }\n      if (a < PPTH) {\n        alpha = '0';\n      } else if (a > 1) {\n        alpha = '1';\n      } else {\n        alpha = a.toFixed(TRIA);\n      }\n    }\n  } else {\n    alpha = '1';\n  }\n  return parseFloat(alpha);\n};\n\n/**\n * parse hex alpha\n * @param value - alpha value in hex string\n * @returns alpha: 0..1\n */\nexport const parseHexAlpha = (value: string): number => {\n  if (isString(value)) {\n    if (value === '') {\n      throw new SyntaxError('Invalid property value: (empty string)');\n    }\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  let alpha = parseInt(value, HEX);\n  if (alpha <= 0) {\n    return 0;\n  }\n  if (alpha >= MAX_RGB) {\n    return 1;\n  }\n  const alphaMap = new Map();\n  for (let i = 1; i < MAX_PCT; i++) {\n    alphaMap.set(Math.round((i * MAX_RGB) / MAX_PCT), i);\n  }\n  if (alphaMap.has(alpha)) {\n    alpha = alphaMap.get(alpha) / MAX_PCT;\n  } else {\n    alpha = Math.round(alpha / MAX_RGB / PPTH) * PPTH;\n  }\n  return parseFloat(alpha.toFixed(TRIA));\n};\n\n/**\n * transform rgb to linear rgb\n * @param rgb - [r, g, b] r|g|b: 0..255\n * @param [skip] - skip validate\n * @returns TriColorChannels - [r, g, b] r|g|b: 0..1\n */\nexport const transformRgbToLinearRgb = (\n  rgb: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  let rr, gg, bb;\n  if (skip) {\n    [rr, gg, bb] = rgb;\n  } else {\n    [rr, gg, bb] = validateColorComponents(rgb, {\n      maxLength: TRIA,\n      maxRange: MAX_RGB\n    });\n  }\n  let r = rr / MAX_RGB;\n  let g = gg / MAX_RGB;\n  let b = bb / MAX_RGB;\n  const COND_POW = 0.04045;\n  if (r > COND_POW) {\n    r = Math.pow((r + LINEAR_OFFSET) / (1 + LINEAR_OFFSET), POW_LINEAR);\n  } else {\n    r /= LINEAR_COEF;\n  }\n  if (g > COND_POW) {\n    g = Math.pow((g + LINEAR_OFFSET) / (1 + LINEAR_OFFSET), POW_LINEAR);\n  } else {\n    g /= LINEAR_COEF;\n  }\n  if (b > COND_POW) {\n    b = Math.pow((b + LINEAR_OFFSET) / (1 + LINEAR_OFFSET), POW_LINEAR);\n  } else {\n    b /= LINEAR_COEF;\n  }\n  return [r, g, b];\n};\n\n/**\n * transform rgb to xyz\n * @param rgb - [r, g, b] r|g|b: 0..255\n * @param [skip] - skip validate\n * @returns TriColorChannels - [x, y, z]\n */\nexport const transformRgbToXyz = (\n  rgb: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  let r, g, b;\n  if (skip) {\n    [r, g, b] = rgb;\n  } else {\n    [r, g, b] = validateColorComponents(rgb, {\n      maxLength: TRIA,\n      maxRange: MAX_RGB\n    });\n  }\n  const [rr, gg, bb] = transformRgbToLinearRgb([r, g, b], true);\n  const [x, y, z] = transformMatrix(MATRIX_L_RGB_TO_XYZ, [rr, gg, bb], true);\n  return [x, y, z];\n};\n\n/**\n * transform rgb to xyz-d50\n * @param rgb - [r, g, b] r|g|b: 0..255 alpha: 0..1\n * @returns TriColorChannels - [x, y, z]\n */\nexport const transformRgbToXyzD50 = (\n  rgb: TriColorChannels\n): TriColorChannels => {\n  const [xx, yy, zz] = transformRgbToXyz(rgb);\n  const [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [xx, yy, zz], true);\n  return [x, y, z];\n};\n\n/**\n * transform linear rgb to rgb\n * @param rgb - [r, g, b] r|g|b: 0..1\n * @param [round] - round result\n * @returns TriColorChannels - [r, g, b] r|g|b: 0..255\n */\nexport const transformLinearRgbToRgb = (\n  rgb: TriColorChannels,\n  round: boolean = false\n): TriColorChannels => {\n  let [r, g, b] = validateColorComponents(rgb, {\n    maxLength: TRIA\n  });\n  const COND_POW = 809 / 258400;\n  if (r > COND_POW) {\n    r = Math.pow(r, 1 / POW_LINEAR) * (1 + LINEAR_OFFSET) - LINEAR_OFFSET;\n  } else {\n    r *= LINEAR_COEF;\n  }\n  r *= MAX_RGB;\n  if (g > COND_POW) {\n    g = Math.pow(g, 1 / POW_LINEAR) * (1 + LINEAR_OFFSET) - LINEAR_OFFSET;\n  } else {\n    g *= LINEAR_COEF;\n  }\n  g *= MAX_RGB;\n  if (b > COND_POW) {\n    b = Math.pow(b, 1 / POW_LINEAR) * (1 + LINEAR_OFFSET) - LINEAR_OFFSET;\n  } else {\n    b *= LINEAR_COEF;\n  }\n  b *= MAX_RGB;\n  return [\n    round ? Math.round(r) : r,\n    round ? Math.round(g) : g,\n    round ? Math.round(b) : b\n  ];\n};\n\n/**\n * transform xyz to rgb\n * @param xyz - [x, y, z]\n * @param [skip] - skip validate\n * @returns TriColorChannels - [r, g, b] r|g|b: 0..255\n */\nexport const transformXyzToRgb = (\n  xyz: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  let x, y, z;\n  if (skip) {\n    [x, y, z] = xyz;\n  } else {\n    [x, y, z] = validateColorComponents(xyz, {\n      maxLength: TRIA,\n      validateRange: false\n    });\n  }\n  let [r, g, b] = transformMatrix(MATRIX_XYZ_TO_L_RGB, [x, y, z], true);\n  [r, g, b] = transformLinearRgbToRgb(\n    [\n      Math.min(Math.max(r, 0), 1),\n      Math.min(Math.max(g, 0), 1),\n      Math.min(Math.max(b, 0), 1)\n    ],\n    true\n  );\n  return [r, g, b];\n};\n\n/**\n * transform xyz to xyz-d50\n * @param xyz - [x, y, z]\n * @returns TriColorChannels - [x, y, z]\n */\nexport const transformXyzToXyzD50 = (\n  xyz: TriColorChannels\n): TriColorChannels => {\n  const [xx, yy, zz] = validateColorComponents(xyz, {\n    maxLength: TRIA,\n    validateRange: false\n  });\n  const [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [xx, yy, zz], true);\n  return [x, y, z];\n};\n\n/**\n * transform xyz to hsl\n * @param xyz - [x, y, z]\n * @param [skip] - skip validate\n * @returns TriColorChannels - [h, s, l]\n */\nexport const transformXyzToHsl = (\n  xyz: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  const [rr, gg, bb] = transformXyzToRgb(xyz, skip);\n  const r = rr / MAX_RGB;\n  const g = gg / MAX_RGB;\n  const b = bb / MAX_RGB;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const d = max - min;\n  const l = (max + min) * HALF * MAX_PCT;\n  let h, s;\n  if (Math.round(l) === 0 || Math.round(l) === MAX_PCT) {\n    h = 0;\n    s = 0;\n  } else {\n    s = (d / (1 - Math.abs(max + min - 1))) * MAX_PCT;\n    if (s === 0) {\n      h = 0;\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d;\n          break;\n        case g:\n          h = (b - r) / d + DUO;\n          break;\n        case b:\n        default:\n          h = (r - g) / d + QUAD;\n          break;\n      }\n      h = (h * SEXA) % DEG;\n      if (h < 0) {\n        h += DEG;\n      }\n    }\n  }\n  return [h, s, l];\n};\n\n/**\n * transform xyz to hwb\n * @param xyz - [x, y, z]\n * @param [skip] - skip validate\n * @returns TriColorChannels - [h, w, b]\n */\nexport const transformXyzToHwb = (\n  xyz: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  const [r, g, b] = transformXyzToRgb(xyz, skip);\n  const w = Math.min(r, g, b) / MAX_RGB;\n  const bk = 1 - Math.max(r, g, b) / MAX_RGB;\n  let h;\n  if (w + bk === 1) {\n    h = 0;\n  } else {\n    [h] = transformXyzToHsl(xyz);\n  }\n  return [h, w * MAX_PCT, bk * MAX_PCT];\n};\n\n/**\n * transform xyz to oklab\n * @param xyz - [x, y, z]\n * @param [skip] - skip validate\n * @returns TriColorChannels - [l, a, b]\n */\nexport const transformXyzToOklab = (\n  xyz: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  let x, y, z;\n  if (skip) {\n    [x, y, z] = xyz;\n  } else {\n    [x, y, z] = validateColorComponents(xyz, {\n      maxLength: TRIA,\n      validateRange: false\n    });\n  }\n  const lms = transformMatrix(MATRIX_XYZ_TO_LMS, [x, y, z], true);\n  const xyzLms = lms.map(c => Math.cbrt(c)) as TriColorChannels;\n  let [l, a, b] = transformMatrix(MATRIX_LMS_TO_OKLAB, xyzLms, true);\n  l = Math.min(Math.max(l, 0), 1);\n  const lPct = Math.round(parseFloat(l.toFixed(QUAD)) * MAX_PCT);\n  if (lPct === 0 || lPct === MAX_PCT) {\n    a = 0;\n    b = 0;\n  }\n  return [l, a, b];\n};\n\n/**\n * transform xyz to oklch\n * @param xyz - [x, y, z]\n * @param [skip] - skip validate\n * @returns TriColorChannels - [l, c, h]\n */\nexport const transformXyzToOklch = (\n  xyz: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  const [l, a, b] = transformXyzToOklab(xyz, skip);\n  let c, h;\n  const lPct = Math.round(parseFloat(l.toFixed(QUAD)) * MAX_PCT);\n  if (lPct === 0 || lPct === MAX_PCT) {\n    c = 0;\n    h = 0;\n  } else {\n    c = Math.max(Math.sqrt(Math.pow(a, POW_SQR) + Math.pow(b, POW_SQR)), 0);\n    if (parseFloat(c.toFixed(QUAD)) === 0) {\n      h = 0;\n    } else {\n      h = (Math.atan2(b, a) * DEG_HALF) / Math.PI;\n      if (h < 0) {\n        h += DEG;\n      }\n    }\n  }\n  return [l, c, h];\n};\n\n/**\n * transform xyz D50 to rgb\n * @param xyz - [x, y, z]\n * @param [skip] - skip validate\n * @returns TriColorChannels - [r, g, b] r|g|b: 0..255\n */\nexport const transformXyzD50ToRgb = (\n  xyz: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  let x, y, z;\n  if (skip) {\n    [x, y, z] = xyz;\n  } else {\n    [x, y, z] = validateColorComponents(xyz, {\n      maxLength: TRIA,\n      validateRange: false\n    });\n  }\n  const xyzD65 = transformMatrix(MATRIX_D50_TO_D65, [x, y, z], true);\n  const [r, g, b] = transformXyzToRgb(xyzD65, true);\n  return [r, g, b];\n};\n\n/**\n * transform xyz-d50 to lab\n * @param xyz - [x, y, z]\n * @param [skip] - skip validate\n * @returns TriColorChannels - [l, a, b]\n */\nexport const transformXyzD50ToLab = (\n  xyz: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  let x, y, z;\n  if (skip) {\n    [x, y, z] = xyz;\n  } else {\n    [x, y, z] = validateColorComponents(xyz, {\n      maxLength: TRIA,\n      validateRange: false\n    });\n  }\n  const xyzD50 = [x, y, z].map((val, i) => val / (D50[i] as number));\n  const [f0, f1, f2] = xyzD50.map(val =>\n    val > LAB_EPSILON ? Math.cbrt(val) : (val * LAB_KAPPA + HEX) / LAB_L\n  ) as TriColorChannels;\n  const l = Math.min(Math.max(LAB_L * f1 - HEX, 0), MAX_PCT);\n  let a, b;\n  if (l === 0 || l === MAX_PCT) {\n    a = 0;\n    b = 0;\n  } else {\n    a = (f0 - f1) * LAB_A;\n    b = (f1 - f2) * LAB_B;\n  }\n  return [l, a, b];\n};\n\n/**\n * transform xyz-d50 to lch\n * @param xyz - [x, y, z]\n * @param [skip] - skip validate\n * @returns TriColorChannels - [l, c, h]\n */\nexport const transformXyzD50ToLch = (\n  xyz: TriColorChannels,\n  skip: boolean = false\n): TriColorChannels => {\n  const [l, a, b] = transformXyzD50ToLab(xyz, skip);\n  let c, h;\n  if (l === 0 || l === MAX_PCT) {\n    c = 0;\n    h = 0;\n  } else {\n    c = Math.max(Math.sqrt(Math.pow(a, POW_SQR) + Math.pow(b, POW_SQR)), 0);\n    h = (Math.atan2(b, a) * DEG_HALF) / Math.PI;\n    if (h < 0) {\n      h += DEG;\n    }\n  }\n  return [l, c, h];\n};\n\n/**\n * convert rgb to hex color\n * @param rgb - [r, g, b, alpha] r|g|b: 0..255 alpha: 0..1\n * @returns hex color\n */\nexport const convertRgbToHex = (rgb: ColorChannels): string => {\n  const [r, g, b, alpha] = validateColorComponents(rgb, {\n    alpha: true,\n    maxRange: MAX_RGB\n  }) as ColorChannels;\n  const rr = numberToHexString(r);\n  const gg = numberToHexString(g);\n  const bb = numberToHexString(b);\n  const aa = numberToHexString(alpha * MAX_RGB);\n  let hex;\n  if (aa === 'ff') {\n    hex = `#${rr}${gg}${bb}`;\n  } else {\n    hex = `#${rr}${gg}${bb}${aa}`;\n  }\n  return hex;\n};\n\n/**\n * convert linear rgb to hex color\n * @param rgb - [r, g, b, alpha] r|g|b|alpha: 0..1\n * @param [skip] - skip validate\n * @returns hex color\n */\nexport const convertLinearRgbToHex = (\n  rgb: ColorChannels,\n  skip: boolean = false\n): string => {\n  let r, g, b, alpha;\n  if (skip) {\n    [r, g, b, alpha] = rgb;\n  } else {\n    [r, g, b, alpha] = validateColorComponents(rgb, {\n      minLength: QUAD\n    }) as ColorChannels;\n  }\n  [r, g, b] = transformLinearRgbToRgb([r, g, b], true);\n  const rr = numberToHexString(r);\n  const gg = numberToHexString(g);\n  const bb = numberToHexString(b);\n  const aa = numberToHexString(alpha * MAX_RGB);\n  let hex;\n  if (aa === 'ff') {\n    hex = `#${rr}${gg}${bb}`;\n  } else {\n    hex = `#${rr}${gg}${bb}${aa}`;\n  }\n  return hex;\n};\n\n/**\n * convert xyz to hex color\n * @param xyz - [x, y, z, alpha]\n * @returns hex color\n */\nexport const convertXyzToHex = (xyz: ColorChannels): string => {\n  const [x, y, z, alpha] = validateColorComponents(xyz, {\n    minLength: QUAD,\n    validateRange: false\n  }) as ColorChannels;\n  const [r, g, b] = transformMatrix(MATRIX_XYZ_TO_L_RGB, [x, y, z], true);\n  const hex = convertLinearRgbToHex(\n    [\n      Math.min(Math.max(r, 0), 1),\n      Math.min(Math.max(g, 0), 1),\n      Math.min(Math.max(b, 0), 1),\n      alpha\n    ],\n    true\n  );\n  return hex;\n};\n\n/**\n * convert xyz D50 to hex color\n * @param xyz - [x, y, z, alpha]\n * @returns hex color\n */\nexport const convertXyzD50ToHex = (xyz: ColorChannels): string => {\n  const [x, y, z, alpha] = validateColorComponents(xyz, {\n    minLength: QUAD,\n    validateRange: false\n  }) as ColorChannels;\n  const xyzD65 = transformMatrix(MATRIX_D50_TO_D65, [x, y, z], true);\n  const [r, g, b] = transformMatrix(MATRIX_XYZ_TO_L_RGB, xyzD65, true);\n  const hex = convertLinearRgbToHex([\n    Math.min(Math.max(r, 0), 1),\n    Math.min(Math.max(g, 0), 1),\n    Math.min(Math.max(b, 0), 1),\n    alpha\n  ]);\n  return hex;\n};\n\n/**\n * convert hex color to rgb\n * @param value - color value\n * @returns ColorChannels - [r, g, b, alpha] r|g|b: 0..255 alpha: 0..1\n */\nexport const convertHexToRgb = (value: string): ColorChannels => {\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  if (\n    !(\n      /^#[\\da-f]{6}$/.test(value) ||\n      /^#[\\da-f]{3}$/.test(value) ||\n      /^#[\\da-f]{8}$/.test(value) ||\n      /^#[\\da-f]{4}$/.test(value)\n    )\n  ) {\n    throw new SyntaxError(`Invalid property value: ${value}`);\n  }\n  const arr = [];\n  if (/^#[\\da-f]{6}$/.test(value)) {\n    const [, r = '', g = '', b = ''] = value.match(\n      /^#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/\n    ) as RegExpExecArray;\n    arr.push(parseInt(r, HEX), parseInt(g, HEX), parseInt(b, HEX), 1);\n  } else if (/^#[\\da-f]{3}$/.test(value)) {\n    const [, r = '', g = '', b = ''] = value.match(\n      /^#([\\da-f])([\\da-f])([\\da-f])$/\n    ) as RegExpExecArray;\n    arr.push(\n      parseInt(`${r}${r}`, HEX),\n      parseInt(`${g}${g}`, HEX),\n      parseInt(`${b}${b}`, HEX),\n      1\n    );\n  } else if (/^#[\\da-f]{8}$/.test(value)) {\n    const [, r = '', g = '', b = '', alpha = ''] = value.match(\n      /^#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/\n    ) as RegExpExecArray;\n    arr.push(\n      parseInt(r, HEX),\n      parseInt(g, HEX),\n      parseInt(b, HEX),\n      parseHexAlpha(alpha)\n    );\n  } else if (/^#[\\da-f]{4}$/.test(value)) {\n    const [, r = '', g = '', b = '', alpha = ''] = value.match(\n      /^#([\\da-f])([\\da-f])([\\da-f])([\\da-f])$/\n    ) as RegExpExecArray;\n    arr.push(\n      parseInt(`${r}${r}`, HEX),\n      parseInt(`${g}${g}`, HEX),\n      parseInt(`${b}${b}`, HEX),\n      parseHexAlpha(`${alpha}${alpha}`)\n    );\n  }\n  return arr as ColorChannels;\n};\n\n/**\n * convert hex color to linear rgb\n * @param value - color value\n * @returns ColorChannels - [r, g, b, alpha] r|g|b|alpha: 0..1\n */\nexport const convertHexToLinearRgb = (value: string): ColorChannels => {\n  const [rr, gg, bb, alpha] = convertHexToRgb(value);\n  const [r, g, b] = transformRgbToLinearRgb([rr, gg, bb], true);\n  return [r, g, b, alpha];\n};\n\n/**\n * convert hex color to xyz\n * @param value - color value\n * @returns ColorChannels - [x, y, z, alpha]\n */\nexport const convertHexToXyz = (value: string): ColorChannels => {\n  const [r, g, b, alpha] = convertHexToLinearRgb(value);\n  const [x, y, z] = transformMatrix(MATRIX_L_RGB_TO_XYZ, [r, g, b], true);\n  return [x, y, z, alpha];\n};\n\n/**\n * parse rgb()\n * @param value - color value\n * @param [opt] - options\n * @returns parsed color - ['rgb', r, g, b, alpha], '(empty)', null\n */\nexport const parseRgb = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  const reg = new RegExp(`^rgba?\\\\(\\\\s*(${SYN_MOD}|${SYN_RGB_LV3})\\\\s*\\\\)$`);\n  if (!reg.test(value)) {\n    switch (format) {\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  const [, val = ''] = value.match(reg) as RegExpExecArray;\n  const [v1 = '', v2 = '', v3 = '', v4 = ''] = val\n    .replace(/[,/]/g, ' ')\n    .split(/\\s+/);\n  let r, g, b;\n  if (v1 === NONE) {\n    r = 0;\n  } else {\n    if (v1.endsWith('%')) {\n      r = (parseFloat(v1) * MAX_RGB) / MAX_PCT;\n    } else {\n      r = parseFloat(v1);\n    }\n    r = Math.min(Math.max(roundToPrecision(r, OCT), 0), MAX_RGB);\n  }\n  if (v2 === NONE) {\n    g = 0;\n  } else {\n    if (v2.endsWith('%')) {\n      g = (parseFloat(v2) * MAX_RGB) / MAX_PCT;\n    } else {\n      g = parseFloat(v2);\n    }\n    g = Math.min(Math.max(roundToPrecision(g, OCT), 0), MAX_RGB);\n  }\n  if (v3 === NONE) {\n    b = 0;\n  } else {\n    if (v3.endsWith('%')) {\n      b = (parseFloat(v3) * MAX_RGB) / MAX_PCT;\n    } else {\n      b = parseFloat(v3);\n    }\n    b = Math.min(Math.max(roundToPrecision(b, OCT), 0), MAX_RGB);\n  }\n  const alpha = parseAlpha(v4);\n  return ['rgb', r, g, b, format === VAL_MIX && v4 === NONE ? NONE : alpha];\n};\n\n/**\n * parse hsl()\n * @param value - color value\n * @param [opt] - options\n * @returns parsed color - ['rgb', r, g, b, alpha], '(empty)', null\n */\nexport const parseHsl = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  if (!REG_HSL.test(value)) {\n    switch (format) {\n      case 'hsl':\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  const [, val = ''] = value.match(REG_HSL) as RegExpExecArray;\n  const [v1 = '', v2 = '', v3 = '', v4 = ''] = val\n    .replace(/[,/]/g, ' ')\n    .split(/\\s+/);\n  let h, s, l;\n  if (v1 === NONE) {\n    h = 0;\n  } else {\n    h = angleToDeg(v1);\n  }\n  if (v2 === NONE) {\n    s = 0;\n  } else {\n    s = Math.min(Math.max(parseFloat(v2), 0), MAX_PCT);\n  }\n  if (v3 === NONE) {\n    l = 0;\n  } else {\n    l = Math.min(Math.max(parseFloat(v3), 0), MAX_PCT);\n  }\n  const alpha = parseAlpha(v4);\n  if (format === 'hsl') {\n    return [\n      format,\n      v1 === NONE ? v1 : h,\n      v2 === NONE ? v2 : s,\n      v3 === NONE ? v3 : l,\n      v4 === NONE ? v4 : alpha\n    ];\n  }\n  h = (h / DEG) * DOZ;\n  l /= MAX_PCT;\n  const sa = (s / MAX_PCT) * Math.min(l, 1 - l);\n  const rk = h % DOZ;\n  const gk = (8 + h) % DOZ;\n  const bk = (4 + h) % DOZ;\n  const r = l - sa * Math.max(-1, Math.min(rk - TRIA, TRIA ** POW_SQR - rk, 1));\n  const g = l - sa * Math.max(-1, Math.min(gk - TRIA, TRIA ** POW_SQR - gk, 1));\n  const b = l - sa * Math.max(-1, Math.min(bk - TRIA, TRIA ** POW_SQR - bk, 1));\n  return [\n    'rgb',\n    Math.min(Math.max(roundToPrecision(r * MAX_RGB, OCT), 0), MAX_RGB),\n    Math.min(Math.max(roundToPrecision(g * MAX_RGB, OCT), 0), MAX_RGB),\n    Math.min(Math.max(roundToPrecision(b * MAX_RGB, OCT), 0), MAX_RGB),\n    alpha\n  ];\n};\n\n/**\n * parse hwb()\n * @param value - color value\n * @param [opt] - options\n * @returns parsed color - ['rgb', r, g, b, alpha], '(empty)', null\n */\nexport const parseHwb = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  if (!REG_HWB.test(value)) {\n    switch (format) {\n      case 'hwb':\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  const [, val = ''] = value.match(REG_HWB) as RegExpExecArray;\n  const [v1 = '', v2 = '', v3 = '', v4 = ''] = val\n    .replace('/', ' ')\n    .split(/\\s+/);\n  let h, wh, bk;\n  if (v1 === NONE) {\n    h = 0;\n  } else {\n    h = angleToDeg(v1);\n  }\n  if (v2 === NONE) {\n    wh = 0;\n  } else {\n    wh = Math.min(Math.max(parseFloat(v2), 0), MAX_PCT) / MAX_PCT;\n  }\n  if (v3 === NONE) {\n    bk = 0;\n  } else {\n    bk = Math.min(Math.max(parseFloat(v3), 0), MAX_PCT) / MAX_PCT;\n  }\n  const alpha = parseAlpha(v4);\n  if (format === 'hwb') {\n    return [\n      format,\n      v1 === NONE ? v1 : h,\n      v2 === NONE ? v2 : wh * MAX_PCT,\n      v3 === NONE ? v3 : bk * MAX_PCT,\n      v4 === NONE ? v4 : alpha\n    ];\n  }\n  if (wh + bk >= 1) {\n    const v = roundToPrecision((wh / (wh + bk)) * MAX_RGB, OCT);\n    return ['rgb', v, v, v, alpha];\n  }\n  const factor = (1 - wh - bk) / MAX_RGB;\n  let [, r, g, b] = parseHsl(`hsl(${h} 100 50)`) as ComputedColorChannels;\n  r = roundToPrecision((r * factor + wh) * MAX_RGB, OCT);\n  g = roundToPrecision((g * factor + wh) * MAX_RGB, OCT);\n  b = roundToPrecision((b * factor + wh) * MAX_RGB, OCT);\n  return [\n    'rgb',\n    Math.min(Math.max(r, 0), MAX_RGB),\n    Math.min(Math.max(g, 0), MAX_RGB),\n    Math.min(Math.max(b, 0), MAX_RGB),\n    alpha\n  ];\n};\n\n/**\n * parse lab()\n * @param value - color value\n * @param [opt] - options\n * @returns parsed color\n *   - [xyz-d50, x, y, z, alpha], ['lab', l, a, b, alpha], '(empty)', null\n */\nexport const parseLab = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  if (!REG_LAB.test(value)) {\n    switch (format) {\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  const COEF_PCT = 1.25;\n  const COND_POW = 8;\n  const [, val = ''] = value.match(REG_LAB) as RegExpExecArray;\n  const [v1 = '', v2 = '', v3 = '', v4 = ''] = val\n    .replace('/', ' ')\n    .split(/\\s+/);\n  let l, a, b;\n  if (v1 === NONE) {\n    l = 0;\n  } else {\n    if (v1.endsWith('%')) {\n      l = parseFloat(v1);\n      if (l > MAX_PCT) {\n        l = MAX_PCT;\n      }\n    } else {\n      l = parseFloat(v1);\n    }\n    if (l < 0) {\n      l = 0;\n    }\n  }\n  if (v2 === NONE) {\n    a = 0;\n  } else {\n    a = v2.endsWith('%') ? parseFloat(v2) * COEF_PCT : parseFloat(v2);\n  }\n  if (v3 === NONE) {\n    b = 0;\n  } else {\n    b = v3.endsWith('%') ? parseFloat(v3) * COEF_PCT : parseFloat(v3);\n  }\n  const alpha = parseAlpha(v4);\n  if (REG_SPEC.test(format)) {\n    return [\n      'lab',\n      v1 === NONE ? v1 : roundToPrecision(l, HEX),\n      v2 === NONE ? v2 : roundToPrecision(a, HEX),\n      v3 === NONE ? v3 : roundToPrecision(b, HEX),\n      v4 === NONE ? v4 : alpha\n    ];\n  }\n  const fl = (l + HEX) / LAB_L;\n  const fa = a / LAB_A + fl;\n  const fb = fl - b / LAB_B;\n  const powFl = Math.pow(fl, POW_CUBE);\n  const powFa = Math.pow(fa, POW_CUBE);\n  const powFb = Math.pow(fb, POW_CUBE);\n  const xyz = [\n    powFa > LAB_EPSILON ? powFa : (fa * LAB_L - HEX) / LAB_KAPPA,\n    l > COND_POW ? powFl : l / LAB_KAPPA,\n    powFb > LAB_EPSILON ? powFb : (fb * LAB_L - HEX) / LAB_KAPPA\n  ];\n  const [x, y, z] = xyz.map(\n    (val, i) => val * (D50[i] as number)\n  ) as TriColorChannels;\n  return [\n    'xyz-d50',\n    roundToPrecision(x, HEX),\n    roundToPrecision(y, HEX),\n    roundToPrecision(z, HEX),\n    alpha\n  ];\n};\n\n/**\n * parse lch()\n * @param value - color value\n * @param [opt] - options\n * @returns parsed color\n *   - ['xyz-d50', x, y, z, alpha], ['lch', l, c, h, alpha], '(empty)', null\n */\nexport const parseLch = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  if (!REG_LCH.test(value)) {\n    switch (format) {\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  const COEF_PCT = 1.5;\n  const [, val = ''] = value.match(REG_LCH) as RegExpExecArray;\n  const [v1 = '', v2 = '', v3 = '', v4 = ''] = val\n    .replace('/', ' ')\n    .split(/\\s+/);\n  let l, c, h;\n  if (v1 === NONE) {\n    l = 0;\n  } else {\n    l = parseFloat(v1);\n    if (l < 0) {\n      l = 0;\n    }\n  }\n  if (v2 === NONE) {\n    c = 0;\n  } else {\n    c = v2.endsWith('%') ? parseFloat(v2) * COEF_PCT : parseFloat(v2);\n  }\n  if (v3 === NONE) {\n    h = 0;\n  } else {\n    h = angleToDeg(v3);\n  }\n  const alpha = parseAlpha(v4);\n  if (REG_SPEC.test(format)) {\n    return [\n      'lch',\n      v1 === NONE ? v1 : roundToPrecision(l, HEX),\n      v2 === NONE ? v2 : roundToPrecision(c, HEX),\n      v3 === NONE ? v3 : roundToPrecision(h, HEX),\n      v4 === NONE ? v4 : alpha\n    ];\n  }\n  const a = c * Math.cos((h * Math.PI) / DEG_HALF);\n  const b = c * Math.sin((h * Math.PI) / DEG_HALF);\n  const [, x, y, z] = parseLab(`lab(${l} ${a} ${b})`) as ComputedColorChannels;\n  return [\n    'xyz-d50',\n    roundToPrecision(x, HEX),\n    roundToPrecision(y, HEX),\n    roundToPrecision(z, HEX),\n    alpha as number\n  ];\n};\n\n/**\n * parse oklab()\n * @param value - color value\n * @param [opt] - options\n * @returns parsed color\n *   - ['xyz-d65', x, y, z, alpha], ['oklab', l, a, b, alpha], '(empty)', null\n */\nexport const parseOklab = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  if (!REG_OKLAB.test(value)) {\n    switch (format) {\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  const COEF_PCT = 0.4;\n  const [, val = ''] = value.match(REG_OKLAB) as RegExpExecArray;\n  const [v1 = '', v2 = '', v3 = '', v4 = ''] = val\n    .replace('/', ' ')\n    .split(/\\s+/);\n  let l, a, b;\n  if (v1 === NONE) {\n    l = 0;\n  } else {\n    l = v1.endsWith('%') ? parseFloat(v1) / MAX_PCT : parseFloat(v1);\n    if (l < 0) {\n      l = 0;\n    }\n  }\n  if (v2 === NONE) {\n    a = 0;\n  } else if (v2.endsWith('%')) {\n    a = (parseFloat(v2) * COEF_PCT) / MAX_PCT;\n  } else {\n    a = parseFloat(v2);\n  }\n  if (v3 === NONE) {\n    b = 0;\n  } else if (v3.endsWith('%')) {\n    b = (parseFloat(v3) * COEF_PCT) / MAX_PCT;\n  } else {\n    b = parseFloat(v3);\n  }\n  const alpha = parseAlpha(v4);\n  if (REG_SPEC.test(format)) {\n    return [\n      'oklab',\n      v1 === NONE ? v1 : roundToPrecision(l, HEX),\n      v2 === NONE ? v2 : roundToPrecision(a, HEX),\n      v3 === NONE ? v3 : roundToPrecision(b, HEX),\n      v4 === NONE ? v4 : alpha\n    ];\n  }\n  const lms = transformMatrix(MATRIX_OKLAB_TO_LMS, [l, a, b]);\n  const xyzLms = lms.map(c => Math.pow(c, POW_CUBE)) as TriColorChannels;\n  const [x, y, z] = transformMatrix(MATRIX_LMS_TO_XYZ, xyzLms, true);\n  return [\n    'xyz-d65',\n    roundToPrecision(x, HEX),\n    roundToPrecision(y, HEX),\n    roundToPrecision(z, HEX),\n    alpha as number\n  ];\n};\n\n/**\n * parse oklch()\n * @param value - color value\n * @param [opt] - options\n * @returns parsed color\n *   - ['xyz-d65', x, y, z, alpha], ['oklch', l, c, h, alpha], '(empty)', null\n */\nexport const parseOklch = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  if (!REG_OKLCH.test(value)) {\n    switch (format) {\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  const COEF_PCT = 0.4;\n  const [, val = ''] = value.match(REG_OKLCH) as RegExpExecArray;\n  const [v1 = '', v2 = '', v3 = '', v4 = ''] = val\n    .replace('/', ' ')\n    .split(/\\s+/);\n  let l, c, h;\n  if (v1 === NONE) {\n    l = 0;\n  } else {\n    l = v1.endsWith('%') ? parseFloat(v1) / MAX_PCT : parseFloat(v1);\n    if (l < 0) {\n      l = 0;\n    }\n  }\n  if (v2 === NONE) {\n    c = 0;\n  } else {\n    if (v2.endsWith('%')) {\n      c = (parseFloat(v2) * COEF_PCT) / MAX_PCT;\n    } else {\n      c = parseFloat(v2);\n    }\n    if (c < 0) {\n      c = 0;\n    }\n  }\n  if (v3 === NONE) {\n    h = 0;\n  } else {\n    h = angleToDeg(v3);\n  }\n  const alpha = parseAlpha(v4);\n  if (REG_SPEC.test(format)) {\n    return [\n      'oklch',\n      v1 === NONE ? v1 : roundToPrecision(l, HEX),\n      v2 === NONE ? v2 : roundToPrecision(c, HEX),\n      v3 === NONE ? v3 : roundToPrecision(h, HEX),\n      v4 === NONE ? v4 : alpha\n    ];\n  }\n  const a = c * Math.cos((h * Math.PI) / DEG_HALF);\n  const b = c * Math.sin((h * Math.PI) / DEG_HALF);\n  const lms = transformMatrix(MATRIX_OKLAB_TO_LMS, [l, a, b]);\n  const xyzLms = lms.map(cc => Math.pow(cc, POW_CUBE)) as TriColorChannels;\n  const [x, y, z] = transformMatrix(MATRIX_LMS_TO_XYZ, xyzLms, true);\n  return [\n    'xyz-d65',\n    roundToPrecision(x, HEX),\n    roundToPrecision(y, HEX),\n    roundToPrecision(z, HEX),\n    alpha\n  ];\n};\n\n/**\n * parse color()\n * @param value - color value\n * @param [opt] - options\n * @returns parsed color\n *   - ['xyz-(d50|d65)', x, y, z, alpha], [cs, r, g, b, alpha], '(empty)', null\n */\nexport const parseColorFunc = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { colorSpace = '', d50 = false, format = '' } = opt;\n  if (!REG_FN_COLOR.test(value)) {\n    switch (format) {\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  const [, val = ''] = value.match(REG_FN_COLOR) as RegExpExecArray;\n  let [cs = '', v1 = '', v2 = '', v3 = '', v4 = ''] = val\n    .replace('/', ' ')\n    .split(/\\s+/);\n  let r, g, b;\n  if (cs === 'xyz') {\n    cs = 'xyz-d65';\n  }\n  if (v1 === NONE) {\n    r = 0;\n  } else {\n    r = v1.endsWith('%') ? parseFloat(v1) / MAX_PCT : parseFloat(v1);\n  }\n  if (v2 === NONE) {\n    g = 0;\n  } else {\n    g = v2.endsWith('%') ? parseFloat(v2) / MAX_PCT : parseFloat(v2);\n  }\n  if (v3 === NONE) {\n    b = 0;\n  } else {\n    b = v3.endsWith('%') ? parseFloat(v3) / MAX_PCT : parseFloat(v3);\n  }\n  const alpha = parseAlpha(v4);\n  if (REG_SPEC.test(format) || (format === VAL_MIX && cs === colorSpace)) {\n    return [\n      cs,\n      v1 === NONE ? v1 : roundToPrecision(r, DEC),\n      v2 === NONE ? v2 : roundToPrecision(g, DEC),\n      v3 === NONE ? v3 : roundToPrecision(b, DEC),\n      v4 === NONE ? v4 : alpha\n    ];\n  }\n  let x = 0;\n  let y = 0;\n  let z = 0;\n  // srgb\n  if (cs === 'srgb') {\n    [x, y, z] = transformRgbToXyz([r * MAX_RGB, g * MAX_RGB, b * MAX_RGB]);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n    }\n    // srgb-linear\n  } else if (cs === 'srgb-linear') {\n    [x, y, z] = transformMatrix(MATRIX_L_RGB_TO_XYZ, [r, g, b]);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n    }\n    // display-p3\n  } else if (cs === 'display-p3') {\n    const linearRgb = transformRgbToLinearRgb([\n      r * MAX_RGB,\n      g * MAX_RGB,\n      b * MAX_RGB\n    ]);\n    [x, y, z] = transformMatrix(MATRIX_P3_TO_XYZ, linearRgb);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n    }\n    // rec2020\n  } else if (cs === 'rec2020') {\n    const ALPHA = 1.09929682680944;\n    const BETA = 0.018053968510807;\n    const REC_COEF = 0.45;\n    const rgb = [r, g, b].map(c => {\n      let cl;\n      if (c < BETA * REC_COEF * DEC) {\n        cl = c / (REC_COEF * DEC);\n      } else {\n        cl = Math.pow((c + ALPHA - 1) / ALPHA, 1 / REC_COEF);\n      }\n      return cl;\n    }) as TriColorChannels;\n    [x, y, z] = transformMatrix(MATRIX_REC2020_TO_XYZ, rgb);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n    }\n    // a98-rgb\n  } else if (cs === 'a98-rgb') {\n    const POW_A98 = 563 / 256;\n    const rgb = [r, g, b].map(c => {\n      const cl = Math.pow(c, POW_A98);\n      return cl;\n    }) as TriColorChannels;\n    [x, y, z] = transformMatrix(MATRIX_A98_TO_XYZ, rgb);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n    }\n    // prophoto-rgb\n  } else if (cs === 'prophoto-rgb') {\n    const POW_PROPHOTO = 1.8;\n    const rgb = [r, g, b].map(c => {\n      let cl;\n      if (c > 1 / (HEX * DUO)) {\n        cl = Math.pow(c, POW_PROPHOTO);\n      } else {\n        cl = c / HEX;\n      }\n      return cl;\n    }) as TriColorChannels;\n    [x, y, z] = transformMatrix(MATRIX_PROPHOTO_TO_XYZ_D50, rgb);\n    if (!d50) {\n      [x, y, z] = transformMatrix(MATRIX_D50_TO_D65, [x, y, z], true);\n    }\n    // xyz, xyz-d50, xyz-d65\n  } else if (/^xyz(?:-d(?:50|65))?$/.test(cs)) {\n    [x, y, z] = [r, g, b];\n    if (cs === 'xyz-d50') {\n      if (!d50) {\n        [x, y, z] = transformMatrix(MATRIX_D50_TO_D65, [x, y, z]);\n      }\n    } else if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n    }\n  }\n  return [\n    d50 ? 'xyz-d50' : 'xyz-d65',\n    roundToPrecision(x, HEX),\n    roundToPrecision(y, HEX),\n    roundToPrecision(z, HEX),\n    format === VAL_MIX && v4 === NONE ? v4 : alpha\n  ];\n};\n\n/**\n * parse color value\n * @param value - color value\n * @param [opt] - options\n * @returns parsed color\n *   - ['xyz-(d50|d65)', x, y, z, alpha], ['rgb', r, g, b, alpha]\n *   - value, '(empty)', null\n */\nexport const parseColorValue = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { d50 = false, format = '' } = opt;\n  // unknown color and/or invalid color\n  if (!REG_COLOR.test(value)) {\n    switch (format) {\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  let x = 0;\n  let y = 0;\n  let z = 0;\n  let alpha = 0;\n  // complement currentcolor as a missing color\n  if (REG_CURRENT.test(value)) {\n    if (format === VAL_COMP) {\n      return ['rgb', 0, 0, 0, 0];\n    }\n    if (format === VAL_SPEC) {\n      return value;\n    }\n    // named-color\n  } else if (/^[a-z]+$/.test(value)) {\n    if (Object.prototype.hasOwnProperty.call(NAMED_COLORS, value)) {\n      if (format === VAL_SPEC) {\n        return value;\n      }\n      const [r, g, b] = NAMED_COLORS[\n        value as keyof typeof NAMED_COLORS\n      ] as TriColorChannels;\n      alpha = 1;\n      if (format === VAL_COMP) {\n        return ['rgb', r, g, b, alpha];\n      }\n      [x, y, z] = transformRgbToXyz([r, g, b], true);\n      if (d50) {\n        [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n      }\n    } else {\n      if (format === VAL_COMP) {\n        return ['rgb', 0, 0, 0, 0];\n      }\n      if (format === VAL_SPEC) {\n        if (value === 'transparent') {\n          return value;\n        }\n        return '';\n      }\n      if (format === VAL_MIX) {\n        if (value === 'transparent') {\n          return ['rgb', 0, 0, 0, 0];\n        }\n        return null;\n      }\n    }\n    // hex-color\n  } else if (value[0] === '#') {\n    if (REG_SPEC.test(format)) {\n      const rgb = convertHexToRgb(value);\n      return ['rgb', ...rgb];\n    }\n    [x, y, z, alpha] = convertHexToXyz(value);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n    }\n    // lab()\n  } else if (value.startsWith('lab')) {\n    if (REG_SPEC.test(format)) {\n      return parseLab(value, opt);\n    }\n    [, x, y, z, alpha] = parseLab(value) as ComputedColorChannels;\n    if (!d50) {\n      [x, y, z] = transformMatrix(MATRIX_D50_TO_D65, [x, y, z], true);\n    }\n    // lch()\n  } else if (value.startsWith('lch')) {\n    if (REG_SPEC.test(format)) {\n      return parseLch(value, opt);\n    }\n    [, x, y, z, alpha] = parseLch(value) as ComputedColorChannels;\n    if (!d50) {\n      [x, y, z] = transformMatrix(MATRIX_D50_TO_D65, [x, y, z], true);\n    }\n    // oklab()\n  } else if (value.startsWith('oklab')) {\n    if (REG_SPEC.test(format)) {\n      return parseOklab(value, opt);\n    }\n    [, x, y, z, alpha] = parseOklab(value) as ComputedColorChannels;\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n    }\n    // oklch()\n  } else if (value.startsWith('oklch')) {\n    if (REG_SPEC.test(format)) {\n      return parseOklch(value, opt);\n    }\n    [, x, y, z, alpha] = parseOklch(value) as ComputedColorChannels;\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n    }\n  } else {\n    let r, g, b;\n    // hsl()\n    if (value.startsWith('hsl')) {\n      [, r, g, b, alpha] = parseHsl(value) as ComputedColorChannels;\n      // hwb()\n    } else if (value.startsWith('hwb')) {\n      [, r, g, b, alpha] = parseHwb(value) as ComputedColorChannels;\n      // rgb()\n    } else {\n      [, r, g, b, alpha] = parseRgb(value, opt) as ComputedColorChannels;\n    }\n    if (REG_SPEC.test(format)) {\n      return ['rgb', Math.round(r), Math.round(g), Math.round(b), alpha];\n    }\n    [x, y, z] = transformRgbToXyz([r, g, b]);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z], true);\n    }\n  }\n  return [\n    d50 ? 'xyz-d50' : 'xyz-d65',\n    roundToPrecision(x, HEX),\n    roundToPrecision(y, HEX),\n    roundToPrecision(z, HEX),\n    alpha\n  ];\n};\n\n/**\n * resolve color value\n * @param value - color value\n * @param [opt] - options\n * @returns resolved color\n *   - [cs, v1, v2, v3, alpha], value, '(empty)', null\n */\nexport const resolveColorValue = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { colorSpace = '', format = '' } = opt;\n  // unknown color and/or invalid color\n  if (!REG_COLOR.test(value)) {\n    switch (format) {\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  let cs = '';\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  let alpha = 0;\n  // complement currentcolor as a missing color\n  if (REG_CURRENT.test(value)) {\n    if (format === VAL_SPEC) {\n      return value;\n    }\n    // named-color\n  } else if (/^[a-z]+$/.test(value)) {\n    if (Object.prototype.hasOwnProperty.call(NAMED_COLORS, value)) {\n      if (format === VAL_SPEC) {\n        return value;\n      }\n      [r, g, b] = NAMED_COLORS[\n        value as keyof typeof NAMED_COLORS\n      ] as TriColorChannels;\n      alpha = 1;\n    } else {\n      if (format === VAL_SPEC) {\n        if (value === 'transparent') {\n          return value;\n        }\n        return '';\n      }\n      if (format === VAL_MIX) {\n        if (value === 'transparent') {\n          return ['rgb', 0, 0, 0, 0];\n        }\n        return null;\n      }\n    }\n    // hex-color\n  } else if (value[0] === '#') {\n    [r, g, b, alpha] = convertHexToRgb(value);\n    // rgb()\n  } else if (value.startsWith('rgb')) {\n    [, r, g, b, alpha] = parseRgb(value, opt) as ComputedColorChannels;\n    // hsl()\n  } else if (value.startsWith('hsl')) {\n    [, r, g, b, alpha] = parseHsl(value, opt) as ComputedColorChannels;\n    // hwb()\n  } else if (value.startsWith('hwb')) {\n    [, r, g, b, alpha] = parseHwb(value, opt) as ComputedColorChannels;\n    // lab(), lch()\n  } else if (/^l(?:ab|ch)/.test(value)) {\n    let x, y, z;\n    if (value.startsWith('lab')) {\n      [cs, x, y, z, alpha] = parseLab(value, opt) as ComputedColorChannels;\n    } else {\n      [cs, x, y, z, alpha] = parseLch(value, opt) as ComputedColorChannels;\n    }\n    if (REG_SPEC.test(format)) {\n      return [cs, x, y, z, alpha];\n    }\n    [r, g, b] = transformXyzD50ToRgb([x, y, z]);\n    // oklab(), oklch()\n  } else if (/^okl(?:ab|ch)/.test(value)) {\n    let x, y, z;\n    if (value.startsWith('oklab')) {\n      [cs, x, y, z, alpha] = parseOklab(value, opt) as ComputedColorChannels;\n    } else {\n      [cs, x, y, z, alpha] = parseOklch(value, opt) as ComputedColorChannels;\n    }\n    if (REG_SPEC.test(format)) {\n      return [cs, x, y, z, alpha];\n    }\n    [r, g, b] = transformXyzToRgb([x, y, z]);\n  }\n  if (format === VAL_MIX && colorSpace === 'srgb') {\n    return ['srgb', r / MAX_RGB, g / MAX_RGB, b / MAX_RGB, alpha];\n  }\n  return ['rgb', Math.round(r), Math.round(g), Math.round(b), alpha];\n};\n\n/**\n * resolve color()\n * @param value - color value\n * @param [opt] - options\n * @returns resolved color - [cs, v1, v2, v3, alpha], '(empty)', null\n */\nexport const resolveColorFunc = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { colorSpace = '', format = '' } = opt;\n  if (!REG_FN_COLOR.test(value)) {\n    switch (format) {\n      case VAL_MIX: {\n        return null;\n      }\n      case VAL_SPEC: {\n        return '';\n      }\n      default: {\n        return ['rgb', 0, 0, 0, 0];\n      }\n    }\n  }\n  const [cs = '', v1 = '', v2 = '', v3 = '', v4 = ''] = parseColorFunc(\n    value,\n    opt\n  ) as SpecifiedColorChannels;\n  if (REG_SPEC.test(format) || (format === VAL_MIX && cs === colorSpace)) {\n    return [cs, v1, v2, v3, v4];\n  }\n  const x = parseFloat(`${v1}`);\n  const y = parseFloat(`${v2}`);\n  const z = parseFloat(`${v3}`);\n  const alpha = parseAlpha(`${v4}`);\n  const [r, g, b] = transformXyzToRgb([x, y, z], true);\n  return ['rgb', r, g, b, alpha];\n};\n\n/**\n * convert color value to linear rgb\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [r, g, b, alpha] r|g|b|alpha: 0..1\n */\nexport const convertColorToLinearRgb = (\n  value: string,\n  opt: {\n    colorSpace?: string;\n    format?: string;\n  } = {}\n): ColorChannels => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { colorSpace = '', format = '' } = opt;\n  let cs = '';\n  let r, g, b, alpha, x, y, z;\n  if (format === VAL_MIX) {\n    let xyz;\n    if (value.startsWith(FN_COLOR)) {\n      xyz = parseColorFunc(value, opt);\n    } else {\n      xyz = parseColorValue(value, opt);\n    }\n    if (xyz === null) {\n      return null!;\n    }\n    [cs, x, y, z, alpha] = xyz as ComputedColorChannels;\n    if (cs === colorSpace) {\n      return [x, y, z, alpha];\n    }\n    [r, g, b] = transformMatrix(MATRIX_XYZ_TO_L_RGB, [x, y, z], true);\n  } else if (value.startsWith(FN_COLOR)) {\n    const [, val = ''] = value.match(REG_FN_COLOR) as RegExpExecArray;\n    const [cs] = val.replace('/', ' ').split(/\\s+/);\n    if (cs === 'srgb-linear') {\n      [, r, g, b, alpha] = resolveColorFunc(value, {\n        format: VAL_COMP\n      }) as ComputedColorChannels;\n    } else {\n      [, x, y, z, alpha] = parseColorFunc(value) as ComputedColorChannels;\n      [r, g, b] = transformMatrix(MATRIX_XYZ_TO_L_RGB, [x, y, z], true);\n    }\n  } else {\n    [, x, y, z, alpha] = parseColorValue(value) as ComputedColorChannels;\n    [r, g, b] = transformMatrix(MATRIX_XYZ_TO_L_RGB, [x, y, z], true);\n  }\n  return [\n    Math.min(Math.max(r, 0), 1),\n    Math.min(Math.max(g, 0), 1),\n    Math.min(Math.max(b, 0), 1),\n    alpha\n  ];\n};\n\n/**\n * convert color value to rgb\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [r, g, b, alpha] r|g|b: 0..255 alpha: 0..1\n */\nexport const convertColorToRgb = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  let r, g, b, alpha;\n  if (format === VAL_MIX) {\n    let rgb;\n    if (value.startsWith(FN_COLOR)) {\n      rgb = resolveColorFunc(value, opt);\n    } else {\n      rgb = resolveColorValue(value, opt);\n    }\n    if (rgb === null) {\n      return null!;\n    }\n    [, r, g, b, alpha] = rgb as ComputedColorChannels;\n  } else if (value.startsWith(FN_COLOR)) {\n    const [, val = ''] = value.match(REG_FN_COLOR) as RegExpExecArray;\n    const [cs] = val.replace('/', ' ').split(/\\s+/);\n    if (cs === 'srgb') {\n      [, r, g, b, alpha] = resolveColorFunc(value, {\n        format: VAL_COMP\n      }) as ComputedColorChannels;\n      r *= MAX_RGB;\n      g *= MAX_RGB;\n      b *= MAX_RGB;\n    } else {\n      [, r, g, b, alpha] = resolveColorFunc(value) as ComputedColorChannels;\n    }\n  } else if (/^(?:ok)?l(?:ab|ch)/.test(value)) {\n    [r, g, b, alpha] = convertColorToLinearRgb(value);\n    [r, g, b] = transformLinearRgbToRgb([r, g, b]);\n  } else {\n    [, r, g, b, alpha] = resolveColorValue(value, {\n      format: VAL_COMP\n    }) as ComputedColorChannels;\n  }\n  return [r, g, b, alpha];\n};\n\n/**\n * convert color value to xyz\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [x, y, z, alpha]\n */\nexport const convertColorToXyz = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { d50 = false, format = '' } = opt;\n  let x, y, z, alpha;\n  if (format === VAL_MIX) {\n    let xyz;\n    if (value.startsWith(FN_COLOR)) {\n      xyz = parseColorFunc(value, opt);\n    } else {\n      xyz = parseColorValue(value, opt);\n    }\n    if (xyz === null) {\n      return null!;\n    }\n    [, x, y, z, alpha] = xyz as ComputedColorChannels;\n  } else if (value.startsWith(FN_COLOR)) {\n    const [, val = ''] = value.match(REG_FN_COLOR) as RegExpExecArray;\n    const [cs = ''] = val.replace('/', ' ').split(/\\s+/);\n    if (d50) {\n      if (cs === 'xyz-d50') {\n        [, x, y, z, alpha] = resolveColorFunc(value, {\n          format: VAL_COMP\n        }) as ComputedColorChannels;\n      } else {\n        [, x, y, z, alpha] = parseColorFunc(\n          value,\n          opt\n        ) as ComputedColorChannels;\n      }\n    } else if (/^xyz(?:-d65)?$/.test(cs)) {\n      [, x, y, z, alpha] = resolveColorFunc(value, {\n        format: VAL_COMP\n      }) as ComputedColorChannels;\n    } else {\n      [, x, y, z, alpha] = parseColorFunc(value) as ComputedColorChannels;\n    }\n  } else {\n    [, x, y, z, alpha] = parseColorValue(value, opt) as ComputedColorChannels;\n  }\n  return [x, y, z, alpha];\n};\n\n/**\n * convert color value to hsl\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [h, s, l, alpha], hue may be powerless\n */\nexport const convertColorToHsl = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels | [number | string, number, number, number] => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  let h, s, l, alpha;\n  if (REG_HSL.test(value)) {\n    [, h, s, l, alpha] = parseHsl(value, {\n      format: 'hsl'\n    }) as ComputedColorChannels;\n    if (format === 'hsl') {\n      return [Math.round(h), Math.round(s), Math.round(l), alpha];\n    }\n    return [h, s, l, alpha];\n  }\n  let x, y, z;\n  if (format === VAL_MIX) {\n    let xyz;\n    if (value.startsWith(FN_COLOR)) {\n      xyz = parseColorFunc(value, opt);\n    } else {\n      xyz = parseColorValue(value, opt);\n    }\n    if (xyz === null) {\n      return null!;\n    }\n    [, x, y, z, alpha] = xyz as ComputedColorChannels;\n  } else if (value.startsWith(FN_COLOR)) {\n    [, x, y, z, alpha] = parseColorFunc(value) as ComputedColorChannels;\n  } else {\n    [, x, y, z, alpha] = parseColorValue(value) as ComputedColorChannels;\n  }\n  [h, s, l] = transformXyzToHsl([x, y, z], true) as TriColorChannels;\n  if (format === 'hsl') {\n    return [Math.round(h), Math.round(s), Math.round(l), alpha];\n  }\n  return [format === VAL_MIX && s === 0 ? NONE : h, s, l, alpha];\n};\n\n/**\n * convert color value to hwb\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [h, w, b, alpha], hue may be powerless\n */\nexport const convertColorToHwb = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels | [number | string, number, number, number] => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  let h, w, b, alpha;\n  if (REG_HWB.test(value)) {\n    [, h, w, b, alpha] = parseHwb(value, {\n      format: 'hwb'\n    }) as ComputedColorChannels;\n    if (format === 'hwb') {\n      return [Math.round(h), Math.round(w), Math.round(b), alpha];\n    }\n    return [h, w, b, alpha];\n  }\n  let x, y, z;\n  if (format === VAL_MIX) {\n    let xyz;\n    if (value.startsWith(FN_COLOR)) {\n      xyz = parseColorFunc(value, opt);\n    } else {\n      xyz = parseColorValue(value, opt);\n    }\n    if (xyz === null) {\n      return null!;\n    }\n    [, x, y, z, alpha] = xyz as ComputedColorChannels;\n  } else if (value.startsWith(FN_COLOR)) {\n    [, x, y, z, alpha] = parseColorFunc(value) as ComputedColorChannels;\n  } else {\n    [, x, y, z, alpha] = parseColorValue(value) as ComputedColorChannels;\n  }\n  [h, w, b] = transformXyzToHwb([x, y, z], true) as TriColorChannels;\n  if (format === 'hwb') {\n    return [Math.round(h), Math.round(w), Math.round(b), alpha];\n  }\n  return [format === VAL_MIX && w + b >= 100 ? NONE : h, w, b, alpha];\n};\n\n/**\n * convert color value to lab\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [l, a, b, alpha]\n */\nexport const convertColorToLab = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  let l, a, b, alpha;\n  if (REG_LAB.test(value)) {\n    [, l, a, b, alpha] = parseLab(value, {\n      format: VAL_COMP\n    }) as ComputedColorChannels;\n    return [l, a, b, alpha];\n  }\n  let x, y, z;\n  if (format === VAL_MIX) {\n    let xyz;\n    opt.d50 = true;\n    if (value.startsWith(FN_COLOR)) {\n      xyz = parseColorFunc(value, opt);\n    } else {\n      xyz = parseColorValue(value, opt);\n    }\n    if (xyz === null) {\n      return null!;\n    }\n    [, x, y, z, alpha] = xyz as ComputedColorChannels;\n  } else if (value.startsWith(FN_COLOR)) {\n    [, x, y, z, alpha] = parseColorFunc(value, {\n      d50: true\n    }) as ComputedColorChannels;\n  } else {\n    [, x, y, z, alpha] = parseColorValue(value, {\n      d50: true\n    }) as ComputedColorChannels;\n  }\n  [l, a, b] = transformXyzD50ToLab([x, y, z], true);\n  return [l, a, b, alpha];\n};\n\n/**\n * convert color value to lch\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [l, c, h, alpha], hue may be powerless\n */\nexport const convertColorToLch = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels | [number, number, number | string, number] => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  let l, c, h, alpha;\n  if (REG_LCH.test(value)) {\n    [, l, c, h, alpha] = parseLch(value, {\n      format: VAL_COMP\n    }) as ComputedColorChannels;\n    return [l, c, h, alpha];\n  }\n  let x, y, z;\n  if (format === VAL_MIX) {\n    let xyz;\n    opt.d50 = true;\n    if (value.startsWith(FN_COLOR)) {\n      xyz = parseColorFunc(value, opt);\n    } else {\n      xyz = parseColorValue(value, opt);\n    }\n    if (xyz === null) {\n      return null!;\n    }\n    [, x, y, z, alpha] = xyz as ComputedColorChannels;\n  } else if (value.startsWith(FN_COLOR)) {\n    [, x, y, z, alpha] = parseColorFunc(value, {\n      d50: true\n    }) as ComputedColorChannels;\n  } else {\n    [, x, y, z, alpha] = parseColorValue(value, {\n      d50: true\n    }) as ComputedColorChannels;\n  }\n  [l, c, h] = transformXyzD50ToLch([x, y, z], true);\n  return [l, c, format === VAL_MIX && c === 0 ? NONE : h, alpha];\n};\n\n/**\n * convert color value to oklab\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [l, a, b, alpha]\n */\nexport const convertColorToOklab = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  let l, a, b, alpha;\n  if (REG_OKLAB.test(value)) {\n    [, l, a, b, alpha] = parseOklab(value, {\n      format: VAL_COMP\n    }) as ComputedColorChannels;\n    return [l, a, b, alpha];\n  }\n  let x, y, z;\n  if (format === VAL_MIX) {\n    let xyz;\n    if (value.startsWith(FN_COLOR)) {\n      xyz = parseColorFunc(value, opt);\n    } else {\n      xyz = parseColorValue(value, opt);\n    }\n    if (xyz === null) {\n      return null!;\n    }\n    [, x, y, z, alpha] = xyz as ComputedColorChannels;\n  } else if (value.startsWith(FN_COLOR)) {\n    [, x, y, z, alpha] = parseColorFunc(value) as ComputedColorChannels;\n  } else {\n    [, x, y, z, alpha] = parseColorValue(value) as ComputedColorChannels;\n  }\n  [l, a, b] = transformXyzToOklab([x, y, z], true);\n  return [l, a, b, alpha];\n};\n\n/**\n * convert color value to oklch\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [l, c, h, alpha], hue may be powerless\n */\nexport const convertColorToOklch = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels | [number, number, number | string, number] => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  let l, c, h, alpha;\n  if (REG_OKLCH.test(value)) {\n    [, l, c, h, alpha] = parseOklch(value, {\n      format: VAL_COMP\n    }) as ComputedColorChannels;\n    return [l, c, h, alpha];\n  }\n  let x, y, z;\n  if (format === VAL_MIX) {\n    let xyz;\n    if (value.startsWith(FN_COLOR)) {\n      xyz = parseColorFunc(value, opt);\n    } else {\n      xyz = parseColorValue(value, opt);\n    }\n    if (xyz === null) {\n      return null!;\n    }\n    [, x, y, z, alpha] = xyz as ComputedColorChannels;\n  } else if (value.startsWith(FN_COLOR)) {\n    [, x, y, z, alpha] = parseColorFunc(value) as ComputedColorChannels;\n  } else {\n    [, x, y, z, alpha] = parseColorValue(value) as ComputedColorChannels;\n  }\n  [l, c, h] = transformXyzToOklch([x, y, z], true) as TriColorChannels;\n  return [l, c, format === VAL_MIX && c === 0 ? NONE : h, alpha];\n};\n\n/**\n * resolve color-mix()\n * @param value - color value\n * @param [opt] - options\n * @returns resolved color - [cs, v1, v2, v3, alpha], '(empty)', null\n */\nexport const resolveColorMix = (\n  value: string,\n  opt: IOptions = {}\n): SpecifiedColorChannels | string | null => {\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { format = '' } = opt;\n  const nestedItems = [];\n  if (!REG_MIX.test(value)) {\n    if (value.startsWith(FN_MIX) && REG_MIX_NEST.test(value)) {\n      const regColorSpace = new RegExp(`^(?:${CS_RGB}|${CS_XYZ})$`);\n      const items = value.match(REG_MIX_NEST) as RegExpExecArray;\n      for (const item of items) {\n        if (item) {\n          let val = resolveColorMix(item, {\n            format: format === VAL_SPEC ? format : VAL_COMP\n          }) as ComputedColorChannels | string;\n          // computed value\n          if (Array.isArray(val)) {\n            const [cs, v1, v2, v3, v4] = val as ComputedColorChannels;\n            if (v1 === 0 && v2 === 0 && v3 === 0 && v4 === 0) {\n              value = '';\n              break;\n            }\n            if (regColorSpace.test(cs)) {\n              if (v4 === 1) {\n                val = `color(${cs} ${v1} ${v2} ${v3})`;\n              } else {\n                val = `color(${cs} ${v1} ${v2} ${v3} / ${v4})`;\n              }\n            } else if (v4 === 1) {\n              val = `${cs}(${v1} ${v2} ${v3})`;\n            } else {\n              val = `${cs}(${v1} ${v2} ${v3} / ${v4})`;\n            }\n          } else if (!REG_MIX.test(val)) {\n            value = '';\n            break;\n          }\n          nestedItems.push(val);\n          value = value.replace(item, val);\n        }\n      }\n      if (!value) {\n        if (format === VAL_SPEC) {\n          return '';\n        }\n        return ['rgb', 0, 0, 0, 0];\n      }\n    } else if (format === VAL_SPEC) {\n      return '';\n    } else {\n      return ['rgb', 0, 0, 0, 0];\n    }\n  }\n  let colorSpace, hueArc, colorA, pctA, colorB, pctB;\n  if (nestedItems.length && format === VAL_SPEC) {\n    const regColorSpace = new RegExp(`^color-mix\\\\(\\\\s*in\\\\s+(${CS_MIX})\\\\s*,`);\n    const [, cs = ''] = value.match(regColorSpace) as RegExpExecArray;\n    if (REG_CS_HUE.test(cs)) {\n      [, colorSpace = '', hueArc = ''] = cs.match(\n        REG_CS_HUE\n      ) as RegExpExecArray;\n    } else {\n      colorSpace = cs;\n    }\n    if (nestedItems.length === 2) {\n      let [itemA = '', itemB = ''] = nestedItems;\n      itemA = itemA.replace(/(?=[()])/g, '\\\\');\n      itemB = itemB.replace(/(?=[()])/g, '\\\\');\n      const regA = new RegExp(`(${itemA})(?:\\\\s+(${PCT}))?`);\n      const regB = new RegExp(`(${itemB})(?:\\\\s+(${PCT}))?`);\n      [, colorA = '', pctA = ''] = value.match(regA) as RegExpExecArray;\n      [, colorB = '', pctB = ''] = value.match(regB) as RegExpExecArray;\n    } else {\n      let [item = ''] = nestedItems;\n      item = item.replace(/(?=[()])/g, '\\\\');\n      const itemPart = `${item}(?:\\\\s+${PCT})?`;\n      const itemPartCapt = `(${item})(?:\\\\s+(${PCT}))?`;\n      const regItemPart = new RegExp(`^${itemPartCapt}$`);\n      const regLastItem = new RegExp(`${itemPartCapt}\\\\s*\\\\)$`);\n      const regColorPart = new RegExp(`^(${SYN_COLOR_TYPE})(?:\\\\s+(${PCT}))?$`);\n      // item is at the end\n      if (regLastItem.test(value)) {\n        const reg = new RegExp(\n          `(${SYN_MIX_PART})\\\\s*,\\\\s*(${itemPart})\\\\s*\\\\)$`\n        );\n        const [, colorPartA = '', colorPartB = ''] = value.match(\n          reg\n        ) as RegExpExecArray;\n        [, colorA = '', pctA = ''] = colorPartA.match(\n          regColorPart\n        ) as RegExpExecArray;\n        [, colorB = '', pctB = ''] = colorPartB.match(\n          regItemPart\n        ) as RegExpExecArray;\n      } else {\n        const reg = new RegExp(\n          `(${itemPart})\\\\s*,\\\\s*(${SYN_MIX_PART})\\\\s*\\\\)$`\n        );\n        const [, colorPartA = '', colorPartB = ''] = value.match(\n          reg\n        ) as RegExpExecArray;\n        [, colorA = '', pctA = ''] = colorPartA.match(\n          regItemPart\n        ) as RegExpExecArray;\n        [, colorB = '', pctB = ''] = colorPartB.match(\n          regColorPart\n        ) as RegExpExecArray;\n      }\n    }\n  } else {\n    const [, cs = '', colorPartA = '', colorPartB = ''] = value.match(\n      REG_MIX_CAPT\n    ) as RegExpExecArray;\n    const reg = new RegExp(`^(${SYN_COLOR_TYPE})(?:\\\\s+(${PCT}))?$`);\n    [, colorA = '', pctA = ''] = colorPartA.match(reg) as RegExpExecArray;\n    [, colorB = '', pctB = ''] = colorPartB.match(reg) as RegExpExecArray;\n    if (REG_CS_HUE.test(cs)) {\n      [, colorSpace = '', hueArc = ''] = cs.match(\n        REG_CS_HUE\n      ) as RegExpExecArray;\n    } else {\n      colorSpace = cs;\n    }\n  }\n  // normalize percentages and set multipler\n  let pA, pB, m;\n  if (pctA && pctB) {\n    const p1 = parseFloat(pctA) / MAX_PCT;\n    const p2 = parseFloat(pctB) / MAX_PCT;\n    if (p1 < 0 || p1 > 1 || p2 < 0 || p2 > 1) {\n      if (format === VAL_SPEC) {\n        return '';\n      }\n      return ['rgb', 0, 0, 0, 0];\n    }\n    const factor = p1 + p2;\n    if (factor === 0) {\n      if (format === VAL_SPEC) {\n        return '';\n      }\n      return ['rgb', 0, 0, 0, 0];\n    }\n    pA = p1 / factor;\n    pB = p2 / factor;\n    m = factor < 1 ? factor : 1;\n  } else {\n    if (pctA) {\n      pA = parseFloat(pctA) / MAX_PCT;\n      if (pA < 0 || pA > 1) {\n        if (format === VAL_SPEC) {\n          return '';\n        }\n        return ['rgb', 0, 0, 0, 0];\n      }\n      pB = 1 - pA;\n    } else if (pctB) {\n      pB = parseFloat(pctB) / MAX_PCT;\n      if (pB < 0 || pB > 1) {\n        if (format === VAL_SPEC) {\n          return '';\n        }\n        return ['rgb', 0, 0, 0, 0];\n      }\n      pA = 1 - pB;\n    } else {\n      pA = HALF;\n      pB = HALF;\n    }\n    m = 1;\n  }\n  if (colorSpace === 'xyz') {\n    colorSpace = 'xyz-d65';\n  }\n  // specified value\n  if (format === VAL_SPEC) {\n    let valueA, valueB;\n    if (colorA.startsWith(FN_MIX)) {\n      valueA = colorA;\n    } else if (colorA.startsWith(FN_COLOR)) {\n      valueA = parseColorFunc(colorA, opt);\n      if (Array.isArray(valueA)) {\n        const [cs, v1, v2, v3, v4] = valueA;\n        if (v4 === 1) {\n          valueA = `color(${cs} ${v1} ${v2} ${v3})`;\n        } else {\n          valueA = `color(${cs} ${v1} ${v2} ${v3} / ${v4})`;\n        }\n      }\n    } else {\n      valueA = parseColorValue(colorA, opt);\n      if (valueA === '') {\n        return valueA;\n      }\n      if (Array.isArray(valueA)) {\n        const [cs, v1, v2, v3, v4] = valueA;\n        if (v4 === 1) {\n          if (cs === 'rgb') {\n            valueA = `${cs}(${v1}, ${v2}, ${v3})`;\n          } else {\n            valueA = `${cs}(${v1} ${v2} ${v3})`;\n          }\n        } else if (cs === 'rgb') {\n          valueA = `${cs}a(${v1}, ${v2}, ${v3}, ${v4})`;\n        } else {\n          valueA = `${cs}(${v1} ${v2} ${v3} / ${v4})`;\n        }\n      }\n    }\n    if (colorB.startsWith(FN_MIX)) {\n      valueB = colorB;\n    } else if (colorB.startsWith(FN_COLOR)) {\n      valueB = parseColorFunc(colorB, opt);\n      if (Array.isArray(valueB)) {\n        const [cs, v1, v2, v3, v4] = valueB;\n        if (v4 === 1) {\n          valueB = `color(${cs} ${v1} ${v2} ${v3})`;\n        } else {\n          valueB = `color(${cs} ${v1} ${v2} ${v3} / ${v4})`;\n        }\n      }\n    } else {\n      valueB = parseColorValue(colorB, opt);\n      if (valueB === '') {\n        return valueB;\n      }\n      if (Array.isArray(valueB)) {\n        const [cs, v1, v2, v3, v4] = [...valueB];\n        if (v4 === 1) {\n          if (cs === 'rgb') {\n            valueB = `${cs}(${v1}, ${v2}, ${v3})`;\n          } else {\n            valueB = `${cs}(${v1} ${v2} ${v3})`;\n          }\n        } else if (cs === 'rgb') {\n          valueB = `${cs}a(${v1}, ${v2}, ${v3}, ${v4})`;\n        } else {\n          valueB = `${cs}(${v1} ${v2} ${v3} / ${v4})`;\n        }\n      }\n    }\n    if (pctA && pctB) {\n      valueA += ` ${parseFloat(pctA)}%`;\n      valueB += ` ${parseFloat(pctB)}%`;\n    } else if (pctA) {\n      const pA = parseFloat(pctA);\n      if (pA !== MAX_PCT * HALF) {\n        valueA += ` ${pA}%`;\n      }\n    } else if (pctB) {\n      const pA = MAX_PCT - parseFloat(pctB);\n      if (pA !== MAX_PCT * HALF) {\n        valueA += ` ${pA}%`;\n      }\n    }\n    if (hueArc) {\n      return `color-mix(in ${colorSpace} ${hueArc} hue, ${valueA}, ${valueB})`;\n    } else {\n      return `color-mix(in ${colorSpace}, ${valueA}, ${valueB})`;\n    }\n  }\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  let alpha = 0;\n  // in srgb, srgb-linear\n  if (/^srgb(?:-linear)?$/.test(colorSpace)) {\n    let rgbA, rgbB;\n    if (colorSpace === 'srgb') {\n      if (REG_CURRENT.test(colorA)) {\n        rgbA = [NONE, NONE, NONE, NONE];\n      } else {\n        rgbA = convertColorToRgb(colorA, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n      if (REG_CURRENT.test(colorB)) {\n        rgbB = [NONE, NONE, NONE, NONE];\n      } else {\n        rgbB = convertColorToRgb(colorB, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n    } else {\n      if (REG_CURRENT.test(colorA)) {\n        rgbA = [NONE, NONE, NONE, NONE];\n      } else {\n        rgbA = convertColorToLinearRgb(colorA, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n      if (REG_CURRENT.test(colorB)) {\n        rgbB = [NONE, NONE, NONE, NONE];\n      } else {\n        rgbB = convertColorToLinearRgb(colorB, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n    }\n    if (rgbA === null || rgbB === null) {\n      return ['rgb', 0, 0, 0, 0];\n    }\n    const [rrA, ggA, bbA, aaA] = rgbA as NumStrColorChannels;\n    const [rrB, ggB, bbB, aaB] = rgbB as NumStrColorChannels;\n    const rNone = rrA === NONE && rrB === NONE;\n    const gNone = ggA === NONE && ggB === NONE;\n    const bNone = bbA === NONE && bbB === NONE;\n    const alphaNone = aaA === NONE && aaB === NONE;\n    const [[rA, gA, bA, alphaA], [rB, gB, bB, alphaB]] =\n      normalizeColorComponents(\n        [rrA, ggA, bbA, aaA],\n        [rrB, ggB, bbB, aaB],\n        true\n      );\n    const factorA = alphaA * pA;\n    const factorB = alphaB * pB;\n    alpha = factorA + factorB;\n    if (alpha === 0) {\n      r = rA * pA + rB * pB;\n      g = gA * pA + gB * pB;\n      b = bA * pA + bB * pB;\n    } else {\n      r = (rA * factorA + rB * factorB) / alpha;\n      g = (gA * factorA + gB * factorB) / alpha;\n      b = (bA * factorA + bB * factorB) / alpha;\n      alpha = parseFloat(alpha.toFixed(3));\n    }\n    if (format === VAL_COMP) {\n      return [\n        colorSpace,\n        rNone ? NONE : roundToPrecision(r, HEX),\n        gNone ? NONE : roundToPrecision(g, HEX),\n        bNone ? NONE : roundToPrecision(b, HEX),\n        alphaNone ? NONE : alpha * m\n      ];\n    }\n    r *= MAX_RGB;\n    g *= MAX_RGB;\n    b *= MAX_RGB;\n    // in xyz, xyz-d65, xyz-d50\n  } else if (REG_CS_XYZ.test(colorSpace)) {\n    let xyzA, xyzB;\n    if (REG_CURRENT.test(colorA)) {\n      xyzA = [NONE, NONE, NONE, NONE];\n    } else {\n      xyzA = convertColorToXyz(colorA, {\n        colorSpace,\n        d50: colorSpace === 'xyz-d50',\n        format: VAL_MIX\n      });\n    }\n    if (REG_CURRENT.test(colorB)) {\n      xyzB = [NONE, NONE, NONE, NONE];\n    } else {\n      xyzB = convertColorToXyz(colorB, {\n        colorSpace,\n        d50: colorSpace === 'xyz-d50',\n        format: VAL_MIX\n      });\n    }\n    if (xyzA === null || xyzB === null) {\n      return ['rgb', 0, 0, 0, 0];\n    }\n    const [xxA, yyA, zzA, aaA] = xyzA;\n    const [xxB, yyB, zzB, aaB] = xyzB;\n    const xNone = xxA === NONE && xxB === NONE;\n    const yNone = yyA === NONE && yyB === NONE;\n    const zNone = zzA === NONE && zzB === NONE;\n    const alphaNone = aaA === NONE && aaB === NONE;\n    const [[xA, yA, zA, alphaA], [xB, yB, zB, alphaB]] =\n      normalizeColorComponents(\n        [xxA, yyA, zzA, aaA],\n        [xxB, yyB, zzB, aaB],\n        true\n      );\n    const factorA = alphaA * pA;\n    const factorB = alphaB * pB;\n    alpha = factorA + factorB;\n    let x, y, z;\n    if (alpha === 0) {\n      x = xA * pA + xB * pB;\n      y = yA * pA + yB * pB;\n      z = zA * pA + zB * pB;\n    } else {\n      x = (xA * factorA + xB * factorB) / alpha;\n      y = (yA * factorA + yB * factorB) / alpha;\n      z = (zA * factorA + zB * factorB) / alpha;\n      alpha = parseFloat(alpha.toFixed(3));\n    }\n    if (format === VAL_COMP) {\n      return [\n        colorSpace,\n        xNone ? NONE : roundToPrecision(x, HEX),\n        yNone ? NONE : roundToPrecision(y, HEX),\n        zNone ? NONE : roundToPrecision(z, HEX),\n        alphaNone ? NONE : alpha * m\n      ];\n    }\n    if (colorSpace === 'xyz-d50') {\n      [r, g, b] = transformXyzD50ToRgb([x, y, z], true);\n    } else {\n      [r, g, b] = transformXyzToRgb([x, y, z], true);\n    }\n    // in hsl, hwb\n  } else if (/^h(?:sl|wb)$/.test(colorSpace)) {\n    let hslA, hslB;\n    if (colorSpace === 'hsl') {\n      if (REG_CURRENT.test(colorA)) {\n        hslA = [NONE, NONE, NONE, NONE];\n      } else {\n        hslA = convertColorToHsl(colorA, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n      if (REG_CURRENT.test(colorB)) {\n        hslB = [NONE, NONE, NONE, NONE];\n      } else {\n        hslB = convertColorToHsl(colorB, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n    } else {\n      if (REG_CURRENT.test(colorA)) {\n        hslA = [NONE, NONE, NONE, NONE];\n      } else {\n        hslA = convertColorToHwb(colorA, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n      if (REG_CURRENT.test(colorB)) {\n        hslB = [NONE, NONE, NONE, NONE];\n      } else {\n        hslB = convertColorToHwb(colorB, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n    }\n    if (hslA === null || hslB === null) {\n      return ['rgb', 0, 0, 0, 0];\n    }\n    const [hhA, ssA, llA, aaA] = hslA;\n    const [hhB, ssB, llB, aaB] = hslB;\n    const alphaNone = aaA === NONE && aaB === NONE;\n    let [[hA, sA, lA, alphaA], [hB, sB, lB, alphaB]] = normalizeColorComponents(\n      [hhA, ssA, llA, aaA],\n      [hhB, ssB, llB, aaB],\n      true\n    );\n    if (hueArc) {\n      [hA, hB] = interpolateHue(hA, hB, hueArc);\n    }\n    const factorA = alphaA * pA;\n    const factorB = alphaB * pB;\n    alpha = factorA + factorB;\n    const h = (hA * pA + hB * pB) % DEG;\n    let s, l;\n    if (alpha === 0) {\n      s = sA * pA + sB * pB;\n      l = lA * pA + lB * pB;\n    } else {\n      s = (sA * factorA + sB * factorB) / alpha;\n      l = (lA * factorA + lB * factorB) / alpha;\n      alpha = parseFloat(alpha.toFixed(3));\n    }\n    [r, g, b] = convertColorToRgb(\n      `${colorSpace}(${h} ${s} ${l})`\n    ) as ColorChannels;\n    if (format === VAL_COMP) {\n      return [\n        'srgb',\n        roundToPrecision(r / MAX_RGB, HEX),\n        roundToPrecision(g / MAX_RGB, HEX),\n        roundToPrecision(b / MAX_RGB, HEX),\n        alphaNone ? NONE : alpha * m\n      ];\n    }\n    // in lch, oklch\n  } else if (/^(?:ok)?lch$/.test(colorSpace)) {\n    let lchA, lchB;\n    if (colorSpace === 'lch') {\n      if (REG_CURRENT.test(colorA)) {\n        lchA = [NONE, NONE, NONE, NONE];\n      } else {\n        lchA = convertColorToLch(colorA, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n      if (REG_CURRENT.test(colorB)) {\n        lchB = [NONE, NONE, NONE, NONE];\n      } else {\n        lchB = convertColorToLch(colorB, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n    } else {\n      if (REG_CURRENT.test(colorA)) {\n        lchA = [NONE, NONE, NONE, NONE];\n      } else {\n        lchA = convertColorToOklch(colorA, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n      if (REG_CURRENT.test(colorB)) {\n        lchB = [NONE, NONE, NONE, NONE];\n      } else {\n        lchB = convertColorToOklch(colorB, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n    }\n    if (lchA === null || lchB === null) {\n      return ['rgb', 0, 0, 0, 0];\n    }\n    const [llA, ccA, hhA, aaA] = lchA;\n    const [llB, ccB, hhB, aaB] = lchB;\n    const lNone = llA === NONE && llB === NONE;\n    const cNone = ccA === NONE && ccB === NONE;\n    const hNone = hhA === NONE && hhB === NONE;\n    const alphaNone = aaA === NONE && aaB === NONE;\n    let [[lA, cA, hA, alphaA], [lB, cB, hB, alphaB]] = normalizeColorComponents(\n      [llA, ccA, hhA, aaA],\n      [llB, ccB, hhB, aaB],\n      true\n    );\n    if (hueArc) {\n      [hA, hB] = interpolateHue(hA, hB, hueArc);\n    }\n    const factorA = alphaA * pA;\n    const factorB = alphaB * pB;\n    alpha = factorA + factorB;\n    const h = (hA * pA + hB * pB) % DEG;\n    let l, c;\n    if (alpha === 0) {\n      l = lA * pA + lB * pB;\n      c = cA * pA + cB * pB;\n    } else {\n      l = (lA * factorA + lB * factorB) / alpha;\n      c = (cA * factorA + cB * factorB) / alpha;\n      alpha = parseFloat(alpha.toFixed(3));\n    }\n    if (format === VAL_COMP) {\n      return [\n        colorSpace,\n        lNone ? NONE : roundToPrecision(l, HEX),\n        cNone ? NONE : roundToPrecision(c, HEX),\n        hNone ? NONE : roundToPrecision(h, HEX),\n        alphaNone ? NONE : alpha * m\n      ];\n    }\n    [, r, g, b] = resolveColorValue(\n      `${colorSpace}(${l} ${c} ${h})`\n    ) as ComputedColorChannels;\n    // in lab, oklab\n  } else {\n    let labA, labB;\n    if (colorSpace === 'lab') {\n      if (REG_CURRENT.test(colorA)) {\n        labA = [NONE, NONE, NONE, NONE];\n      } else {\n        labA = convertColorToLab(colorA, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n      if (REG_CURRENT.test(colorB)) {\n        labB = [NONE, NONE, NONE, NONE];\n      } else {\n        labB = convertColorToLab(colorB, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n    } else {\n      if (REG_CURRENT.test(colorA)) {\n        labA = [NONE, NONE, NONE, NONE];\n      } else {\n        labA = convertColorToOklab(colorA, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n      if (REG_CURRENT.test(colorB)) {\n        labB = [NONE, NONE, NONE, NONE];\n      } else {\n        labB = convertColorToOklab(colorB, {\n          colorSpace,\n          format: VAL_MIX\n        });\n      }\n    }\n    if (labA === null || labB === null) {\n      return ['rgb', 0, 0, 0, 0];\n    }\n    const [llA, aaA, bbA, alA] = labA;\n    const [llB, aaB, bbB, alB] = labB;\n    const lNone = llA === NONE && llB === NONE;\n    const aNone = aaA === NONE && aaB === NONE;\n    const bNone = bbA === NONE && bbB === NONE;\n    const alphaNone = alA === NONE && alB === NONE;\n    const [[lA, aA, bA, alphaA], [lB, aB, bB, alphaB]] =\n      normalizeColorComponents(\n        [llA, aaA, bbA, alA],\n        [llB, aaB, bbB, alB],\n        true\n      );\n    const factorA = alphaA * pA;\n    const factorB = alphaB * pB;\n    alpha = factorA + factorB;\n    let l, aO, bO;\n    if (alpha === 0) {\n      l = lA * pA + lB * pB;\n      aO = aA * pA + aB * pB;\n      bO = bA * pA + bB * pB;\n    } else {\n      l = (lA * factorA + lB * factorB) / alpha;\n      aO = (aA * factorA + aB * factorB) / alpha;\n      bO = (bA * factorA + bB * factorB) / alpha;\n      alpha = parseFloat(alpha.toFixed(3));\n    }\n    if (format === VAL_COMP) {\n      return [\n        colorSpace,\n        lNone ? NONE : roundToPrecision(l, HEX),\n        aNone ? NONE : roundToPrecision(aO, HEX),\n        bNone ? NONE : roundToPrecision(bO, HEX),\n        alphaNone ? NONE : alpha * m\n      ];\n    }\n    [, r, g, b] = resolveColorValue(\n      `${colorSpace}(${l} ${aO} ${bO})`\n    ) as ComputedColorChannels;\n  }\n  return [\n    'rgb',\n    Math.round(r),\n    Math.round(g),\n    Math.round(b),\n    parseFloat((alpha * m).toFixed(3))\n  ];\n};\n","/**\n * convert\n */\n\nimport { LRUCache } from 'lru-cache';\nimport {\n  convertColorToHsl,\n  convertColorToHwb,\n  convertColorToLab,\n  convertColorToLch,\n  convertColorToOklab,\n  convertColorToOklch,\n  convertColorToRgb,\n  numberToHexString,\n  parseColorFunc,\n  parseColorValue\n} from './color';\nimport { isString } from './common';\nimport { cssCalc } from './css-calc';\nimport { cssVar } from './css-var';\nimport { resolveRelativeColor } from './relative-color';\nimport { resolve } from './resolve';\nimport { valueToJsonString } from './util';\nimport type { ColorChannels, ComputedColorChannels, IOptions } from './typedef';\n\n/* constants */\nimport { SYN_FN_CALC, SYN_FN_REL, SYN_FN_VAR, VAL_COMP } from './constant';\n\n/* regexp */\nconst REG_FN_CALC = new RegExp(SYN_FN_CALC);\nconst REG_FN_REL = new RegExp(SYN_FN_REL);\nconst REG_FN_VAR = new RegExp(SYN_FN_VAR);\n\n/* cached results */\nexport const cachedResults = new LRUCache({\n  max: 4096\n});\n\n/**\n * pre process\n * @param value - color value\n * @param [opt] - options\n * @returns value\n */\nexport const preProcess = (\n  value: string,\n  opt: IOptions = {}\n): string | null => {\n  if (isString(value)) {\n    value = value.trim();\n    if (!value) {\n      return null;\n    }\n  } else {\n    return null;\n  }\n  const { customProperty = {}, dimension = {} } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{preProcess:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as string | null;\n    }\n  }\n  if (REG_FN_VAR.test(value)) {\n    const resolvedValue = cssVar(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue;\n    } else {\n      if (cacheKey) {\n        cachedResults.set(cacheKey, null!);\n      }\n      return null;\n    }\n  }\n  if (REG_FN_REL.test(value)) {\n    value = resolveRelativeColor(value, opt) as string;\n  } else if (REG_FN_CALC.test(value)) {\n    value = cssCalc(value, opt);\n  }\n  if (value.startsWith('color-mix')) {\n    value = resolve(value, {\n      format: VAL_COMP\n    }) as string;\n  }\n  if (cacheKey) {\n    cachedResults.set(cacheKey, value);\n  }\n  return value;\n};\n\n/**\n * convert number to hex string\n * @param value - color value\n * @returns hex string: 00..ff\n */\nexport const numberToHex = (value: number): string => {\n  const cacheKey = `{numberToHex:${value}}`;\n  if (cachedResults.has(cacheKey)) {\n    return cachedResults.get(cacheKey) as string;\n  }\n  const hex = numberToHexString(value);\n  cachedResults.set(cacheKey, hex);\n  return hex;\n};\n\n/**\n * convert color to hex\n * @param value - color value\n * @param [opt] - options\n * @param [opt.alpha] - enable alpha channel\n * @returns #rrggbb | #rrggbbaa | null\n */\nexport const colorToHex = (\n  value: string,\n  opt: IOptions = {}\n): string | null => {\n  if (isString(value)) {\n    const resolvedValue = preProcess(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue.toLowerCase();\n    } else {\n      return null!;\n    }\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { alpha = false, customProperty = {}, dimension = {} } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{colorToHex:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as string | null;\n    }\n  }\n  let hex;\n  if (alpha) {\n    opt.format = 'hexAlpha';\n    hex = resolve(value, opt);\n  } else {\n    opt.format = 'hex';\n    hex = resolve(value, opt);\n  }\n  if (cacheKey) {\n    cachedResults.set(cacheKey, hex!);\n  }\n  return hex as string | null;\n};\n\n/**\n * convert color to hsl\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [h, s, l, alpha]\n */\nexport const colorToHsl = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    const resolvedValue = preProcess(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue.toLowerCase();\n    } else {\n      return [0, 0, 0, 0];\n    }\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { customProperty = {}, dimension = {} } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{colorToHsl:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as ColorChannels;\n    }\n  }\n  opt.format = 'hsl';\n  const hsl = convertColorToHsl(value, opt) as ColorChannels;\n  if (cacheKey) {\n    cachedResults.set(cacheKey, hsl);\n  }\n  return hsl;\n};\n\n/**\n * convert color to hwb\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [h, w, b, alpha]\n */\nexport const colorToHwb = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    const resolvedValue = preProcess(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue.toLowerCase();\n    } else {\n      return [0, 0, 0, 0];\n    }\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { customProperty = {}, dimension = {} } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{colorToHwb:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as ColorChannels;\n    }\n  }\n  opt.format = 'hwb';\n  const hwb = convertColorToHwb(value, opt) as ColorChannels;\n  if (cacheKey) {\n    cachedResults.set(cacheKey, hwb);\n  }\n  return hwb;\n};\n\n/**\n * convert color to lab\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [l, a, b, alpha]\n */\nexport const colorToLab = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    const resolvedValue = preProcess(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue.toLowerCase();\n    } else {\n      return [0, 0, 0, 0];\n    }\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { customProperty = {}, dimension = {} } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{colorToLab:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as ColorChannels;\n    }\n  }\n  const lab = convertColorToLab(value, opt);\n  if (cacheKey) {\n    cachedResults.set(cacheKey, lab);\n  }\n  return lab;\n};\n\n/**\n * convert color to lch\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [l, c, h, alpha]\n */\nexport const colorToLch = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    const resolvedValue = preProcess(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue.toLowerCase();\n    } else {\n      return [0, 0, 0, 0];\n    }\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { customProperty = {}, dimension = {} } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{colorToLch:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as ColorChannels;\n    }\n  }\n  const lch = convertColorToLch(value, opt) as ColorChannels;\n  if (cacheKey) {\n    cachedResults.set(cacheKey, lch);\n  }\n  return lch;\n};\n\n/**\n * convert color to oklab\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [l, a, b, alpha]\n */\nexport const colorToOklab = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    const resolvedValue = preProcess(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue.toLowerCase();\n    } else {\n      return [0, 0, 0, 0];\n    }\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { customProperty = {}, dimension = {} } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{colorToOklab:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as ColorChannels;\n    }\n  }\n  const lab = convertColorToOklab(value, opt);\n  if (cacheKey) {\n    cachedResults.set(cacheKey, lab);\n  }\n  return lab;\n};\n\n/**\n * convert color to oklch\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [l, c, h, alpha]\n */\nexport const colorToOklch = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    const resolvedValue = preProcess(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue.toLowerCase();\n    } else {\n      return [0, 0, 0, 0];\n    }\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { customProperty = {}, dimension = {} } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{colorToOklch:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as ColorChannels;\n    }\n  }\n  const lch = convertColorToOklch(value, opt) as ColorChannels;\n  if (cacheKey) {\n    cachedResults.set(cacheKey, lch);\n  }\n  return lch;\n};\n\n/**\n * convert color to rgb\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [r, g, b, alpha]\n */\nexport const colorToRgb = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    const resolvedValue = preProcess(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue.toLowerCase();\n    } else {\n      return [0, 0, 0, 0];\n    }\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { customProperty = {}, dimension = {} } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{colorToRgb:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as ColorChannels;\n    }\n  }\n  const rgb = convertColorToRgb(value, opt);\n  if (cacheKey) {\n    cachedResults.set(cacheKey, rgb);\n  }\n  return rgb;\n};\n\n/**\n * convert color to xyz\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [x, y, z, alpha]\n */\nexport const colorToXyz = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  if (isString(value)) {\n    const resolvedValue = preProcess(value, opt);\n    if (resolvedValue) {\n      value = resolvedValue.toLowerCase();\n    } else {\n      return [0, 0, 0, 0];\n    }\n  } else {\n    throw new TypeError(`${value} is not a string.`);\n  }\n  const { customProperty = {}, dimension = {} } = opt;\n  let cacheKey = '';\n  if (\n    typeof customProperty.callback !== 'function' &&\n    typeof dimension.callback !== 'function'\n  ) {\n    cacheKey = `{colorToXyz:${value},opt:${valueToJsonString(opt)}}`;\n    if (cachedResults.has(cacheKey)) {\n      return cachedResults.get(cacheKey) as ColorChannels;\n    }\n  }\n  let xyz;\n  if (value.startsWith('color(')) {\n    [, ...xyz] = parseColorFunc(value, opt) as ComputedColorChannels;\n  } else {\n    [, ...xyz] = parseColorValue(value, opt) as ComputedColorChannels;\n  }\n  if (cacheKey) {\n    cachedResults.set(cacheKey, xyz);\n  }\n  return xyz as ColorChannels;\n};\n\n/**\n * convert color to xyz-d50\n * @param value - color value\n * @param [opt] - options\n * @returns ColorChannels - [x, y, z, alpha]\n */\nexport const colorToXyzD50 = (\n  value: string,\n  opt: IOptions = {}\n): ColorChannels => {\n  opt.d50 = true;\n  return colorToXyz(value, opt);\n};\n\n/* convert */\nexport const convert = {\n  colorToHex,\n  colorToHsl,\n  colorToHwb,\n  colorToLab,\n  colorToLch,\n  colorToOklab,\n  colorToOklch,\n  colorToRgb,\n  colorToXyz,\n  colorToXyzD50,\n  numberToHex\n};\n"],"names":["perf","warned","PROCESS","emitWarning","msg","type","code","fn","AC","AS","_a","__publicField","_","warnACPolyfill","reason","_b","printACPolyfillWarning","shouldWarn","isPosInt","n","getUintArray","max","ZeroArray","size","_constructing","_Stack","HeapCls","__privateGet","__privateSet","s","__privateAdd","Stack","_max","_maxSize","_dispose","_disposeAfter","_fetchMethod","_memoMethod","_size","_calculatedSize","_keyMap","_keyList","_valList","_next","_prev","_head","_tail","_free","_disposed","_sizes","_starts","_ttls","_hasDispose","_hasFetchMethod","_hasDisposeAfter","_LRUCache_instances","initializeTTLTracking_fn","_updateItemAge","_statusTTL","_setItemTTL","_isStale","initializeSizeTracking_fn","_removeItemSize","_addItemSize","_requireSize","indexes_fn","rindexes_fn","isValidIndex_fn","evict_fn","backgroundFetch_fn","isBackgroundFetch_fn","connect_fn","moveToTail_fn","delete_fn","clear_fn","_LRUCache","options","_i","_s","_st","_k","_v","sizeCalculation","ttl","ttlResolution","ttlAutopurge","updateAgeOnGet","updateAgeOnHas","allowStale","dispose","disposeAfter","noDisposeOnSet","noUpdateTTL","maxSize","maxEntrySize","fetchMethod","memoMethod","noDeleteOnFetchRejection","noDeleteOnStaleGet","allowStaleOnFetchRejection","allowStaleOnFetchAbort","ignoreFetchAbort","UintArray","__privateMethod","c","p","k","index","context","key","i","getOptions","v","value","thisp","deleted","entry","start","remain","arr","age","setOptions","_c","_d","_e","status","__privateWrapper","oldVal","oldValue","dt","task","val","hasOptions","peekOptions","fetchOptions","forceRefresh","signal","stale","isStale","staleVal","memoOptions","vv","fetching","ttls","starts","t","cachedNow","getNow","sizes","free","head","ac","fetchOpts","cb","updateCache","aborted","ignoreAbort","fetchFail","bf","eb","er","allowStaleAborted","noDelete","pcall","res","rej","fmp","b","pi","ni","LRUCache","isString","o","isStringOrNumber","ParseError","e","ParseErrorWithToken","r","stringify","checkIfFourCodePointsWouldStartCDO","isDigitCodePoint","isUppercaseLetterCodePoint","isLowercaseLetterCodePoint","isHexDigitCodePoint","isLetterCodePoint","isIdentStartCodePoint","isNonASCII_IdentCodePoint","isIdentCodePoint","isSurrogate","isNewLine","isWhitespace","checkIfTwoCodePointsAreAValidEscape","checkIfThreeCodePointsWouldStartAnIdentSequence","checkIfThreeCodePointsWouldStartANumber","checkIfTwoCodePointsStartAComment","checkIfThreeCodePointsWouldStartCDC","a","u","mirrorVariantType","mirrorVariant","consumeComment","consumeEscapedCodePoint","consumeIdentSequence","consumeHashToken","consumeNumber","consumeNumericToken","consumeWhiteSpace","Reader","consumeStringToken","checkIfCodePointsMatchURLIdent","consumeBadURL","consumeUrlToken","consumeIdentLikeToken","checkIfThreeCodePointsWouldStartAUnicodeRange","consumeUnicodeRangeToken","tokenize","tokenizer","d","noop","mutateUnit","ensureThatValueRoundTripsAsIdent","insertEscapedCodePoint","isToken","isTokenNumeric","isTokenWhiteSpaceOrComment","isTokenComma","isTokenComment","isTokenDelim","isTokenDimension","isTokenEOF","isTokenFunction","isTokenHash","isTokenIdent","isTokenNumber","isTokenPercentage","isTokenWhitespace","isTokenOpenParen","isTokenCloseParen","isTokenOpenSquare","isTokenOpenCurly","f","walkerIndexGenerator","consumeComponentValue","consumeSimpleBlock","consumeFunction","consumeWhitespace","l","TokenNode","ContainerNodeBaseClass","FunctionNode","h","consumeAllCommentsAndWhitespace","SimpleBlockNode","m","WhitespaceNode","CommentNode","parseComponentValue","parseCommaSeparatedListOfComponentValues","forEach","walk","replaceComponentValues","isSimpleBlockNode","isFunctionNode","isWhitespaceNode","isCommentNode","isWhiteSpaceOrCommentNode","isTokenNode","E","toLowerCaseAZ","S","I","y","M","T","x","P","O","W","L","U","Z","$","z","q","G","convertUnit","toCanonicalUnit","addition","C","g","division","isCalculation","solve","multiplication","resolveGlobalsAndConstants","D","unary","B","resultToCalculation","dimensionToCalculation","percentageToCalculation","numberToCalculation","solveACos","solveASin","solveATan","isDimensionOrNumber","arrayOfSameNumeric","twoOfSameNumeric","solveATan2","solveAbs","solveClamp","solveCos","solveExp","solveHypot","solveMax","solveMin","solveMod","solvePow","solveRem","solveRound","solveSign","solveSin","solveSqrt","solveTan","subtraction","solveLog","j","isNone","solveRandom","sfc32","crc32","N","R","singleNodeSolver","twoCommaSeparatedNodesSolver","calc$1","F","calcWrapper","maxWrapper","variadicNodesSolver","twoCommaSeparatedArguments","singleArgument","V","A","variadicArguments","patchNaN","patchInfinity","patchMinusZero","patchPrecision","patchCanonicalUnit","patchCalcResult","tokenizeGlobals","calc","calcFromComponentValues","w","Y","_DIGIT","_COMPARE","_EXPO","_SIGN","_STEP","_TRIG","_MATH","_CALC","_VAR","ANGLE","NUM","NONE","PCT","SYN_FN_CALC","SYN_FN_MATH_START","SYN_FN_VAR","SYN_FN_VAR_START","_ALPHA","_ALPHA_LV3","_COLOR_FUNC","_COLOR_KEY","_CS_HUE","_CS_HUE_ARC","_NUM_ANGLE","_NUM_ANGLE_NONE","_NUM_PCT_NONE","CS_HUE","CS_HUE_CAPT","CS_LAB","CS_LCH","CS_SRGB","CS_RGB","CS_XYZ","CS_MIX","FN_COLOR","FN_MIX","FN_REL","FN_REL_CAPT","FN_VAR","SYN_FN_COLOR","SYN_FN_REL","SYN_HSL","SYN_HSL_LV3","SYN_LCH","SYN_MOD","SYN_RGB_LV3","SYN_COLOR_TYPE","SYN_MIX_PART","SYN_MIX","SYN_MIX_CAPT","VAL_COMP","VAL_MIX","VAL_SPEC","PAREN_CLOSE","COMMENT","DIM","EOF","FUNC","PAREN_OPEN","W_SPACE","TokenType","TRIA","HEX","MAX_PCT","REG_FN_CALC","REG_FN_MATH_START","REG_FN_VAR","REG_FN_VAR_START","REG_OPERATOR","REG_TYPE_DIM","REG_TYPE_DIM_PCT","REG_TYPE_PCT","cachedResults","_hasNum","_numSum","_numMul","_hasPct","_pctSum","_pctMul","_hasDim","_dimSum","_dimSub","_dimMul","_dimDiv","_hasEtc","_etcSum","_etcSub","_etcMul","_etcDiv","Calculator","values","valA","unitA","valB","unitB","num","roundToPrecision","dim","mul","div","sum","sub","item","sortCalcValues","finalize","end","sortedValues","cal","operator","sortedValue","numValue","strValue","resolvedValue","finalizedValues","serializeCalc","opt","customProperty","dimension","format","cacheKey","valueToJsonString","items","token","startIndex","endIndex","slicedValues","serializedValue","serializedCalc","resolveDimension","detail","unit","relativeValue","pixelValue","parseTokens","tokens","mathFunc","nest","lastValue","cssCalc","IDENT","resolveCustomProperty","restTokens","resolveAsColor","isColor","resolvedItem","cssVar","color","multiplyMatrices","D50_to_D65","D65_to_D50","HSL_to_sRGB","HSL_to_sRGB_channel","HWB_to_sRGB","LCH_to_Lab","Lab_to_LCH","Lab_to_XYZ","OKLCH_to_OKLab","OKLab_to_OKLCH","OKLab_to_XYZ","XYZ_to_Lab","compute_f","XYZ_to_OKLab","XYZ_to_lin_P3","XYZ_to_lin_sRGB","gam_2020_channel","gam_sRGB","gam_sRGB_channel","gam_P3","gam_ProPhoto_channel","gam_a98rgb_channel","X","lin_2020_channel","lin_sRGB","lin_sRGB_channel","lin_P3","lin_P3_to_XYZ","lin_ProPhoto_channel","lin_a98rgb_channel","lin_sRGB_to_XYZ","sRGB_to_HSL","sRGB_to_Hue","sRGB_to_XYZ_D50","XYZ_D50_to_sRGB","HSL_to_XYZ_D50","XYZ_D50_to_HSL","HWB_to_XYZ_D50","XYZ_D50_to_HWB","Lab_to_XYZ_D50","XYZ_D50_to_Lab","LCH_to_XYZ_D50","XYZ_D50_to_LCH","OKLab_to_XYZ_D50","XYZ_D50_to_OKLab","OKLCH_to_XYZ_D50","XYZ_D50_to_OKLCH","lin_sRGB_to_XYZ_D50","XYZ_D50_to_lin_sRGB","a98_RGB_to_XYZ_D50","XYZ_D50_to_a98_RGB","P3_to_XYZ_D50","XYZ_D50_to_P3","rec_2020_to_XYZ_D50","XYZ_D50_to_rec_2020","ProPhoto_RGB_to_XYZ_D50","XYZ_D50_to_ProPhoto","XYZ_D65_to_XYZ_D50","XYZ_D50_to_XYZ_D65","inGamut","clip","mapGamutRayTrace","rayTraceBox","luminance","contrast_ratio_wcag_2_1","se","ue","convertNaNToZero","colorData_to_XYZ_D50","ce","colorDataTo","H","carryForwardMissingComponents","convertPowerlessComponentsToMissingComponents","reducePrecision","normalizeRelativeColorDataChannels","dummyNumberToken","noneToZeroInRelativeColorDataChannels","normalize","ie","normalize_Color_ChannelValues","he","color$1","J","Q","ee","ae","te","le","colorSpaceNameToColorNotation","ne","me","pe","Ne","colorMix","colorMixPolar","colorMixComponents","colorMixRectangular","fillInMissingComponent","premultiply","interpolate","un_premultiply","hex","normalizeHue","normalize_legacy_HSL_ChannelValues","normalize_modern_HSL_ChannelValues","threeChannelLegacySyntax","threeChannelSpaceSeparated","hsl","hslCommaSeparated","hslSpaceSeparated","normalize_HWB_ChannelValues","normalize_Lab_ChannelValues","lab","normalize_LCH_ChannelValues","lch","be","namedColor","normalize_OKLab_ChannelValues","oklab","normalize_OKLCH_ChannelValues","oklch","normalize_legacy_sRGB_ChannelValues","normalize_modern_sRGB_ChannelValues","rgb","rgbCommaSeparated","rgbSpaceSeparated","XYZ_D50_to_sRGB_Gamut","oklch_to_lin_srgb","lin_srgb_to_oklch","K","contrastColor","KEY_NONE","SyntaxFlag","OCT","DEC","MAX_RGB","REG_COLOR_CAPT","REG_CS_HSL","REG_CS_CIE","REG_FN_REL","REG_FN_REL_CAPT","REG_FN_REL_START","resolveColorChannels","colorSpace","colorChannel","channels","func","detailValue","channel","channelValues","extractOriginColor","currentColor","originColor","restValue","NAMED_COLORS","resolvedOriginColor","resolve","channelValue","v1","v2","v3","v4","tokenValue","resolveRelativeColor","components","parsedComponents","colorParser","alphaComponent","channelsComponent","colorNotation","syntaxFlags","alpha","hasNone","colorToRgb","cs","RGB_TRANSPARENT","resolveColorMix","resolveColorFunc","resolveColorValue","scs","rr","gg","bb","aa","convertRgbToHex","DEG","DEG_HALF","REG_COLOR","REG_MIX","_key","replacedValue","bit","interpolateHue","hueA","hueB","arc","PPTH","HALF","DUO","QUAD","DOZ","SEXA","POW_SQR","POW_CUBE","POW_LINEAR","LINEAR_COEF","LINEAR_OFFSET","LAB_L","LAB_A","LAB_B","LAB_EPSILON","LAB_KAPPA","D50","MATRIX_D50_TO_D65","MATRIX_D65_TO_D50","MATRIX_L_RGB_TO_XYZ","MATRIX_XYZ_TO_L_RGB","MATRIX_XYZ_TO_LMS","MATRIX_LMS_TO_XYZ","MATRIX_OKLAB_TO_LMS","MATRIX_LMS_TO_OKLAB","MATRIX_P3_TO_XYZ","MATRIX_REC2020_TO_XYZ","MATRIX_A98_TO_XYZ","MATRIX_PROPHOTO_TO_XYZ_D50","REG_CS_HUE","REG_CS_XYZ","REG_CURRENT","REG_FN_COLOR","REG_HSL","REG_HWB","REG_LAB","REG_LCH","REG_MIX_CAPT","REG_MIX_NEST","REG_OKLAB","REG_OKLCH","REG_SPEC","validateColorComponents","minLength","maxLength","minRange","maxRange","validateRange","transformMatrix","mtx","vct","skip","r1c1","r1c2","r1c3","r2c1","r2c2","r2c3","r3c1","r3c2","r3c3","p1","p2","p3","normalizeColorComponents","colorA","colorB","validatedColorA","validatedColorB","numberToHexString","angleToDeg","angle","GRAD","RAD","reg","deg","parseAlpha","parseHexAlpha","alphaMap","transformRgbToLinearRgb","COND_POW","transformRgbToXyz","transformLinearRgbToRgb","round","transformXyzToRgb","xyz","transformXyzToHsl","min","transformXyzToHwb","bk","transformXyzToOklab","xyzLms","lPct","transformXyzToOklch","transformXyzD50ToRgb","xyzD65","transformXyzD50ToLab","xyzD50","f0","f1","f2","transformXyzD50ToLch","convertHexToRgb","convertHexToLinearRgb","convertHexToXyz","parseRgb","parseHsl","sa","rk","gk","parseHwb","wh","factor","parseLab","COEF_PCT","fl","fa","fb","powFl","powFa","powFb","parseLch","parseOklab","parseOklch","cc","parseColorFunc","d50","linearRgb","ALPHA","BETA","REC_COEF","cl","POW_A98","parseColorValue","convertColorToLinearRgb","convertColorToRgb","convertColorToXyz","convertColorToHsl","convertColorToHwb","convertColorToLab","convertColorToLch","convertColorToOklab","convertColorToOklch","nestedItems","regColorSpace","hueArc","pctA","pctB","itemA","itemB","regA","regB","itemPart","itemPartCapt","regItemPart","regLastItem","regColorPart","colorPartA","colorPartB","pA","pB","valueA","valueB","rgbA","rgbB","rrA","ggA","bbA","aaA","rrB","ggB","bbB","aaB","rNone","gNone","bNone","alphaNone","rA","gA","bA","alphaA","rB","gB","bB","alphaB","factorA","factorB","xyzA","xyzB","xxA","yyA","zzA","xxB","yyB","zzB","xNone","yNone","zNone","xA","yA","zA","xB","yB","zB","hslA","hslB","hhA","ssA","llA","hhB","ssB","llB","hA","sA","lA","hB","sB","lB","lchA","lchB","ccA","ccB","lNone","cNone","hNone","cA","cB","labA","labB","alA","alB","aNone","aA","aB","aO","bO","preProcess","numberToHex","colorToHex","colorToHsl","colorToHwb","hwb","colorToLab","colorToLch","colorToOklab","colorToOklch","colorToXyz","colorToXyzD50","convert"],"mappings":"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","x_google_ignoreList":[0,2,3,4,8,9]}